{"ast":null,"code":"import _regeneratorRuntime from \"@babel/runtime-corejs2/regenerator\";\nvar __jsx = React.createElement;\nimport React, { useEffect, useCallback } from \"react\";\nimport { Form, Button, Input, Card, Icon, List } from \"antd\";\nimport { useSelector, useDispatch } from 'react-redux';\nimport NicknameEditForm from '../components/NicknameEditForm'; // 폼은 state가 빈번하게 변하므로 분리를 해주자\n\nimport PostCard from '../components/PostCard';\nimport { LOAD_FOLLOWERS_REQUEST, LOAD_FOLLOWINGS_REQUEST, UNFOLLOW_USER_REQUEST, REMOVE_FOLLOWER_REQUEST } from \"../reducers/user\";\nimport { LOAD_USER_POSTS_REQUEST } from \"../reducers/post\";\n\nvar Profile = function Profile() {\n  var dispatch = useDispatch();\n\n  var _useSelector = useSelector(function (state) {\n    return state.user;\n  }),\n      followerList = _useSelector.followerList,\n      followingList = _useSelector.followingList,\n      hasMoreFollower = _useSelector.hasMoreFollower,\n      hasMoreFollowing = _useSelector.hasMoreFollowing;\n\n  var _useSelector2 = useSelector(function (state) {\n    return state.post;\n  }),\n      mainPosts = _useSelector2.mainPosts;\n\n  var onUnfollow = useCallback(function (userId) {\n    return function () {\n      dispatch({\n        type: UNFOLLOW_USER_REQUEST,\n        data: userId\n      });\n    };\n  }, []);\n  var onRemoveFollower = useCallback(function (userId) {\n    return function () {\n      dispatch({\n        type: REMOVE_FOLLOWER_REQUEST,\n        data: userId\n      });\n    };\n  }, []);\n  var loadMoreFollowings = useCallback(function () {\n    dispatch({\n      type: LOAD_FOLLOWINGS_REQUEST,\n      offset: followingList.length // (더보기 기능:3개씩) 기본값 limit = 3(처음 데이터 개수) > 3개씩 늘어남\n\n    });\n  }, [followingList.length]);\n  var loadMoreFollowers = useCallback(function () {\n    dispatch({\n      type: LOAD_FOLLOWERS_REQUEST,\n      offset: followerList.length\n    });\n  }, [followerList.length]);\n  return __jsx(\"div\", null, __jsx(NicknameEditForm, null), __jsx(List, {\n    style: {\n      marginBottom: '20px'\n    },\n    grid: {\n      gutter: 4,\n      xs: 2,\n      md: 3\n    },\n    header: __jsx(\"div\", null, \"\\uD314\\uB85C\\uC789 \\uBAA9\\uB85D\"),\n    size: \"small\",\n    loadMore: hasMoreFollowing && __jsx(Button, {\n      style: {\n        width: '100%'\n      },\n      onClick: loadMoreFollowings\n    }, \"\\uB354 \\uBCF4\\uAE30\"),\n    bordered: true,\n    dataSource: followingList,\n    renderItem: function renderItem(item) {\n      return __jsx(List.Item, {\n        style: {\n          marginTop: '20px'\n        }\n      }, __jsx(Card, {\n        actions: [__jsx(Icon, {\n          key: \"stop\",\n          type: \"stop\",\n          onClick: onUnfollow(item.id)\n        })]\n      }, __jsx(Card.Meta, {\n        description: item.nickname\n      })));\n    }\n  }), __jsx(List, {\n    style: {\n      marginBottom: '20px'\n    },\n    grid: {\n      gutter: 4,\n      xs: 2,\n      md: 3\n    },\n    header: __jsx(\"div\", null, \"\\uD314\\uB85C\\uC6CC \\uBAA9\\uB85D\"),\n    loadMore: hasMoreFollower && __jsx(Button, {\n      style: {\n        width: '100%'\n      },\n      onClick: loadMoreFollowers\n    }, \"\\uB354 \\uBCF4\\uAE30\"),\n    bordered: true,\n    dataSource: followerList,\n    renderItem: function renderItem(item) {\n      return __jsx(List.Item, {\n        style: {\n          marginTop: '20px'\n        }\n      }, __jsx(Card, {\n        actions: [__jsx(Icon, {\n          key: \"stop\",\n          type: \"stop\",\n          onClick: onRemoveFollower(item.id)\n        })]\n      }, __jsx(Card.Meta, {\n        description: item.nickname\n      })));\n    }\n  }), __jsx(\"div\", null, mainPosts ? mainPosts.map(function (c) {\n    return __jsx(PostCard, {\n      key: +c.createdAt,\n      post: c\n    });\n  }) : null));\n};\n\nProfile.getInitialProps = function _callee(context) {\n  var state;\n  return _regeneratorRuntime.async(function _callee$(_context) {\n    while (1) {\n      switch (_context.prev = _context.next) {\n        case 0:\n          state = context.store.getState();\n          context.store.dispatch({\n            type: LOAD_FOLLOWERS_REQUEST,\n            data: state.user.me && state.user.me.id\n          });\n          context.store.dispatch({\n            type: LOAD_FOLLOWINGS_REQUEST,\n            data: state.user.me && state.user.me.id\n          });\n          context.store.dispatch({\n            type: LOAD_USER_POSTS_REQUEST,\n            data: state.user.me && state.user.me.id\n          });\n\n        case 4:\n        case \"end\":\n          return _context.stop();\n      }\n    }\n  });\n};\n\nexport default Profile;","map":{"version":3,"sources":["C:/Users/Song/Desktop/projectpf/Ver2/frontend/pages/profile.js"],"names":["React","useEffect","useCallback","Form","Button","Input","Card","Icon","List","useSelector","useDispatch","NicknameEditForm","PostCard","LOAD_FOLLOWERS_REQUEST","LOAD_FOLLOWINGS_REQUEST","UNFOLLOW_USER_REQUEST","REMOVE_FOLLOWER_REQUEST","LOAD_USER_POSTS_REQUEST","Profile","dispatch","state","user","followerList","followingList","hasMoreFollower","hasMoreFollowing","post","mainPosts","onUnfollow","userId","type","data","onRemoveFollower","loadMoreFollowings","offset","length","loadMoreFollowers","marginBottom","gutter","xs","md","width","item","marginTop","id","nickname","map","c","createdAt","getInitialProps","context","store","getState","me"],"mappings":"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","sourcesContent":["import React, { useEffect, useCallback } from \"react\";\r\nimport { Form,  Button, Input, Card, Icon , List } from \"antd\";\r\nimport { useSelector , useDispatch} from 'react-redux';\r\nimport NicknameEditForm from '../components/NicknameEditForm'; // 폼은 state가 빈번하게 변하므로 분리를 해주자\r\nimport PostCard from '../components/PostCard';\r\nimport { LOAD_FOLLOWERS_REQUEST, LOAD_FOLLOWINGS_REQUEST, UNFOLLOW_USER_REQUEST, REMOVE_FOLLOWER_REQUEST } from \"../reducers/user\";\r\nimport { LOAD_USER_POSTS_REQUEST } from \"../reducers/post\";\r\nconst Profile = () => {\r\n  const dispatch = useDispatch();\r\n  const { followerList, followingList, hasMoreFollower, hasMoreFollowing } = useSelector(state => state.user);\r\n  const { mainPosts } = useSelector(state => state.post);\r\n  \r\n  const onUnfollow = useCallback(userId => () => {\r\n    dispatch({\r\n      type: UNFOLLOW_USER_REQUEST,\r\n      data: userId,\r\n    })\r\n  },[])\r\n  const onRemoveFollower = useCallback(userId => () => {\r\n    dispatch({\r\n      type: REMOVE_FOLLOWER_REQUEST,\r\n      data: userId,\r\n    })\r\n  },[])\r\n  const loadMoreFollowings = useCallback( ()=>{\r\n    dispatch({\r\n      type: LOAD_FOLLOWINGS_REQUEST,\r\n      offset: followingList.length, // (더보기 기능:3개씩) 기본값 limit = 3(처음 데이터 개수) > 3개씩 늘어남\r\n    })\r\n  },[ followingList.length])\r\n  const loadMoreFollowers = useCallback( ()=>{\r\n    dispatch({\r\n      type: LOAD_FOLLOWERS_REQUEST,\r\n      offset: followerList.length,\r\n    })\r\n  },[followerList.length])\r\n  return (\r\n    <div>\r\n      <NicknameEditForm />\r\n      <List \r\n        style ={{ marginBottom : '20px'}}  \r\n        grid={{ gutter :4, xs:2, md:3}}\r\n        header={<div>팔로잉 목록</div>}\r\n        size =\"small\"\r\n        loadMore={hasMoreFollowing && <Button style={{width: '100%'}} onClick={loadMoreFollowings}>더 보기</Button>}\r\n        bordered\r\n        dataSource={followingList}\r\n        renderItem={item => (\r\n          <List.Item style ={{ marginTop :'20px'}}>\r\n            <Card actions={[<Icon key=\"stop\" type=\"stop\" onClick={onUnfollow(item.id)}></Icon>]}> \r\n              <Card.Meta description={item.nickname}></Card.Meta> \r\n            </Card>\r\n          </List.Item>\r\n        )}\r\n      >\r\n     </List>\r\n     <List \r\n        style ={{ marginBottom : '20px'}}  \r\n        grid={{ gutter :4, xs:2, md:3}}\r\n        header={<div>팔로워 목록</div>}\r\n        loadMore={hasMoreFollower && <Button style={{width: '100%'}} onClick={loadMoreFollowers}>더 보기</Button>}\r\n        bordered\r\n        dataSource={followerList}\r\n        renderItem={item => (\r\n          <List.Item style ={{ marginTop :'20px'}}>\r\n            {/* 배열안에 jsx 쓸때는 key를 꼭 넣어주자( []:반복문을 의미, 넣어줘야 인식됨) */}\r\n            <Card actions={[<Icon key=\"stop\" type=\"stop\" onClick={onRemoveFollower(item.id)}></Icon>]}> \r\n              <Card.Meta description={item.nickname}></Card.Meta> \r\n            </Card>\r\n          </List.Item>\r\n        )}>\r\n     </List>\r\n     <div>\r\n        {mainPosts ? mainPosts.map(c => (\r\n            <PostCard key={+c.createdAt} post={c}></PostCard> \r\n        )): null} \r\n     </div> \r\n    </div>\r\n  );\r\n};\r\n\r\nProfile.getInitialProps= async (context)=>{\r\n  const state = context.store.getState();\r\n  context.store.dispatch({\r\n    type: LOAD_FOLLOWERS_REQUEST,\r\n    data: state.user.me && state.user.me.id,\r\n  });\r\n  context.store.dispatch({\r\n    type: LOAD_FOLLOWINGS_REQUEST,\r\n    data: state.user.me && state.user.me.id,\r\n  });\r\n  context.store.dispatch({\r\n    type: LOAD_USER_POSTS_REQUEST,\r\n    data: state.user.me && state.user.me.id,\r\n  });\r\n}\r\n\r\nexport default Profile;\r\n"]},"metadata":{},"sourceType":"module"}