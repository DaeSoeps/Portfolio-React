{"ast":null,"code":"import _taggedTemplateLiteral from \"@babel/runtime-corejs2/helpers/esm/taggedTemplateLiteral\";\nvar __jsx = React.createElement;\n\nfunction _templateObject() {\n  var data = _taggedTemplateLiteral([\"\\n  color: red;\\n\"]);\n\n  _templateObject = function _templateObject() {\n    return data;\n  };\n\n  return data;\n}\n\nimport React, { useState, useCallback, useEffect } from \"react\";\nimport { Form, Input, Checkbox, Button } from \"antd\";\nimport { SIGN_UP_REQUEST, isSigningUp } from \"../reducers/user\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport Router from 'next/router';\nimport styled from 'styled-components';\nvar SignupError = styled.div(_templateObject()); // Coustom hook 훅에 기능을 추가해서 새로 만듬 ( 중복방지 등 )\n// useState(hook) 는 커스텀 훅 제외한 곳에서 사용하지 않기\n\nexport var userInput = function userInput() {\n  var initValue = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : null;\n\n  var _useState = useState(initValue),\n      value = _useState[0],\n      setter = _useState[1];\n\n  var handler = useCallback(function (e) {\n    setter(e.target.value);\n  }, []);\n  return [value, handler];\n}; ////////////////////////////////\n\nvar Signup = function Signup() {\n  var _useState2 = useState(\"\"),\n      id = _useState2[0],\n      setId = _useState2[1];\n\n  var _useState3 = useState(\"\"),\n      nick = _useState3[0],\n      setNick = _useState3[1];\n\n  var _useState4 = useState(\"\"),\n      password = _useState4[0],\n      setPassword = _useState4[1];\n\n  var _useState5 = useState(\"\"),\n      passwordCheck = _useState5[0],\n      setPasswordCheck = _useState5[1];\n\n  var _useState6 = useState(false),\n      term = _useState6[0],\n      setTerm = _useState6[1];\n\n  var _useState7 = useState(false),\n      passwrodError = _useState7[0],\n      setpasswordError = _useState7[1];\n\n  var _useState8 = useState(false),\n      termError = _useState8[0],\n      setTermError = _useState8[1];\n\n  var dispatch = useDispatch();\n\n  var _useSelector = useSelector(function (state) {\n    return state.user;\n  }),\n      isSigningUp = _useSelector.isSigningUp,\n      me = _useSelector.me;\n\n  useEffect(function () {\n    if (me) {\n      alert('로그인 성공');\n      Router.push('/');\n    }\n  }, [me && me.id]);\n  var onSubmit = useCallback(function (e) {\n    e.preventDefault();\n    console.log({\n      id: id,\n      nick: nick,\n      password: password,\n      passwordCheck: passwordCheck,\n      term: term\n    });\n\n    if (password !== passwordCheck) {\n      return setpasswordError(true);\n    }\n\n    if (!term) {\n      return setTermError(true);\n    }\n\n    return dispatch({\n      type: SIGN_UP_REQUEST,\n      data: {\n        userId: id,\n        password: password,\n        nickname: nick\n      }\n    });\n  }, [id, nick, password, passwordCheck, term] // usecallback 안에서는 안에 쓰이는 state 전부 넣어주자\n  );\n\n  var onChangeId = function onChangeId(e) {\n    setId(e.target.value);\n  };\n\n  var onChangeNick = function onChangeNick(e) {\n    setNick(e.target.value);\n  };\n\n  var onChangePassword = function onChangePassword(e) {\n    setPassword(e.target.value);\n  };\n\n  var onChangePasswordChk = useCallback(function (e) {\n    setpasswordError(e.target.value !== password);\n    setPasswordCheck(e.target.value);\n  }, [password]);\n  var onChangeTerm = useCallback(function (e) {\n    setTermError(false);\n    setTerm(e.target.checked);\n  }, []);\n\n  if (me) {\n    return null;\n  }\n\n  return __jsx(React.Fragment, null, __jsx(Form, {\n    onSubmit: onSubmit,\n    style: {\n      padding: 10\n    }\n  }, __jsx(\"div\", null, __jsx(\"label\", {\n    htmlFor: \"user-id\"\n  }, \"\\uC544\\uC774\\uB514\"), __jsx(\"br\", null), __jsx(Input, {\n    name: \"user-id\",\n    required: true,\n    value: id,\n    onChange: onChangeId\n  })), __jsx(\"div\", null, __jsx(\"label\", {\n    htmlFor: \"user-nick\"\n  }, \"\\uB2C9\\uB124\\uC784\"), __jsx(Input, {\n    name: \"user-nick\",\n    required: true,\n    value: nick,\n    onChange: onChangeNick\n  })), __jsx(\"div\", null, __jsx(\"label\", {\n    htmlFor: \"user-pass\"\n  }, \"\\uBE44\\uBC00\\uBC88\\uD638\"), __jsx(\"br\", null), __jsx(Input, {\n    name: \"user-pass\",\n    type: \"password\",\n    required: true,\n    value: password,\n    onChange: onChangePassword\n  })), __jsx(\"div\", null, __jsx(\"label\", {\n    htmlFor: \"user-pass-chk\"\n  }, \"\\uBE44\\uBC00\\uBC88\\uD638 \\uCCB4\\uD06C\"), __jsx(\"br\", null), __jsx(Input, {\n    name: \"user-pass-chk\",\n    type: \"password\",\n    required: true,\n    value: passwordCheck,\n    onChange: onChangePasswordChk\n  }), passwrodError && __jsx(SignupError, null, \" \\uBE44\\uBC00\\uBC88\\uD638\\uAC00 \\uC77C\\uCE58\\uD558\\uC9C0 \\uC54A\\uC2B5\\uB2C8\\uB2E4.\")), __jsx(\"div\", null, __jsx(Checkbox, {\n    name: \"user-term\",\n    checked: term,\n    onChange: onChangeTerm\n  }, \"\\uB3D9\\uC758\\uD569\\uB2C8\\uB2E4.\"), termError && __jsx(SignupError, null, \" \\uC57D\\uAD00\\uC5D0 \\uB3D9\\uC758 \\uD574\\uC8FC\\uC138\\uC694.\")), __jsx(\"div\", null, __jsx(\"div\", {\n    style: {\n      marginTop: 10\n    }\n  }), __jsx(Button, {\n    type: \"primary\",\n    htmlType: \"submit\",\n    loading: isSigningUp\n  }, \"\\uAC00\\uC785\\uD558\\uAE30\"))));\n};\n\nexport default Signup;","map":null,"metadata":{},"sourceType":"module"}