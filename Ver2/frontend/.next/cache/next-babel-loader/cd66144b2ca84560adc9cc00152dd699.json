{"ast":null,"code":"import _Object$defineProperty from \"@babel/runtime-corejs2/core-js/object/define-property\";\nimport _Object$defineProperties from \"@babel/runtime-corejs2/core-js/object/define-properties\";\nimport _Object$getOwnPropertyDescriptors from \"@babel/runtime-corejs2/core-js/object/get-own-property-descriptors\";\nimport _Object$getOwnPropertyDescriptor from \"@babel/runtime-corejs2/core-js/object/get-own-property-descriptor\";\nimport _Object$getOwnPropertySymbols from \"@babel/runtime-corejs2/core-js/object/get-own-property-symbols\";\nimport _Object$keys from \"@babel/runtime-corejs2/core-js/object/keys\";\nimport _toConsumableArray from \"@babel/runtime-corejs2/helpers/esm/toConsumableArray\";\nimport _defineProperty from \"@babel/runtime-corejs2/helpers/esm/defineProperty\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = _Object$keys(object); if (_Object$getOwnPropertySymbols) { var symbols = _Object$getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return _Object$getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (_Object$getOwnPropertyDescriptors) { _Object$defineProperties(target, _Object$getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { _Object$defineProperty(target, key, _Object$getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nexport var initialState = {\n  mainPosts: [{\n    id: 1,\n    User: {\n      id: 1,\n      nickname: '제로초'\n    },\n    content: '첫번째 게시글',\n    img: 'https://www.google.com/imgres?imgurl=http%3A%2F%2Fnewsimg.hankookilbo.com%2F2019%2F04%2F29%2F201904291390027161_3.jpg&imgrefurl=https%3A%2F%2Fwww.hankookilbo.com%2FNews%2FRead%2F201904291390027161&tbnid=NpMi5nVF1QK1MM&vet=12ahUKEwjR1LT9oPfoAhUEUJQKHa2LAhMQMygBegUIARD-Ag..i&docid=k3mACyoxPXAFMM&w=680&h=448&q=%EA%B3%A0%EC%96%91%EC%9D%B4&ved=2ahUKEwjR1LT9oPfoAhUEUJQKHa2LAhMQMygBegUIARD-Ag',\n    Comments: []\n  }],\n  // 화면에 보일 포스트들\n  imagePaths: [],\n  // 미리보기 이미지 경로\n  addPostErrorReason: false,\n  // 포스트 업로드 실패 사유\n  isAddingPost: false,\n  // 포스트 업로드 중 \n  postAdded: false,\n  // 포스트 업로드 성공\n  isAddingComment: false,\n  addCommentErrorReason: '',\n  commentAdded: false\n};\nvar dummyPost = {\n  id: 2,\n  User: {\n    id: 1,\n    nickname: '게스트'\n  },\n  content: '나는 더미입니다.',\n  Comments: []\n};\nvar dummyComment = {\n  User: {\n    id: 1,\n    nickname: 'dummy'\n  },\n  createdAt: new Date(),\n  content: '더미 댓글입니다.'\n}; //메인 포스트를 로딩\n\nexport var LOAD_MAIN_POSTS_REQUEST = 'LOAD_MAIN_POSTS_REQUEST';\nexport var LOAD_MAIN_POSTS_SUCCESS = 'LOAD_MAIN_POSTS_SUCCESS';\nexport var LOAD_MAIN_POSTS_FAILURE = 'LOAD_MAIN_POSTS_FAILURE'; //해시태그 검색했을때 결과 로딩\n\nexport var LOAD_HASHTAG_POSTS_REQUEST = 'LOAD_HASHTAG_POSTS_REQUEST';\nexport var LOAD_HASHTAG_POSTS_SUCCESS = 'LOAD_HASHTAG_POSTS_SUCCESS';\nexport var LOAD_HASHTAG_POSTS_FAILURE = 'LOAD_HASHTAG_POSTS_FAILURE'; //사용자가 어떤 게시글을 썼는지 로딩\n\nexport var LOAD_USER_POSTS_REQUEST = 'LOAD_USER_POSTS_REQUEST';\nexport var LOAD_USER_POSTS_SUCCESS = 'LOAD_USER_POSTS_SUCCESS';\nexport var LOAD_USER_POSTS_FAILURE = 'LOAD_USER_POSTS_FAILURE'; //이미지 업로드\n\nexport var UPLOAD_IMAGES_REQUEST = 'UPLOAD_IMAGES_REQUEST';\nexport var UPLOAD_IMAGES_SUCCESS = 'UPLOAD_IMAGES_SUCCESS';\nexport var UPLOAD_IMAGES_FAILURE = 'UPLOAD_IMAGES_FAILURE'; //이미지 업로드 취소(동기)\n\nexport var REMOVE_IMAGE = 'REMOVE_IMAGE'; //포스트 추가\n\nexport var ADD_POST_REQUEST = 'ADD_POST_REQUEST';\nexport var ADD_POST_SUCCESS = 'ADD_POST_SUCCESS';\nexport var ADD_POST_FAILURE = 'ADD_POST_FAILURE'; //포스트에 LIKE 누르는 액션\n\nexport var LIKE_POST_REQUEST = 'LIKE_POST_REQUEST';\nexport var LIKE_POST_SUCCESS = 'LIKE_POST_SUCCESS';\nexport var LIKE_POST_FAILURE = 'LIKE_POST_FAILURE'; //포스트에 LIKE 취소하는 액션\n\nexport var UNLIKE_POST_REQUEST = 'UNLIKE_POST_REQUEST';\nexport var UNLIKE_POST_SUCCESS = 'UNLIKE_POST_SUCCESS';\nexport var UNLIKE_POST_FAILURE = 'UNLIKE_POST_FAILURE'; //게시글에 댓글 남기기\n\nexport var ADD_COMMENT_REQUEST = 'ADD_COMMENT_REQUEST';\nexport var ADD_COMMENT_SUCCESS = 'ADD_COMMENT_SUCCESS';\nexport var ADD_COMMENT_FAILURE = 'ADD_COMMENT_FAILURE'; //게시글 댓글 불러오기\n\nexport var LOAD_COMMENT_REQUEST = 'LOAD_COMMENT_REQUEST';\nexport var LOAD_COMMENT_SUCCESS = 'LOAD_COMMENT_SUCCESS';\nexport var LOAD_COMMENT_FAILURE = 'LOAD_COMMENT_FAILURE'; //리트윗 하는 액션\n\nexport var RETWEET_REQUEST = 'RETWEET_REQUEST';\nexport var RETWEET_SUCCESS = 'RETWEET_SUCCESS';\nexport var RETWEET_FAILURE = 'RETWEET_FAILURE'; //포스트 제거하는 액션\n\nexport var REMOVE_POST_REQUEST = 'REMOVE_POST_REQUEST';\nexport var REMOVE_POST_SUCCESS = 'REMOVE_POST_SUCCESS';\nexport var REMOVE_POST_FAILURE = 'REMOVE_POST_FAILURE';\nvar ADD_DUMMY = 'ADD_DUMMY'; // ????\n\nvar addPost = {\n  type: ADD_POST_REQUEST\n};\nvar addDummy = {\n  type: ADD_DUMMY,\n  data: {\n    content: 'Hello',\n    UserId: 1,\n    User: {\n      nickname: '제로초'\n    }\n  }\n};\n\nvar reducer = function reducer() {\n  var state = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : initialState;\n  var action = arguments.length > 1 ? arguments[1] : undefined;\n\n  switch (action.type) {\n    // 게시글 작성\n    case ADD_POST_REQUEST:\n      {\n        return _objectSpread({}, state, {\n          isAddingPost: true,\n          addPostErrorReason: '',\n          postAdded: false\n        });\n      }\n\n    case ADD_POST_SUCCESS:\n      {\n        return _objectSpread({}, state, {\n          isAddingPost: false,\n          mainPosts: [action.data].concat(_toConsumableArray(state.mainPosts)),\n          postAdded: true\n        });\n      }\n\n    case ADD_POST_FAILURE:\n      {\n        return _objectSpread({}, state, {\n          isAddingPost: false,\n          addPostErrorReason: action.error\n        });\n      }\n    // 댓글 달기\n\n    case ADD_COMMENT_REQUEST:\n      {\n        return _objectSpread({}, state, {\n          isAddingComment: true,\n          addCommentErrorReason: '',\n          commentAdded: false\n        });\n      }\n\n    case ADD_COMMENT_SUCCESS:\n      {\n        // 어떤게시글에 댓글을 추가할지\n        var postIndex = state.mainPosts.findIndex(function (v) {\n          return v.id === action.data.postId;\n        });\n        var post = state.mainPosts[postIndex];\n        var Comments = [].concat(_toConsumableArray(post.Comments), [dummyComment]);\n\n        var mainPosts = _toConsumableArray(state.mainPosts);\n\n        mainPosts[postIndex] = _objectSpread({}, post, {\n          Comments: Comments\n        });\n        return _objectSpread({}, state, {\n          isAddingComment: false,\n          mainPosts: mainPosts,\n          commentAdded: true\n        });\n      }\n\n    case ADD_COMMENT_FAILURE:\n      {\n        return _objectSpread({}, state, {\n          isAddingComment: false,\n          addCommentErrorReason: action.error\n        });\n      }\n\n    case LOAD_MAIN_POSTS_REQUEST:\n      {\n        return _objectSpread({}, state, {\n          mainPosts: []\n        });\n      }\n\n    case LOAD_MAIN_POSTS_SUCCESS:\n      {\n        return _objectSpread({}, state, {\n          mainPosts: action.data\n        });\n      }\n\n    case LOAD_MAIN_POSTS_FAILURE:\n      {\n        return _objectSpread({}, state);\n      }\n\n    default:\n      {\n        return _objectSpread({}, state);\n      }\n  }\n};\n\nexport default reducer;","map":{"version":3,"sources":["C:/Users/Song/Desktop/projectpf/Ver2/frontend/reducers/post.js"],"names":["initialState","mainPosts","id","User","nickname","content","img","Comments","imagePaths","addPostErrorReason","isAddingPost","postAdded","isAddingComment","addCommentErrorReason","commentAdded","dummyPost","dummyComment","createdAt","Date","LOAD_MAIN_POSTS_REQUEST","LOAD_MAIN_POSTS_SUCCESS","LOAD_MAIN_POSTS_FAILURE","LOAD_HASHTAG_POSTS_REQUEST","LOAD_HASHTAG_POSTS_SUCCESS","LOAD_HASHTAG_POSTS_FAILURE","LOAD_USER_POSTS_REQUEST","LOAD_USER_POSTS_SUCCESS","LOAD_USER_POSTS_FAILURE","UPLOAD_IMAGES_REQUEST","UPLOAD_IMAGES_SUCCESS","UPLOAD_IMAGES_FAILURE","REMOVE_IMAGE","ADD_POST_REQUEST","ADD_POST_SUCCESS","ADD_POST_FAILURE","LIKE_POST_REQUEST","LIKE_POST_SUCCESS","LIKE_POST_FAILURE","UNLIKE_POST_REQUEST","UNLIKE_POST_SUCCESS","UNLIKE_POST_FAILURE","ADD_COMMENT_REQUEST","ADD_COMMENT_SUCCESS","ADD_COMMENT_FAILURE","LOAD_COMMENT_REQUEST","LOAD_COMMENT_SUCCESS","LOAD_COMMENT_FAILURE","RETWEET_REQUEST","RETWEET_SUCCESS","RETWEET_FAILURE","REMOVE_POST_REQUEST","REMOVE_POST_SUCCESS","REMOVE_POST_FAILURE","ADD_DUMMY","addPost","type","addDummy","data","UserId","reducer","state","action","error","postIndex","findIndex","v","postId","post"],"mappings":"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","sourcesContent":["export const initialState = {\r\n    mainPosts: [{\r\n        id:1,\r\n        User: {\r\n            id:1,\r\n            nickname: '제로초',\r\n          },\r\n          content:'첫번째 게시글',\r\n          img:'https://www.google.com/imgres?imgurl=http%3A%2F%2Fnewsimg.hankookilbo.com%2F2019%2F04%2F29%2F201904291390027161_3.jpg&imgrefurl=https%3A%2F%2Fwww.hankookilbo.com%2FNews%2FRead%2F201904291390027161&tbnid=NpMi5nVF1QK1MM&vet=12ahUKEwjR1LT9oPfoAhUEUJQKHa2LAhMQMygBegUIARD-Ag..i&docid=k3mACyoxPXAFMM&w=680&h=448&q=%EA%B3%A0%EC%96%91%EC%9D%B4&ved=2ahUKEwjR1LT9oPfoAhUEUJQKHa2LAhMQMygBegUIARD-Ag',\r\n          Comments:[],\r\n    }], // 화면에 보일 포스트들\r\n    imagePaths : [], // 미리보기 이미지 경로\r\n    addPostErrorReason: false, // 포스트 업로드 실패 사유\r\n    isAddingPost : false, // 포스트 업로드 중 \r\n    postAdded: false, // 포스트 업로드 성공\r\n    isAddingComment: false,\r\n    addCommentErrorReason: '',\r\n    commentAdded: false,\r\n};\r\n\r\nconst dummyPost = {\r\n    id: 2,\r\n    User: {\r\n        id:1,\r\n        nickname: '게스트'\r\n    },\r\n    content: '나는 더미입니다.',\r\n    Comments: [],\r\n};\r\n\r\nconst dummyComment ={\r\n    User:{\r\n        id:1,\r\n        nickname:'dummy',\r\n    },\r\n    createdAt: new Date(),\r\n    content: '더미 댓글입니다.',\r\n}\r\n\r\n//메인 포스트를 로딩\r\nexport const LOAD_MAIN_POSTS_REQUEST = 'LOAD_MAIN_POSTS_REQUEST';\r\nexport const LOAD_MAIN_POSTS_SUCCESS = 'LOAD_MAIN_POSTS_SUCCESS';\r\nexport const LOAD_MAIN_POSTS_FAILURE = 'LOAD_MAIN_POSTS_FAILURE';\r\n//해시태그 검색했을때 결과 로딩\r\nexport const LOAD_HASHTAG_POSTS_REQUEST ='LOAD_HASHTAG_POSTS_REQUEST';\r\nexport const LOAD_HASHTAG_POSTS_SUCCESS ='LOAD_HASHTAG_POSTS_SUCCESS';\r\nexport const LOAD_HASHTAG_POSTS_FAILURE ='LOAD_HASHTAG_POSTS_FAILURE';\r\n //사용자가 어떤 게시글을 썼는지 로딩\r\nexport const LOAD_USER_POSTS_REQUEST ='LOAD_USER_POSTS_REQUEST';\r\nexport const LOAD_USER_POSTS_SUCCESS ='LOAD_USER_POSTS_SUCCESS';\r\nexport const LOAD_USER_POSTS_FAILURE ='LOAD_USER_POSTS_FAILURE';\r\n//이미지 업로드\r\nexport const UPLOAD_IMAGES_REQUEST ='UPLOAD_IMAGES_REQUEST';\r\nexport const UPLOAD_IMAGES_SUCCESS ='UPLOAD_IMAGES_SUCCESS';\r\nexport const UPLOAD_IMAGES_FAILURE ='UPLOAD_IMAGES_FAILURE';\r\n//이미지 업로드 취소(동기)\r\nexport const REMOVE_IMAGE ='REMOVE_IMAGE';\r\n\r\n//포스트 추가\r\nexport const ADD_POST_REQUEST = 'ADD_POST_REQUEST';\r\nexport const ADD_POST_SUCCESS = 'ADD_POST_SUCCESS';\r\nexport const ADD_POST_FAILURE = 'ADD_POST_FAILURE';\r\n\r\n//포스트에 LIKE 누르는 액션\r\nexport const LIKE_POST_REQUEST = 'LIKE_POST_REQUEST';\r\nexport const LIKE_POST_SUCCESS = 'LIKE_POST_SUCCESS';\r\nexport const LIKE_POST_FAILURE = 'LIKE_POST_FAILURE';\r\n//포스트에 LIKE 취소하는 액션\r\nexport const UNLIKE_POST_REQUEST = 'UNLIKE_POST_REQUEST';\r\nexport const UNLIKE_POST_SUCCESS = 'UNLIKE_POST_SUCCESS';\r\nexport const UNLIKE_POST_FAILURE = 'UNLIKE_POST_FAILURE';\r\n//게시글에 댓글 남기기\r\nexport const ADD_COMMENT_REQUEST = 'ADD_COMMENT_REQUEST';\r\nexport const ADD_COMMENT_SUCCESS = 'ADD_COMMENT_SUCCESS';\r\nexport const ADD_COMMENT_FAILURE = 'ADD_COMMENT_FAILURE';\r\n//게시글 댓글 불러오기\r\nexport const LOAD_COMMENT_REQUEST = 'LOAD_COMMENT_REQUEST';\r\nexport const LOAD_COMMENT_SUCCESS = 'LOAD_COMMENT_SUCCESS';\r\nexport const LOAD_COMMENT_FAILURE = 'LOAD_COMMENT_FAILURE';\r\n//리트윗 하는 액션\r\nexport const RETWEET_REQUEST = 'RETWEET_REQUEST';\r\nexport const RETWEET_SUCCESS = 'RETWEET_SUCCESS';\r\nexport const RETWEET_FAILURE = 'RETWEET_FAILURE';\r\n//포스트 제거하는 액션\r\nexport const REMOVE_POST_REQUEST = 'REMOVE_POST_REQUEST';\r\nexport const REMOVE_POST_SUCCESS = 'REMOVE_POST_SUCCESS';\r\nexport const REMOVE_POST_FAILURE = 'REMOVE_POST_FAILURE';\r\n\r\nconst ADD_DUMMY = 'ADD_DUMMY' // ????\r\nconst addPost = {\r\n    type : ADD_POST_REQUEST,\r\n};\r\nconst addDummy = {\r\n    type: ADD_DUMMY,\r\n    data: {\r\n        content: 'Hello',\r\n        UserId:1,\r\n        User:{\r\n            nickname:'제로초',\r\n        },\r\n    },\r\n};\r\n\r\nconst reducer = ( state = initialState, action) => {\r\n    switch (action.type){\r\n        // 게시글 작성\r\n        case ADD_POST_REQUEST: {\r\n            return {\r\n                ...state,\r\n                isAddingPost: true,\r\n                addPostErrorReason: '',\r\n                postAdded: false,\r\n            }\r\n        }\r\n        case ADD_POST_SUCCESS: {\r\n            return {\r\n                ...state,\r\n                isAddingPost: false,\r\n                mainPosts: [action.data, ...state.mainPosts],\r\n                postAdded: true,\r\n            }\r\n        }\r\n        case ADD_POST_FAILURE: {\r\n            return {\r\n                ...state,\r\n                isAddingPost: false,\r\n                addPostErrorReason: action.error,\r\n            }\r\n        }\r\n        // 댓글 달기\r\n        case ADD_COMMENT_REQUEST: {\r\n            return {\r\n                ...state,\r\n                isAddingComment: true,\r\n                addCommentErrorReason: '',\r\n                commentAdded: false,\r\n            }\r\n        }\r\n        case ADD_COMMENT_SUCCESS: {\r\n            // 어떤게시글에 댓글을 추가할지\r\n            const postIndex = state.mainPosts.findIndex( v=> v.id === action.data.postId);\r\n            const post = state.mainPosts[postIndex];\r\n            const Comments = [...post.Comments, dummyComment];\r\n            const mainPosts = [...state.mainPosts];\r\n            mainPosts[postIndex] = {...post, Comments};\r\n            return {\r\n                ...state,\r\n                isAddingComment: false,\r\n                mainPosts,\r\n                commentAdded: true,\r\n            }\r\n        }\r\n        case ADD_COMMENT_FAILURE: {\r\n            return {\r\n                ...state,\r\n                isAddingComment: false,\r\n                addCommentErrorReason: action.error,\r\n            }\r\n        }\r\n        case LOAD_MAIN_POSTS_REQUEST: {\r\n            return {\r\n                ...state,\r\n                mainPosts: [],\r\n            }\r\n        }\r\n        case LOAD_MAIN_POSTS_SUCCESS: {\r\n            return {\r\n                ...state,\r\n                mainPosts: action.data,\r\n            }\r\n        }\r\n        case LOAD_MAIN_POSTS_FAILURE: {\r\n            return {\r\n                ...state,\r\n            }\r\n        }\r\n\r\n        default:{\r\n            return{\r\n                ...state,\r\n            }\r\n        }\r\n    }\r\n}\r\n\r\nexport default reducer;"]},"metadata":{},"sourceType":"module"}