{"ast":null,"code":"var __jsx = React.createElement;\nimport React, { useEffect, useCallback } from \"react\";\nimport { Form, Button, Input, Card, Icon, List } from \"antd\";\nimport { useSelector, useDispatch } from 'react-redux';\nimport NicknameEditForm from '../components/NicknameEditForm'; // 폼은 state가 빈번하게 변하므로 분리를 해주자\n\nimport PostCard from '../components/PostCard';\nimport { LOAD_FOLLOWERS_REQUEST, LOAD_FOLLOWINGS_REQUEST, UNFOLLOW_USER_REQUEST, REMOVE_FOLLOWER_REQUEST } from \"../reducers/user\";\nimport { LOAD_USER_POSTS_REQUEST } from \"../reducers/post\";\n\nconst Profile = () => {\n  const dispatch = useDispatch();\n  const {\n    followerList,\n    followingList,\n    hasMoreFollower,\n    hasMoreFollowing\n  } = useSelector(state => state.user);\n  const {\n    mainPosts\n  } = useSelector(state => state.post);\n  const onUnfollow = useCallback(userId => () => {\n    dispatch({\n      type: UNFOLLOW_USER_REQUEST,\n      data: userId\n    });\n  }, []);\n  const onRemoveFollower = useCallback(userId => () => {\n    dispatch({\n      type: REMOVE_FOLLOWER_REQUEST,\n      data: userId\n    });\n  }, []);\n  const loadMoreFollowings = useCallback(() => {\n    dispatch({\n      type: LOAD_FOLLOWINGS_REQUEST,\n      offset: followingList.length // (더보기 기능:3개씩) 기본값 limit = 3(처음 데이터 개수) > 3개씩 늘어남\n\n    });\n  }, [followingList.length]);\n  const loadMoreFollowers = useCallback(() => {\n    dispatch({\n      type: LOAD_FOLLOWERS_REQUEST,\n      offset: followerList.length\n    });\n  }, [followerList.length]);\n  return __jsx(\"div\", null, __jsx(NicknameEditForm, null), __jsx(List, {\n    style: {\n      marginBottom: '20px'\n    },\n    grid: {\n      gutter: 4,\n      xs: 2,\n      md: 3\n    },\n    header: __jsx(\"div\", null, \"\\uD314\\uB85C\\uC789 \\uBAA9\\uB85D\"),\n    size: \"small\",\n    loadMore: hasMoreFollowing && __jsx(Button, {\n      style: {\n        width: '100%'\n      },\n      onClick: loadMoreFollowings\n    }, \"\\uB354 \\uBCF4\\uAE30\"),\n    bordered: true,\n    dataSource: followingList,\n    renderItem: item => __jsx(List.Item, {\n      style: {\n        marginTop: '20px'\n      }\n    }, __jsx(Card, {\n      actions: [__jsx(Icon, {\n        key: \"stop\",\n        type: \"stop\",\n        onClick: onUnfollow(item.id)\n      })]\n    }, __jsx(Card.Meta, {\n      description: item.nickname\n    })))\n  }), __jsx(List, {\n    style: {\n      marginBottom: '20px'\n    },\n    grid: {\n      gutter: 4,\n      xs: 2,\n      md: 3\n    },\n    header: __jsx(\"div\", null, \"\\uD314\\uB85C\\uC6CC \\uBAA9\\uB85D\"),\n    loadMore: hasMoreFollower && __jsx(Button, {\n      style: {\n        width: '100%'\n      },\n      onClick: loadMoreFollowers\n    }, \"\\uB354 \\uBCF4\\uAE30\"),\n    bordered: true,\n    dataSource: followerList,\n    renderItem: item => __jsx(List.Item, {\n      style: {\n        marginTop: '20px'\n      }\n    }, __jsx(Card, {\n      actions: [__jsx(Icon, {\n        key: \"stop\",\n        type: \"stop\",\n        onClick: onRemoveFollower(item.id)\n      })]\n    }, __jsx(Card.Meta, {\n      description: item.nickname\n    })))\n  }), __jsx(\"div\", null, mainPosts ? mainPosts.map(c => __jsx(PostCard, {\n    key: +c.createdAt,\n    post: c\n  })) : null));\n};\n\nProfile.getInitialProps = async context => {\n  const state = context.store.getState();\n  context.store.dispatch({\n    type: LOAD_FOLLOWERS_REQUEST,\n    data: state.user.me && state.user.me.id\n  });\n  context.store.dispatch({\n    type: LOAD_FOLLOWINGS_REQUEST,\n    data: state.user.me && state.user.me.id\n  });\n  context.store.dispatch({\n    type: LOAD_USER_POSTS_REQUEST,\n    data: state.user.me && state.user.me.id\n  });\n};\n\nexport default Profile;","map":{"version":3,"sources":["C:/Users/Song/Desktop/projectpf/Ver2/frontend/pages/profile.js"],"names":["React","useEffect","useCallback","Form","Button","Input","Card","Icon","List","useSelector","useDispatch","NicknameEditForm","PostCard","LOAD_FOLLOWERS_REQUEST","LOAD_FOLLOWINGS_REQUEST","UNFOLLOW_USER_REQUEST","REMOVE_FOLLOWER_REQUEST","LOAD_USER_POSTS_REQUEST","Profile","dispatch","followerList","followingList","hasMoreFollower","hasMoreFollowing","state","user","mainPosts","post","onUnfollow","userId","type","data","onRemoveFollower","loadMoreFollowings","offset","length","loadMoreFollowers","marginBottom","gutter","xs","md","width","item","marginTop","id","nickname","map","c","createdAt","getInitialProps","context","store","getState","me"],"mappings":"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","sourcesContent":["import React, { useEffect, useCallback } from \"react\";\r\nimport { Form,  Button, Input, Card, Icon , List } from \"antd\";\r\nimport { useSelector , useDispatch} from 'react-redux';\r\nimport NicknameEditForm from '../components/NicknameEditForm'; // 폼은 state가 빈번하게 변하므로 분리를 해주자\r\nimport PostCard from '../components/PostCard';\r\nimport { LOAD_FOLLOWERS_REQUEST, LOAD_FOLLOWINGS_REQUEST, UNFOLLOW_USER_REQUEST, REMOVE_FOLLOWER_REQUEST } from \"../reducers/user\";\r\nimport { LOAD_USER_POSTS_REQUEST } from \"../reducers/post\";\r\nconst Profile = () => {\r\n  const dispatch = useDispatch();\r\n  const { followerList, followingList, hasMoreFollower, hasMoreFollowing } = useSelector(state => state.user);\r\n  const { mainPosts } = useSelector(state => state.post);\r\n  \r\n  const onUnfollow = useCallback(userId => () => {\r\n    dispatch({\r\n      type: UNFOLLOW_USER_REQUEST,\r\n      data: userId,\r\n    })\r\n  },[])\r\n  const onRemoveFollower = useCallback(userId => () => {\r\n    dispatch({\r\n      type: REMOVE_FOLLOWER_REQUEST,\r\n      data: userId,\r\n    })\r\n  },[])\r\n  const loadMoreFollowings = useCallback( ()=>{\r\n    dispatch({\r\n      type: LOAD_FOLLOWINGS_REQUEST,\r\n      offset: followingList.length, // (더보기 기능:3개씩) 기본값 limit = 3(처음 데이터 개수) > 3개씩 늘어남\r\n    })\r\n  },[ followingList.length])\r\n  const loadMoreFollowers = useCallback( ()=>{\r\n    dispatch({\r\n      type: LOAD_FOLLOWERS_REQUEST,\r\n      offset: followerList.length,\r\n    })\r\n  },[followerList.length])\r\n  return (\r\n    <div>\r\n      <NicknameEditForm />\r\n      <List \r\n        style ={{ marginBottom : '20px'}}  \r\n        grid={{ gutter :4, xs:2, md:3}}\r\n        header={<div>팔로잉 목록</div>}\r\n        size =\"small\"\r\n        loadMore={hasMoreFollowing && <Button style={{width: '100%'}} onClick={loadMoreFollowings}>더 보기</Button>}\r\n        bordered\r\n        dataSource={followingList}\r\n        renderItem={item => (\r\n          <List.Item style ={{ marginTop :'20px'}}>\r\n            <Card actions={[<Icon key=\"stop\" type=\"stop\" onClick={onUnfollow(item.id)}></Icon>]}> \r\n              <Card.Meta description={item.nickname}></Card.Meta> \r\n            </Card>\r\n          </List.Item>\r\n        )}\r\n      >\r\n     </List>\r\n     <List \r\n        style ={{ marginBottom : '20px'}}  \r\n        grid={{ gutter :4, xs:2, md:3}}\r\n        header={<div>팔로워 목록</div>}\r\n        loadMore={hasMoreFollower && <Button style={{width: '100%'}} onClick={loadMoreFollowers}>더 보기</Button>}\r\n        bordered\r\n        dataSource={followerList}\r\n        renderItem={item => (\r\n          <List.Item style ={{ marginTop :'20px'}}>\r\n            {/* 배열안에 jsx 쓸때는 key를 꼭 넣어주자( []:반복문을 의미, 넣어줘야 인식됨) */}\r\n            <Card actions={[<Icon key=\"stop\" type=\"stop\" onClick={onRemoveFollower(item.id)}></Icon>]}> \r\n              <Card.Meta description={item.nickname}></Card.Meta> \r\n            </Card>\r\n          </List.Item>\r\n        )}>\r\n     </List>\r\n     <div>\r\n        {mainPosts ? mainPosts.map(c => (\r\n            <PostCard key={+c.createdAt} post={c}></PostCard> \r\n        )): null} \r\n     </div> \r\n    </div>\r\n  );\r\n};\r\n\r\nProfile.getInitialProps= async (context)=>{\r\n  const state = context.store.getState();\r\n  context.store.dispatch({\r\n    type: LOAD_FOLLOWERS_REQUEST,\r\n    data: state.user.me && state.user.me.id,\r\n  });\r\n  context.store.dispatch({\r\n    type: LOAD_FOLLOWINGS_REQUEST,\r\n    data: state.user.me && state.user.me.id,\r\n  });\r\n  context.store.dispatch({\r\n    type: LOAD_USER_POSTS_REQUEST,\r\n    data: state.user.me && state.user.me.id,\r\n  });\r\n}\r\n\r\nexport default Profile;\r\n"]},"metadata":{},"sourceType":"module"}