{"ast":null,"code":"var __jsx = React.createElement;\nimport React, { memo } from 'react';\nimport { Button } from 'antd';\nimport { useSelector } from 'react-redux';\nvar FollowButton = memo(function (_ref) {\n  var post = _ref.post,\n      onUnfollow = _ref.onUnfollow,\n      onFollow = _ref.onFollow;\n\n  var _useSelector = useSelector(function (state) {\n    return state.user;\n  }),\n      me = _useSelector.me;\n\n  return !me || post.User.id === me.id // 로그인안했을때, 자기 게시글일땐 안보임\n  ? null : me.Followings && me.Followings.find(function (v) {\n    return v.id === post.User.id;\n  }) // 로그인 후 남의게시글 목록 볼때 작성자가 내 팔로잉 목록에 들어있을떄 (팔로잉중)\n  ? __jsx(Button, {\n    onClick: onUnfollow(post.User.id)\n  }, \"\\uC5B8\\uD314\\uB85C\\uC6B0\") : __jsx(Button, {\n    onClick: onFollow(post.User.id)\n  }, \"\\uD314\\uB85C\\uC6B0\");\n});\nexport default FollowButton;","map":{"version":3,"sources":["C:/Users/Song/Desktop/projectpf/Ver2/frontend/components/FollowButton.js"],"names":["React","memo","Button","useSelector","FollowButton","post","onUnfollow","onFollow","state","user","me","User","id","Followings","find","v"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,IAAhB,QAA4B,OAA5B;AACA,SAASC,MAAT,QAAuB,MAAvB;AAEA,SAASC,WAAT,QAA4B,aAA5B;AAEA,IAAMC,YAAY,GAAGH,IAAI,CAAC,gBAAoC;AAAA,MAAjCI,IAAiC,QAAjCA,IAAiC;AAAA,MAA3BC,UAA2B,QAA3BA,UAA2B;AAAA,MAAfC,QAAe,QAAfA,QAAe;;AAAA,qBAC7CJ,WAAW,CAAC,UAAAK,KAAK;AAAA,WAAIA,KAAK,CAACC,IAAV;AAAA,GAAN,CADkC;AAAA,MACpDC,EADoD,gBACpDA,EADoD;;AAE5D,SAAO,CAACA,EAAD,IAAOL,IAAI,CAACM,IAAL,CAAUC,EAAV,KAAiBF,EAAE,CAACE,EAA3B,CAA8B;AAA9B,IACH,IADG,GAEHF,EAAE,CAACG,UAAH,IAAiBH,EAAE,CAACG,UAAH,CAAcC,IAAd,CAAmB,UAAAC,CAAC;AAAA,WAAIA,CAAC,CAACH,EAAF,KAASP,IAAI,CAACM,IAAL,CAAUC,EAAvB;AAAA,GAApB,CAAjB,CAAgE;AAAhE,IACE,MAAC,MAAD;AAAQ,IAAA,OAAO,EAAEN,UAAU,CAACD,IAAI,CAACM,IAAL,CAAUC,EAAX;AAA3B,gCADF,GAEE,MAAC,MAAD;AAAQ,IAAA,OAAO,EAAEL,QAAQ,CAACF,IAAI,CAACM,IAAL,CAAUC,EAAX;AAAzB,0BAJN;AAKD,CAPwB,CAAzB;AAeA,eAAeR,YAAf","sourcesContent":["import React, { memo } from 'react';\r\nimport { Button } from 'antd';\r\nimport PropTypes from 'prop-types';\r\nimport { useSelector } from 'react-redux';\r\n\r\nconst FollowButton = memo(({ post, onUnfollow, onFollow }) => {\r\n  const { me } = useSelector(state => state.user);\r\n  return !me || post.User.id === me.id // 로그인안했을때, 자기 게시글일땐 안보임\r\n    ? null \r\n    : me.Followings && me.Followings.find(v => v.id === post.User.id) // 로그인 후 남의게시글 목록 볼때 작성자가 내 팔로잉 목록에 들어있을떄 (팔로잉중)\r\n      ? <Button onClick={onUnfollow(post.User.id)}>언팔로우</Button>\r\n      : <Button onClick={onFollow(post.User.id)}>팔로우</Button>;\r\n});\r\n\r\nFollowButton.propTypes = {\r\n  post: PropTypes.object.isRequired,\r\n  onUnfollow: PropTypes.func.isRequired,\r\n  onFollow: PropTypes.func.isRequired,\r\n};\r\n\r\nexport default FollowButton;"]},"metadata":{},"sourceType":"module"}