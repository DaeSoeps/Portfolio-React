{"ast":null,"code":"import _taggedTemplateLiteral from \"@babel/runtime-corejs2/helpers/esm/taggedTemplateLiteral\";\nvar __jsx = React.createElement;\n\nfunction _templateObject5() {\n  var data = _taggedTemplateLiteral([\"\\n  text-align: center;\\n  & > div {\\n    width: 75;\\n    height: 30;\\n    line-height: 30px;\\n    borderRadius: 15;\\n    background: #313131;\\n    display: inline-block;\\n    text-align: center;\\n    color: white;\\n    font-size: 15px;\\n  }\\n\"]);\n\n  _templateObject5 = function _templateObject5() {\n    return data;\n  };\n\n  return data;\n}\n\nfunction _templateObject4() {\n  var data = _taggedTemplateLiteral([\" \\n position: absolute;\\n right: 0;\\n top: 0;\\n padding: 15;\\n line-height: 14px;\\n cursor: pointer;\\n\"]);\n\n  _templateObject4 = function _templateObject4() {\n    return data;\n  };\n\n  return data;\n}\n\nfunction _templateObject3() {\n  var data = _taggedTemplateLiteral([\"\\n  height: calc(100% - 44px);\\n  background: #090909;\\n\"]);\n\n  _templateObject3 = function _templateObject3() {\n    return data;\n  };\n\n  return data;\n}\n\nfunction _templateObject2() {\n  var data = _taggedTemplateLiteral([\"\\n  height: 44;\\n  background: white;\\n  position: relative;\\n  padding: 0;\\n  text-align: center;  \\n\\n  & h1{\\n    margin: 0;\\n    fontSize: 17px;\\n    color: #333;\\n    line-height: 44px;\\n  }\\n\"]);\n\n  _templateObject2 = function _templateObject2() {\n    return data;\n  };\n\n  return data;\n}\n\nfunction _templateObject() {\n  var data = _taggedTemplateLiteral([\"\\n  position: fixed;\\n  z-index: 5000;\\n  top: 0;\\n  left: 0;\\n  right: 0;\\n  bottom: 0;\\n\"]);\n\n  _templateObject = function _templateObject() {\n    return data;\n  };\n\n  return data;\n}\n\nimport React, { useState } from 'react';\nimport PropTypes from 'prop-types';\nimport { Icon } from 'antd';\nimport Slick from 'react-slick';\nimport styled from 'styled-components';\nvar Overlay = styled.div(_templateObject()); // header 안에들어있는 h1이란 의미, &은 사스나 레스 에서 자기자신 가르키는 태그(여기선 h1은 자식), \n\nvar Header = styled.header(_templateObject2());\nvar SlickWrapper = styled.div(_templateObject3()); // 스타일 이미 적용되있는 앤티디 컴포넌트도 스타일 적용 가능\n\nvar CloseBtn = styled(Icon)(_templateObject4()); // div 스타일을 자식으로 넣은 경우\n\nvar Indicator = styled.div(_templateObject5());\n\nvar ImagesZoom = function ImagesZoom(_ref) {\n  var images = _ref.images,\n      onClose = _ref.onClose;\n\n  var _useState = useState(0),\n      currentSlide = _useState[0],\n      setCurrentSlide = _useState[1]; // 몇번째 이미지를 보고있는지\n\n\n  return __jsx(Overlay, null, __jsx(Header, null, __jsx(\"h1\", null, \"\\uC0C1\\uC138 \\uC774\\uBBF8\\uC9C0\"), __jsx(CloseBtn, null)), __jsx(SlickWrapper, null, __jsx(\"div\", null, __jsx(Slick, {\n    initialSlide: 0 // 처음 보여줄 이미지 \n    ,\n    afterChange: function afterChange(slide) {\n      return setCurrentSlide(slide);\n    } // 슬라이드 할때마다 index 변경\n    ,\n    infinite: false // 무한 슬라이드 1~4 > 4~1\n    ,\n    arrows: true,\n    slidesToShow: 1 // 한번에 1장만 보여줌\n    ,\n    slidesToScroll: 1 // 한번에 1장만 슬라이드\n\n  }, images.map(function (v) {\n    return __jsx(\"div\", {\n      style: {\n        padding: 32,\n        textAlign: 'center'\n      }\n    }, __jsx(\"img\", {\n      src: \"http://localhost:3065/\".concat(v.src),\n      style: {\n        margin: '0 auto',\n        maxHeight: 750\n      }\n    }));\n  })), __jsx(Indicator, null, __jsx(\"div\", null, currentSlide + 1, \" / \", images.length)))));\n};\n\nImagesZoom.propTypes = {\n  images: PropTypes.arrayOf(PropTypes.shape({\n    src: PropTypes.string\n  })).isRequired,\n  onClose: PropTypes.func.isRequired\n};\nexport default ImagesZoom;","map":{"version":3,"sources":["C:/Users/Song/Desktop/projectpf/Ver2/frontend/components/ImagesZoom.js"],"names":["React","useState","PropTypes","Icon","Slick","styled","Overlay","div","Header","header","SlickWrapper","CloseBtn","Indicator","ImagesZoom","images","onClose","currentSlide","setCurrentSlide","slide","map","v","padding","textAlign","src","margin","maxHeight","length","propTypes","arrayOf","shape","string","isRequired","func"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,QAA+B,OAA/B;AACA,OAAOC,SAAP,MAAsB,YAAtB;AACA,SAASC,IAAT,QAAqB,MAArB;AACA,OAAOC,KAAP,MAAkB,aAAlB;AACA,OAAOC,MAAP,MAAmB,mBAAnB;AAEA,IAAMC,OAAO,GAAGD,MAAM,CAACE,GAAV,mBAAb,C,CAQA;;AACA,IAAMC,MAAM,GAAGH,MAAM,CAACI,MAAV,oBAAZ;AAgBA,IAAMC,YAAY,GAAGL,MAAM,CAACE,GAAV,oBAAlB,C,CAIA;;AACA,IAAMI,QAAQ,GAAGN,MAAM,CAACF,IAAD,CAAT,oBAAd,C,CAQA;;AACA,IAAMS,SAAS,GAAGP,MAAM,CAACE,GAAV,oBAAf;;AAcA,IAAMM,UAAU,GAAG,SAAbA,UAAa,OAAyB;AAAA,MAAtBC,MAAsB,QAAtBA,MAAsB;AAAA,MAAdC,OAAc,QAAdA,OAAc;;AAAA,kBACFd,QAAQ,CAAC,CAAD,CADN;AAAA,MACnCe,YADmC;AAAA,MACrBC,eADqB,iBACW;;;AAErD,SACE,MAAC,OAAD,QACE,MAAC,MAAD,QACE,oDADF,EAEE,MAAC,QAAD,OAFF,CADF,EAKE,MAAC,YAAD,QACE,mBACE,MAAC,KAAD;AACE,IAAA,YAAY,EAAE,CADhB,CACmB;AADnB;AAEE,IAAA,WAAW,EAAE,qBAAAC,KAAK;AAAA,aAAID,eAAe,CAACC,KAAD,CAAnB;AAAA,KAFpB,CAEgD;AAFhD;AAGE,IAAA,QAAQ,EAAE,KAHZ,CAGmB;AAHnB;AAIE,IAAA,MAAM,MAJR;AAKE,IAAA,YAAY,EAAE,CALhB,CAKmB;AALnB;AAME,IAAA,cAAc,EAAE,CANlB,CAMqB;;AANrB,KAQGJ,MAAM,CAACK,GAAP,CAAW,UAACC,CAAD,EAAO;AACjB,WACE;AAAK,MAAA,KAAK,EAAE;AAAEC,QAAAA,OAAO,EAAE,EAAX;AAAeC,QAAAA,SAAS,EAAE;AAA1B;AAAZ,OACE;AAAK,MAAA,GAAG,kCAA2BF,CAAC,CAACG,GAA7B,CAAR;AAA4C,MAAA,KAAK,EAAE;AAAEC,QAAAA,MAAM,EAAE,QAAV;AAAoBC,QAAAA,SAAS,EAAE;AAA/B;AAAnD,MADF,CADF;AAKD,GANA,CARH,CADF,EAiBE,MAAC,SAAD,QACE,mBACGT,YAAY,GAAG,CADlB,SACwBF,MAAM,CAACY,MAD/B,CADF,CAjBF,CADF,CALF,CADF;AAiCD,CApCD;;AAsCAb,UAAU,CAACc,SAAX,GAAuB;AACrBb,EAAAA,MAAM,EAAEZ,SAAS,CAAC0B,OAAV,CAAkB1B,SAAS,CAAC2B,KAAV,CAAgB;AACxCN,IAAAA,GAAG,EAAErB,SAAS,CAAC4B;AADyB,GAAhB,CAAlB,EAEJC,UAHiB;AAIrBhB,EAAAA,OAAO,EAAEb,SAAS,CAAC8B,IAAV,CAAeD;AAJH,CAAvB;AAOA,eAAelB,UAAf","sourcesContent":["import React, { useState} from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport { Icon } from 'antd';\r\nimport Slick from 'react-slick';\r\nimport styled from 'styled-components';\r\n\r\nconst Overlay = styled.div`\r\n  position: fixed;\r\n  z-index: 5000;\r\n  top: 0;\r\n  left: 0;\r\n  right: 0;\r\n  bottom: 0;\r\n`;\r\n// header 안에들어있는 h1이란 의미, &은 사스나 레스 에서 자기자신 가르키는 태그(여기선 h1은 자식), \r\nconst Header = styled.header`\r\n  height: 44;\r\n  background: white;\r\n  position: relative;\r\n  padding: 0;\r\n  text-align: center;  \r\n\r\n  & h1{\r\n    margin: 0;\r\n    fontSize: 17px;\r\n    color: #333;\r\n    line-height: 44px;\r\n  }\r\n`;\r\n\r\n\r\nconst SlickWrapper = styled.div`\r\n  height: calc(100% - 44px);\r\n  background: #090909;\r\n`;\r\n// 스타일 이미 적용되있는 앤티디 컴포넌트도 스타일 적용 가능\r\nconst CloseBtn = styled(Icon)` \r\n position: absolute;\r\n right: 0;\r\n top: 0;\r\n padding: 15;\r\n line-height: 14px;\r\n cursor: pointer;\r\n`;\r\n// div 스타일을 자식으로 넣은 경우\r\nconst Indicator = styled.div`\r\n  text-align: center;\r\n  & > div {\r\n    width: 75;\r\n    height: 30;\r\n    line-height: 30px;\r\n    borderRadius: 15;\r\n    background: #313131;\r\n    display: inline-block;\r\n    text-align: center;\r\n    color: white;\r\n    font-size: 15px;\r\n  }\r\n`;\r\nconst ImagesZoom = ({ images, onClose }) => {\r\n  const [currentSlide, setCurrentSlide] = useState(0); // 몇번째 이미지를 보고있는지\r\n\r\n  return (\r\n    <Overlay>\r\n      <Header>\r\n        <h1>상세 이미지</h1>\r\n        <CloseBtn/>\r\n      </Header>\r\n      <SlickWrapper>\r\n        <div>\r\n          <Slick\r\n            initialSlide={0} // 처음 보여줄 이미지 \r\n            afterChange={slide => setCurrentSlide(slide)} // 슬라이드 할때마다 index 변경\r\n            infinite={false} // 무한 슬라이드 1~4 > 4~1\r\n            arrows\r\n            slidesToShow={1} // 한번에 1장만 보여줌\r\n            slidesToScroll={1} // 한번에 1장만 슬라이드\r\n          >\r\n            {images.map((v) => {\r\n              return (\r\n                <div style={{ padding: 32, textAlign: 'center' }}>\r\n                  <img src={`http://localhost:3065/${v.src}`} style={{ margin: '0 auto', maxHeight: 750 }} />\r\n                </div>\r\n              );\r\n            })}\r\n          </Slick>\r\n          <Indicator>\r\n            <div>\r\n              {currentSlide + 1} / {images.length}\r\n            </div>\r\n          </Indicator>\r\n        </div>\r\n      </SlickWrapper>\r\n    </Overlay>\r\n  );\r\n};\r\n\r\nImagesZoom.propTypes = {\r\n  images: PropTypes.arrayOf(PropTypes.shape({\r\n    src: PropTypes.string,\r\n  })).isRequired,\r\n  onClose: PropTypes.func.isRequired,\r\n};\r\n\r\nexport default ImagesZoom;"]},"metadata":{},"sourceType":"module"}