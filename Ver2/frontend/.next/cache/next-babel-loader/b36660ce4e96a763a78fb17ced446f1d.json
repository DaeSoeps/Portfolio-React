{"ast":null,"code":"import _taggedTemplateLiteral from \"@babel/runtime-corejs2/helpers/esm/taggedTemplateLiteral\";\nvar __jsx = React.createElement;\n\nfunction _templateObject() {\n  var data = _taggedTemplateLiteral([\"\\n  color: red;\\n\"]);\n\n  _templateObject = function _templateObject() {\n    return data;\n  };\n\n  return data;\n}\n\nimport React, { useState, useCallback, useEffect } from \"react\";\nimport { Form, Input, Checkbox, Button } from \"antd\";\nimport { SIGN_UP_REQUEST, isSigningUp } from \"../reducers/user\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport Router from 'next/router';\nimport styled from 'styled-components';\nvar SignupError = styled.div(_templateObject()); // Coustom hook 훅에 기능을 추가해서 새로 만듬 ( 중복방지 등 )\n// useState(hook) 는 커스텀 훅 제외한 곳에서 사용하지 않기\n\nexport var userInput = function userInput() {\n  var initValue = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : null;\n\n  var _useState = useState(initValue),\n      value = _useState[0],\n      setter = _useState[1];\n\n  var handler = useCallback(function (e) {\n    setter(e.target.value);\n  }, []);\n  return [value, handler];\n}; ////////////////////////////////\n\nvar Signup = function Signup() {\n  var _useState2 = useState(\"\"),\n      id = _useState2[0],\n      setId = _useState2[1];\n\n  var _useState3 = useState(\"\"),\n      nick = _useState3[0],\n      setNick = _useState3[1];\n\n  var _useState4 = useState(\"\"),\n      password = _useState4[0],\n      setPassword = _useState4[1];\n\n  var _useState5 = useState(\"\"),\n      passwordCheck = _useState5[0],\n      setPasswordCheck = _useState5[1];\n\n  var _useState6 = useState(false),\n      term = _useState6[0],\n      setTerm = _useState6[1];\n\n  var _useState7 = useState(false),\n      passwrodError = _useState7[0],\n      setpasswordError = _useState7[1];\n\n  var _useState8 = useState(false),\n      termError = _useState8[0],\n      setTermError = _useState8[1];\n\n  var dispatch = useDispatch();\n\n  var _useSelector = useSelector(function (state) {\n    return state.user;\n  }),\n      isSigningUp = _useSelector.isSigningUp,\n      me = _useSelector.me;\n\n  useEffect(function () {\n    if (me) {\n      alert('로그인 성공');\n      Router.push('/');\n    }\n  }, [me && me.id]);\n  var onSubmit = useCallback(function (e) {\n    e.preventDefault();\n    console.log({\n      id: id,\n      nick: nick,\n      password: password,\n      passwordCheck: passwordCheck,\n      term: term\n    });\n\n    if (password !== passwordCheck) {\n      return setpasswordError(true);\n    }\n\n    if (!term) {\n      return setTermError(true);\n    }\n\n    alert('회원가입이 완료되었습니다.');\n    Router.push('/');\n    return dispatch({\n      type: SIGN_UP_REQUEST,\n      data: {\n        userId: id,\n        password: password,\n        nickname: nick\n      }\n    });\n  }, [id, nick, password, passwordCheck, term] // usecallback 안에서는 안에 쓰이는 state 전부 넣어주자\n  );\n\n  var onChangeId = function onChangeId(e) {\n    setId(e.target.value);\n  };\n\n  var onChangeNick = function onChangeNick(e) {\n    setNick(e.target.value);\n  };\n\n  var onChangePassword = function onChangePassword(e) {\n    setPassword(e.target.value);\n  };\n\n  var onChangePasswordChk = useCallback(function (e) {\n    setpasswordError(e.target.value !== password);\n    setPasswordCheck(e.target.value);\n  }, [password]);\n  var onChangeTerm = useCallback(function (e) {\n    setTermError(false);\n    setTerm(e.target.checked);\n  }, []);\n\n  if (me) {\n    return null;\n  }\n\n  return __jsx(React.Fragment, null, __jsx(Form, {\n    onSubmit: onSubmit,\n    style: {\n      padding: 10\n    }\n  }, __jsx(\"div\", null, __jsx(\"label\", {\n    htmlFor: \"user-id\"\n  }, \"\\uC544\\uC774\\uB514\"), __jsx(\"br\", null), __jsx(Input, {\n    name: \"user-id\",\n    required: true,\n    value: id,\n    onChange: onChangeId\n  })), __jsx(\"div\", null, __jsx(\"label\", {\n    htmlFor: \"user-nick\"\n  }, \"\\uB2C9\\uB124\\uC784\"), __jsx(Input, {\n    name: \"user-nick\",\n    required: true,\n    value: nick,\n    onChange: onChangeNick\n  })), __jsx(\"div\", null, __jsx(\"label\", {\n    htmlFor: \"user-pass\"\n  }, \"\\uBE44\\uBC00\\uBC88\\uD638\"), __jsx(\"br\", null), __jsx(Input, {\n    name: \"user-pass\",\n    type: \"password\",\n    required: true,\n    value: password,\n    onChange: onChangePassword\n  })), __jsx(\"div\", null, __jsx(\"label\", {\n    htmlFor: \"user-pass-chk\"\n  }, \"\\uBE44\\uBC00\\uBC88\\uD638 \\uCCB4\\uD06C\"), __jsx(\"br\", null), __jsx(Input, {\n    name: \"user-pass-chk\",\n    type: \"password\",\n    required: true,\n    value: passwordCheck,\n    onChange: onChangePasswordChk\n  }), passwrodError && __jsx(SignupError, null, \" \\uBE44\\uBC00\\uBC88\\uD638\\uAC00 \\uC77C\\uCE58\\uD558\\uC9C0 \\uC54A\\uC2B5\\uB2C8\\uB2E4.\")), __jsx(\"div\", null, __jsx(Checkbox, {\n    name: \"user-term\",\n    checked: term,\n    onChange: onChangeTerm\n  }, \"\\uB3D9\\uC758\\uD569\\uB2C8\\uB2E4.\"), termError && __jsx(SignupError, null, \" \\uC57D\\uAD00\\uC5D0 \\uB3D9\\uC758 \\uD574\\uC8FC\\uC138\\uC694.\")), __jsx(\"div\", null, __jsx(\"div\", {\n    style: {\n      marginTop: 10\n    }\n  }), __jsx(Button, {\n    type: \"primary\",\n    htmlType: \"submit\",\n    loading: isSigningUp\n  }, \"\\uAC00\\uC785\\uD558\\uAE30\"))));\n};\n\nexport default Signup;","map":{"version":3,"sources":["C:/Users/Song/Desktop/projectpf/Ver2/frontend/pages/signup.js"],"names":["React","useState","useCallback","useEffect","Form","Input","Checkbox","Button","SIGN_UP_REQUEST","isSigningUp","useDispatch","useSelector","Router","styled","SignupError","div","userInput","initValue","value","setter","handler","e","target","Signup","id","setId","nick","setNick","password","setPassword","passwordCheck","setPasswordCheck","term","setTerm","passwrodError","setpasswordError","termError","setTermError","dispatch","state","user","me","alert","push","onSubmit","preventDefault","console","log","type","data","userId","nickname","onChangeId","onChangeNick","onChangePassword","onChangePasswordChk","onChangeTerm","checked","padding","marginTop"],"mappings":"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","sourcesContent":["import React, { useState, useCallback, useEffect } from \"react\";\r\nimport { Form, Input, Checkbox, Button } from \"antd\";\r\nimport { SIGN_UP_REQUEST , isSigningUp } from \"../reducers/user\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport Router from 'next/router';\r\nimport styled from 'styled-components';\r\n\r\nconst SignupError = styled.div`\r\n  color: red;\r\n`;\r\n// Coustom hook 훅에 기능을 추가해서 새로 만듬 ( 중복방지 등 )\r\n// useState(hook) 는 커스텀 훅 제외한 곳에서 사용하지 않기\r\nexport const userInput = (initValue = null) => {\r\n  const [value, setter] = useState(initValue);\r\n  const handler = useCallback(e => {\r\n    setter(e.target.value);\r\n  }, []);\r\n  return [value, handler];\r\n};\r\n\r\n////////////////////////////////\r\n\r\nconst Signup = () => {\r\n  const [id, setId] = useState(\"\");\r\n  const [nick, setNick] = useState(\"\");\r\n  const [password, setPassword] = useState(\"\");\r\n  const [passwordCheck, setPasswordCheck] = useState(\"\");\r\n  const [term, setTerm] = useState(false);\r\n  const [passwrodError, setpasswordError] = useState(false);\r\n  const [termError, setTermError] = useState(false);\r\n  const dispatch = useDispatch()\r\n  const { isSigningUp, me } = useSelector(state =>state.user)\r\n\r\n  useEffect(()=>{\r\n    if(me){\r\n      alert('로그인 성공');\r\n      Router.push('/');\r\n    }\r\n  },[me && me.id])\r\n  const onSubmit = useCallback(e => {\r\n      e.preventDefault();\r\n      console.log({\r\n        id,\r\n        nick,\r\n        password,\r\n        passwordCheck,\r\n        term\r\n      });\r\n      if (password !== passwordCheck) {\r\n        return setpasswordError(true);\r\n      }\r\n      if (!term) {\r\n        return setTermError(true);\r\n      }\r\n      alert('회원가입이 완료되었습니다.');\r\n      Router.push('/');\r\n      return dispatch({\r\n        type: SIGN_UP_REQUEST,\r\n        data:{\r\n          userId: id,\r\n          password,\r\n          nickname: nick,\r\n        },\r\n      });\r\n\r\n    }, [id, nick, password, passwordCheck, term]  // usecallback 안에서는 안에 쓰이는 state 전부 넣어주자\r\n  );\r\n  const onChangeId = e => {\r\n    setId(e.target.value);\r\n  };\r\n  const onChangeNick = e => {\r\n    setNick(e.target.value);\r\n  };\r\n  const onChangePassword = e => {\r\n    setPassword(e.target.value);\r\n  };\r\n  const onChangePasswordChk = useCallback(\r\n    e => {\r\n      setpasswordError(e.target.value !== password);\r\n      setPasswordCheck(e.target.value);\r\n    },\r\n    [password]\r\n  );\r\n  const onChangeTerm = useCallback(e => {\r\n    setTermError(false);\r\n    setTerm(e.target.checked);\r\n  }, []);\r\n  if(me){\r\n    return null;\r\n  }\r\n\r\n  return (\r\n    <>\r\n      <Form onSubmit={onSubmit} style={{ padding: 10 }}>\r\n        <div>\r\n          <label htmlFor=\"user-id\">아이디</label>\r\n          <br />\r\n          <Input\r\n            name=\"user-id\"\r\n            required\r\n            value={id}\r\n            onChange={onChangeId}\r\n          ></Input>\r\n        </div>\r\n\r\n        <div>\r\n          <label htmlFor=\"user-nick\">닉네임</label>\r\n          <Input\r\n            name=\"user-nick\"\r\n            required\r\n            value={nick}\r\n            onChange={onChangeNick}\r\n          ></Input>\r\n        </div>\r\n        <div>\r\n          <label htmlFor=\"user-pass\">비밀번호</label>\r\n          <br />\r\n\r\n          <Input\r\n            name=\"user-pass\"\r\n            type=\"password\"\r\n            required\r\n            value={password}\r\n            onChange={onChangePassword}\r\n          ></Input>\r\n        </div>\r\n        <div>\r\n          <label htmlFor=\"user-pass-chk\">비밀번호 체크</label>\r\n          <br />\r\n\r\n          <Input\r\n            name=\"user-pass-chk\"\r\n            type=\"password\"\r\n            required\r\n            value={passwordCheck}\r\n            onChange={onChangePasswordChk}\r\n          ></Input>\r\n          {passwrodError && (\r\n            <SignupError> 비밀번호가 일치하지 않습니다.</SignupError>\r\n          )}\r\n        </div>\r\n        <div>\r\n          <Checkbox name=\"user-term\" checked={term} onChange={onChangeTerm}>\r\n            동의합니다.\r\n          </Checkbox>\r\n          {termError && (\r\n            <SignupError> 약관에 동의 해주세요.</SignupError>\r\n          )}\r\n        </div>\r\n        <div>\r\n          <div style={{ marginTop: 10 }}></div>\r\n          <Button type=\"primary\" htmlType=\"submit\" loading={isSigningUp}>\r\n            가입하기\r\n          </Button>\r\n        </div>\r\n      </Form>\r\n    </>\r\n  );\r\n};\r\nexport default Signup;\r\n"]},"metadata":{},"sourceType":"module"}