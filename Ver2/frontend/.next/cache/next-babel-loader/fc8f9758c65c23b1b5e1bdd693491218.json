{"ast":null,"code":"var __jsx = React.createElement;\nimport React, { useState } from 'react';\nimport { Icon } from 'antd';\nimport Slick from 'react-slick';\nimport styled from 'styled-components';\nconst Overlay = styled.div`\n  position: fixed;\n  z-index: 5000;\n  top: 0;\n  left: 0;\n  right: 0;\n  bottom: 0;\n`; // header 안에들어있는 h1이란 의미, &은 사스나 레스 에서 자기자신 가르키는 태그(여기선 h1은 자식), \n\nconst Header = styled.header`\n  height: 44;\n  background: white;\n  position: relative;\n  padding: 0;\n  text-align: center;  \n\n  & h1{\n    margin: 0;\n    fontSize: 17px;\n    color: #333;\n    line-height: 44px;\n  }\n`;\nconst SlickWrapper = styled.div`\n  height: calc(100% - 44px);\n  background: #090909;\n`; // 스타일 이미 적용되있는 앤티디 컴포넌트도 스타일 적용 가능\n\nconst CloseBtn = styled(Icon)` \n position: absolute;\n right: 0;\n top: 0;\n padding: 15;\n line-height: 14px;\n cursor: pointer;\n`; // div 스타일을 자식으로 넣은 경우\n\nconst Indicator = styled.div`\n  text-align: center;\n  & > div {\n    width: 75;\n    height: 30;\n    line-height: 30px;\n    borderRadius: 15;\n    background: #313131;\n    display: inline-block;\n    text-align: center;\n    color: white;\n    font-size: 15px;\n  }\n`;\nconst ImgWrapper = styled.div`\npadding: 32px;\ntext-align: center;\n& img{\n  margin: 0 auto; \n  max-height: 750px;\n}\n`;\n\nconst ImagesZoom = ({\n  images,\n  onClose\n}) => {\n  const {\n    0: currentSlide,\n    1: setCurrentSlide\n  } = useState(0); // 몇번째 이미지를 보고있는지\n\n  return __jsx(Overlay, null, __jsx(Header, null, __jsx(\"h1\", null, \"\\uC0C1\\uC138 \\uC774\\uBBF8\\uC9C0\"), __jsx(CloseBtn, null)), __jsx(SlickWrapper, null, __jsx(\"div\", null, __jsx(Slick, {\n    initialSlide: 0 // 처음 보여줄 이미지 \n    ,\n    afterChange: slide => setCurrentSlide(slide) // 슬라이드 할때마다 index 변경\n    ,\n    infinite: false // 무한 슬라이드 1~4 > 4~1\n    ,\n    arrows: true,\n    slidesToShow: 1 // 한번에 1장만 보여줌\n    ,\n    slidesToScroll: 1 // 한번에 1장만 슬라이드\n\n  }, images.map(v => {\n    return __jsx(ImgWrapper, null, __jsx(\"img\", {\n      src: `http://localhost:3065/${v.src}`\n    }));\n  })), __jsx(Indicator, null, __jsx(\"div\", null, currentSlide + 1, \" / \", images.length)))));\n};\n\nexport default ImagesZoom;","map":{"version":3,"sources":["C:/Users/Song/Desktop/projectpf/Ver2/frontend/components/ImagesZoom.js"],"names":["React","useState","Icon","Slick","styled","Overlay","div","Header","header","SlickWrapper","CloseBtn","Indicator","ImgWrapper","ImagesZoom","images","onClose","currentSlide","setCurrentSlide","slide","map","v","src","length"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,QAAhB,QAA+B,OAA/B;AAEA,SAASC,IAAT,QAAqB,MAArB;AACA,OAAOC,KAAP,MAAkB,aAAlB;AACA,OAAOC,MAAP,MAAmB,mBAAnB;AAEA,MAAMC,OAAO,GAAGD,MAAM,CAACE,GAAI;;;;;;;CAA3B,C,CAQA;;AACA,MAAMC,MAAM,GAAGH,MAAM,CAACI,MAAO;;;;;;;;;;;;;CAA7B;AAgBA,MAAMC,YAAY,GAAGL,MAAM,CAACE,GAAI;;;CAAhC,C,CAIA;;AACA,MAAMI,QAAQ,GAAGN,MAAM,CAACF,IAAD,CAAO;;;;;;;CAA9B,C,CAQA;;AACA,MAAMS,SAAS,GAAGP,MAAM,CAACE,GAAI;;;;;;;;;;;;;CAA7B;AAcA,MAAMM,UAAU,GAAGR,MAAM,CAACE,GAAI;;;;;;;CAA9B;;AAQA,MAAMO,UAAU,GAAG,CAAC;AAAEC,EAAAA,MAAF;AAAUC,EAAAA;AAAV,CAAD,KAAyB;AAC1C,QAAM;AAAA,OAACC,YAAD;AAAA,OAAeC;AAAf,MAAkChB,QAAQ,CAAC,CAAD,CAAhD,CAD0C,CACW;;AAErD,SACE,MAAC,OAAD,QACE,MAAC,MAAD,QACE,oDADF,EAEE,MAAC,QAAD,OAFF,CADF,EAKE,MAAC,YAAD,QACE,mBACE,MAAC,KAAD;AACE,IAAA,YAAY,EAAE,CADhB,CACmB;AADnB;AAEE,IAAA,WAAW,EAAEiB,KAAK,IAAID,eAAe,CAACC,KAAD,CAFvC,CAEgD;AAFhD;AAGE,IAAA,QAAQ,EAAE,KAHZ,CAGmB;AAHnB;AAIE,IAAA,MAAM,MAJR;AAKE,IAAA,YAAY,EAAE,CALhB,CAKmB;AALnB;AAME,IAAA,cAAc,EAAE,CANlB,CAMqB;;AANrB,KAQGJ,MAAM,CAACK,GAAP,CAAYC,CAAD,IAAO;AACjB,WACE,MAAC,UAAD,QACE;AAAK,MAAA,GAAG,EAAG,yBAAwBA,CAAC,CAACC,GAAI;AAAzC,MADF,CADF;AAKD,GANA,CARH,CADF,EAiBE,MAAC,SAAD,QACE,mBACGL,YAAY,GAAG,CADlB,SACwBF,MAAM,CAACQ,MAD/B,CADF,CAjBF,CADF,CALF,CADF;AAiCD,CApCD;;AA6CA,eAAeT,UAAf","sourcesContent":["import React, { useState} from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport { Icon } from 'antd';\r\nimport Slick from 'react-slick';\r\nimport styled from 'styled-components';\r\n\r\nconst Overlay = styled.div`\r\n  position: fixed;\r\n  z-index: 5000;\r\n  top: 0;\r\n  left: 0;\r\n  right: 0;\r\n  bottom: 0;\r\n`;\r\n// header 안에들어있는 h1이란 의미, &은 사스나 레스 에서 자기자신 가르키는 태그(여기선 h1은 자식), \r\nconst Header = styled.header`\r\n  height: 44;\r\n  background: white;\r\n  position: relative;\r\n  padding: 0;\r\n  text-align: center;  \r\n\r\n  & h1{\r\n    margin: 0;\r\n    fontSize: 17px;\r\n    color: #333;\r\n    line-height: 44px;\r\n  }\r\n`;\r\n\r\n\r\nconst SlickWrapper = styled.div`\r\n  height: calc(100% - 44px);\r\n  background: #090909;\r\n`;\r\n// 스타일 이미 적용되있는 앤티디 컴포넌트도 스타일 적용 가능\r\nconst CloseBtn = styled(Icon)` \r\n position: absolute;\r\n right: 0;\r\n top: 0;\r\n padding: 15;\r\n line-height: 14px;\r\n cursor: pointer;\r\n`;\r\n// div 스타일을 자식으로 넣은 경우\r\nconst Indicator = styled.div`\r\n  text-align: center;\r\n  & > div {\r\n    width: 75;\r\n    height: 30;\r\n    line-height: 30px;\r\n    borderRadius: 15;\r\n    background: #313131;\r\n    display: inline-block;\r\n    text-align: center;\r\n    color: white;\r\n    font-size: 15px;\r\n  }\r\n`;\r\nconst ImgWrapper = styled.div`\r\npadding: 32px;\r\ntext-align: center;\r\n& img{\r\n  margin: 0 auto; \r\n  max-height: 750px;\r\n}\r\n`;\r\nconst ImagesZoom = ({ images, onClose }) => {\r\n  const [currentSlide, setCurrentSlide] = useState(0); // 몇번째 이미지를 보고있는지\r\n\r\n  return (\r\n    <Overlay>\r\n      <Header>\r\n        <h1>상세 이미지</h1>\r\n        <CloseBtn/>\r\n      </Header>\r\n      <SlickWrapper>\r\n        <div>\r\n          <Slick\r\n            initialSlide={0} // 처음 보여줄 이미지 \r\n            afterChange={slide => setCurrentSlide(slide)} // 슬라이드 할때마다 index 변경\r\n            infinite={false} // 무한 슬라이드 1~4 > 4~1\r\n            arrows\r\n            slidesToShow={1} // 한번에 1장만 보여줌\r\n            slidesToScroll={1} // 한번에 1장만 슬라이드\r\n          >\r\n            {images.map((v) => {\r\n              return (\r\n                <ImgWrapper>\r\n                  <img src={`http://localhost:3065/${v.src}`}/>\r\n                </ImgWrapper>\r\n              );\r\n            })}\r\n          </Slick>\r\n          <Indicator>\r\n            <div>\r\n              {currentSlide + 1} / {images.length}\r\n            </div>\r\n          </Indicator>\r\n        </div>\r\n      </SlickWrapper>\r\n    </Overlay>\r\n  );\r\n};\r\n\r\nImagesZoom.propTypes = {\r\n  images: PropTypes.arrayOf(PropTypes.shape({\r\n    src: PropTypes.string,\r\n  })).isRequired,\r\n  onClose: PropTypes.func.isRequired,\r\n};\r\n\r\nexport default ImagesZoom;"]},"metadata":{},"sourceType":"module"}