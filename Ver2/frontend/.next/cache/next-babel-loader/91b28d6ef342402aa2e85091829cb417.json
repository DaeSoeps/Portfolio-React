{"ast":null,"code":"import _regeneratorRuntime from \"@babel/runtime-corejs2/regenerator\";\nimport _parseInt from \"@babel/runtime-corejs2/core-js/parse-int\";\nvar __jsx = React.createElement;\nimport React from 'react';\nimport { useSelector } from 'react-redux';\nimport PropTypes from 'prop-types';\nimport { LOAD_POST_REQUEST } from '../reducers/post';\n\nvar Post = function Post(_ref) {\n  var id = _ref.id;\n\n  var _useSelector = useSelector(function (state) {\n    return state.post;\n  }),\n      singlePost = _useSelector.singlePost;\n\n  return __jsx(React.Fragment, null, \"title=\", \"\".concat(singlePost.User.nickname, \"\\uB2D8\\uC758 \\uAE00\"), \"description=\", singlePost.content, \"meta=\", [{\n    name: 'description',\n    content: singlePost.content\n  }, {\n    property: 'og:title',\n    content: \"\".concat(singlePost.User.nickname, \"\\uB2D8\\uC758 \\uAC8C\\uC2DC\\uAE00\")\n  }, {\n    property: 'og:description',\n    content: singlePost.content\n  }, {\n    property: 'og:image',\n    content: singlePost.Images[0] && \"http://localhost:3065/\".concat(singlePost.Images[0].src)\n  }, {\n    property: 'og:url',\n    content: \"http://localhost:3060/post/\".concat(id)\n  }], __jsx(\"div\", {\n    itemScope: \"content\"\n  }, singlePost.content), __jsx(\"div\", {\n    itemScope: \"author\"\n  }, singlePost.User.nickname), __jsx(\"div\", null, singlePost.Images[0] && __jsx(\"img\", {\n    src: \"http://localhost:3065/\".concat(singlePost.Images[0].src)\n  })));\n};\n\nPost.getInitialProps = function _callee(context) {\n  return _regeneratorRuntime.async(function _callee$(_context) {\n    while (1) {\n      switch (_context.prev = _context.next) {\n        case 0:\n          context.store.dispatch({\n            type: LOAD_POST_REQUEST,\n            data: context.query.id\n          });\n          return _context.abrupt(\"return\", {\n            id: _parseInt(context.query.id, 10)\n          });\n\n        case 2:\n        case \"end\":\n          return _context.stop();\n      }\n    }\n  });\n};\n\nPost.propTypes = {\n  id: PropTypes.number.isRequired\n};\nexport default Post;","map":{"version":3,"sources":["C:/Users/Song/Desktop/projectpf/Ver2/frontend/pages/post.js"],"names":["React","useSelector","PropTypes","LOAD_POST_REQUEST","Post","id","state","post","singlePost","User","nickname","content","name","property","Images","src","getInitialProps","context","store","dispatch","type","data","query","propTypes","number","isRequired"],"mappings":";;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,WAAT,QAA4B,aAA5B;AACA,OAAOC,SAAP,MAAsB,YAAtB;AAEA,SAASC,iBAAT,QAAkC,kBAAlC;;AAEA,IAAMC,IAAI,GAAG,SAAPA,IAAO,OAAY;AAAA,MAATC,EAAS,QAATA,EAAS;;AAAA,qBACAJ,WAAW,CAAC,UAAAK,KAAK;AAAA,WAAIA,KAAK,CAACC,IAAV;AAAA,GAAN,CADX;AAAA,MACfC,UADe,gBACfA,UADe;;AAEvB,SACE,gDAEcA,UAAU,CAACC,IAAX,CAAgBC,QAF9B,0CAGiBF,UAAU,CAACG,OAH5B,WAIU,CAAC;AACLC,IAAAA,IAAI,EAAE,aADD;AACgBD,IAAAA,OAAO,EAAEH,UAAU,CAACG;AADpC,GAAD,EAEH;AACDE,IAAAA,QAAQ,EAAE,UADT;AACqBF,IAAAA,OAAO,YAAKH,UAAU,CAACC,IAAX,CAAgBC,QAArB;AAD5B,GAFG,EAIH;AACDG,IAAAA,QAAQ,EAAE,gBADT;AAC2BF,IAAAA,OAAO,EAAEH,UAAU,CAACG;AAD/C,GAJG,EAMH;AACDE,IAAAA,QAAQ,EAAE,UADT;AACqBF,IAAAA,OAAO,EAAEH,UAAU,CAACM,MAAX,CAAkB,CAAlB,qCAAiDN,UAAU,CAACM,MAAX,CAAkB,CAAlB,EAAqBC,GAAtE;AAD9B,GANG,EAQH;AACDF,IAAAA,QAAQ,EAAE,QADT;AACmBF,IAAAA,OAAO,uCAAgCN,EAAhC;AAD1B,GARG,CAJV,EAgBE;AAAK,IAAA,SAAS,EAAC;AAAf,KAA0BG,UAAU,CAACG,OAArC,CAhBF,EAiBE;AAAK,IAAA,SAAS,EAAC;AAAf,KAAyBH,UAAU,CAACC,IAAX,CAAgBC,QAAzC,CAjBF,EAkBE,mBACGF,UAAU,CAACM,MAAX,CAAkB,CAAlB,KAAwB;AAAK,IAAA,GAAG,kCAA2BN,UAAU,CAACM,MAAX,CAAkB,CAAlB,EAAqBC,GAAhD;AAAR,IAD3B,CAlBF,CADF;AAwBD,CA1BD;;AA4BAX,IAAI,CAACY,eAAL,GAAuB,iBAAOC,OAAP;AAAA;AAAA;AAAA;AAAA;AACrBA,UAAAA,OAAO,CAACC,KAAR,CAAcC,QAAd,CAAuB;AACrBC,YAAAA,IAAI,EAAEjB,iBADe;AAErBkB,YAAAA,IAAI,EAAEJ,OAAO,CAACK,KAAR,CAAcjB;AAFC,WAAvB;AADqB,2CAKd;AAAEA,YAAAA,EAAE,EAAE,UAASY,OAAO,CAACK,KAAR,CAAcjB,EAAvB,EAA2B,EAA3B;AAAN,WALc;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,CAAvB;;AAQAD,IAAI,CAACmB,SAAL,GAAiB;AACflB,EAAAA,EAAE,EAAEH,SAAS,CAACsB,MAAV,CAAiBC;AADN,CAAjB;AAIA,eAAerB,IAAf","sourcesContent":["import React from 'react';\r\nimport { useSelector } from 'react-redux';\r\nimport PropTypes from 'prop-types';\r\n\r\nimport { LOAD_POST_REQUEST } from '../reducers/post';\r\n\r\nconst Post = ({ id }) => {\r\n  const { singlePost } = useSelector(state => state.post);\r\n  return (\r\n    <>\r\n  \r\n        title={`${singlePost.User.nickname}님의 글`}\r\n        description={singlePost.content}\r\n        meta={[{\r\n          name: 'description', content: singlePost.content,\r\n        }, {\r\n          property: 'og:title', content: `${singlePost.User.nickname}님의 게시글`,\r\n        }, {\r\n          property: 'og:description', content: singlePost.content,\r\n        }, {\r\n          property: 'og:image', content: singlePost.Images[0] && `http://localhost:3065/${singlePost.Images[0].src}`,\r\n        }, {\r\n          property: 'og:url', content: `http://localhost:3060/post/${id}`,\r\n        }]}\r\n\r\n      <div itemScope=\"content\">{singlePost.content}</div>\r\n      <div itemScope=\"author\">{singlePost.User.nickname}</div>\r\n      <div>\r\n        {singlePost.Images[0] && <img src={`http://localhost:3065/${singlePost.Images[0].src}`} />}\r\n      </div>\r\n    </>\r\n  );\r\n};\r\n\r\nPost.getInitialProps = async (context) => {\r\n  context.store.dispatch({\r\n    type: LOAD_POST_REQUEST,\r\n    data: context.query.id,\r\n  });\r\n  return { id: parseInt(context.query.id, 10) };\r\n};\r\n\r\nPost.propTypes = {\r\n  id: PropTypes.number.isRequired,\r\n};\r\n\r\nexport default Post;"]},"metadata":{},"sourceType":"module"}