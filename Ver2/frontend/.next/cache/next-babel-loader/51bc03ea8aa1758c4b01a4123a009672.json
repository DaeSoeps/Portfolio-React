{"ast":null,"code":"import _parseInt from \"@babel/runtime-corejs2/core-js/parse-int\";\nimport _regeneratorRuntime from \"@babel/runtime-corejs2/regenerator\";\nvar __jsx = React.createElement;\nimport React from 'react';\nimport { useSelector } from \"react-redux\";\nimport PropTypes from 'prop-types';\nimport { LOAD_POST_REQUEST } from '../reducers/post';\n\nvar Post = function Post(_ref) {\n  var id, _useSelector, singlePost;\n\n  return _regeneratorRuntime.async(function Post$(_context) {\n    while (1) {\n      switch (_context.prev = _context.next) {\n        case 0:\n          id = _ref.id;\n          _useSelector = useSelector(function (state) {\n            return state.post;\n          }), singlePost = _useSelector.singlePost;\n          _context.t0 = __jsx;\n          _context.t1 = React.Fragment;\n          _context.t2 = __jsx;\n          _context.next = 7;\n          return _regeneratorRuntime.awrap(singlePost.content);\n\n        case 7:\n          _context.t3 = _context.sent;\n          _context.t4 = (0, _context.t2)(\"div\", null, _context.t3);\n          _context.t5 = __jsx;\n          _context.next = 12;\n          return _regeneratorRuntime.awrap(singlePost.User.nickname);\n\n        case 12:\n          _context.t6 = _context.sent;\n          _context.t7 = (0, _context.t5)(\"div\", null, _context.t6);\n          _context.t8 = __jsx;\n          _context.next = 17;\n          return _regeneratorRuntime.awrap(singlePost.Images[0]);\n\n        case 17:\n          _context.t9 = _context.sent;\n\n          if (!_context.t9) {\n            _context.next = 20;\n            break;\n          }\n\n          _context.t9 = __jsx(\"img\", {\n            src: \"http://localhost:3065/\".concat(singlePost.Images[0].src)\n          });\n\n        case 20:\n          _context.t10 = _context.t9;\n          _context.t11 = (0, _context.t8)(\"div\", null, _context.t10);\n          return _context.abrupt(\"return\", (0, _context.t0)(_context.t1, null, _context.t4, _context.t7, _context.t11));\n\n        case 23:\n        case \"end\":\n          return _context.stop();\n      }\n    }\n  });\n};\n\nPost.getInitialProps = function _callee(context) {\n  return _regeneratorRuntime.async(function _callee$(_context2) {\n    while (1) {\n      switch (_context2.prev = _context2.next) {\n        case 0:\n          context.store.dispatch({\n            type: LOAD_POST_REQUEST,\n            data: context.query.id\n          });\n          return _context2.abrupt(\"return\", {\n            id: _parseInt(context.query.id, 10)\n          });\n\n        case 2:\n        case \"end\":\n          return _context2.stop();\n      }\n    }\n  });\n};\n\nPost.propTypes = {\n  id: PropTypes.number.isRequired\n};\nexport default Post;","map":{"version":3,"sources":["C:/Users/Song/Desktop/projectpf/Ver2/frontend/pages/post.js"],"names":["React","useSelector","PropTypes","LOAD_POST_REQUEST","Post","id","state","post","singlePost","content","User","nickname","Images","src","getInitialProps","context","store","dispatch","type","data","query","propTypes","number","isRequired"],"mappings":";;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,WAAT,QAA4B,aAA5B;AACA,OAAOC,SAAP,MAAsB,YAAtB;AACA,SAASC,iBAAT,QAAkC,kBAAlC;;AACA,IAAMC,IAAI,GAAG,SAAPA,IAAO;AAAA;;AAAA;AAAA;AAAA;AAAA;AAASC,UAAAA,EAAT,QAASA,EAAT;AAAA,yBACcJ,WAAW,CAAC,UAAAK,KAAK;AAAA,mBAAIA,KAAK,CAACC,IAAV;AAAA,WAAN,CADzB,EACDC,UADC,gBACDA,UADC;AAAA;AAAA;AAAA;AAAA;AAAA,2CAIWA,UAAU,CAACC,OAJtB;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,2CAKWD,UAAU,CAACE,IAAX,CAAgBC,QAL3B;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,2CAOUH,UAAU,CAACI,MAAX,CAAkB,CAAlB,CAPV;;AAAA;AAAA;;AAAA;AAAA;AAAA;AAAA;;AAAA,wBAOkC;AAAK,YAAA,GAAG,kCAA2BJ,UAAU,CAACI,MAAX,CAAkB,CAAlB,EAAqBC,GAAhD;AAAR,YAPlC;;AAAA;AAAA;AAAA;AAAA;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,CAAb;;AAYAT,IAAI,CAACU,eAAL,GAAuB,iBAAOC,OAAP;AAAA;AAAA;AAAA;AAAA;AACnBA,UAAAA,OAAO,CAACC,KAAR,CAAcC,QAAd,CAAuB;AACnBC,YAAAA,IAAI,EAAEf,iBADa;AAEnBgB,YAAAA,IAAI,EAAEJ,OAAO,CAACK,KAAR,CAAcf;AAFD,WAAvB;AADmB,4CAKZ;AAAEA,YAAAA,EAAE,EAAE,UAASU,OAAO,CAACK,KAAR,CAAcf,EAAvB,EAA2B,EAA3B;AAAN,WALY;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,CAAvB;;AAOAD,IAAI,CAACiB,SAAL,GAAiB;AACbhB,EAAAA,EAAE,EAAEH,SAAS,CAACoB,MAAV,CAAiBC;AADR,CAAjB;AAGA,eAAenB,IAAf","sourcesContent":["import React from 'react';\r\nimport { useSelector } from \"react-redux\";\r\nimport PropTypes from 'prop-types';\r\nimport { LOAD_POST_REQUEST } from '../reducers/post';\r\nconst Post = async ({ id }) =>{\r\n    const { singlePost } = useSelector(state => state.post);\r\n    return (\r\n        <>\r\n            <div>{await singlePost.content}</div>\r\n            <div>{await singlePost.User.nickname}</div>\r\n            <div>\r\n                {await singlePost.Images[0] && <img src={`http://localhost:3065/${singlePost.Images[0].src}`}></img>}\r\n            </div>\r\n        </>\r\n    )\r\n}\r\nPost.getInitialProps = async (context)=>{\r\n    context.store.dispatch({\r\n        type: LOAD_POST_REQUEST,\r\n        data: context.query.id,\r\n    });\r\n    return { id: parseInt(context.query.id, 10)};\r\n}\r\nPost.propTypes = {\r\n    id: PropTypes.number.isRequired,\r\n};\r\nexport default Post;"]},"metadata":{},"sourceType":"module"}