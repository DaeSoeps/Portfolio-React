{"ast":null,"code":"import _Object$defineProperty from \"@babel/runtime-corejs2/core-js/object/define-property\";\nimport _Object$defineProperties from \"@babel/runtime-corejs2/core-js/object/define-properties\";\nimport _Object$getOwnPropertyDescriptors from \"@babel/runtime-corejs2/core-js/object/get-own-property-descriptors\";\nimport _Object$getOwnPropertyDescriptor from \"@babel/runtime-corejs2/core-js/object/get-own-property-descriptor\";\nimport _Object$getOwnPropertySymbols from \"@babel/runtime-corejs2/core-js/object/get-own-property-symbols\";\nimport _Object$keys from \"@babel/runtime-corejs2/core-js/object/keys\";\nimport _defineProperty from \"@babel/runtime-corejs2/helpers/esm/defineProperty\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = _Object$keys(object); if (_Object$getOwnPropertySymbols) { var symbols = _Object$getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return _Object$getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (_Object$getOwnPropertyDescriptors) { _Object$defineProperties(target, _Object$getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { _Object$defineProperty(target, key, _Object$getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nvar dummyUser = {\n  nickname: \"Guest\",\n  Post: [],\n  Followings: [],\n  Followers: [],\n  signUpData: {},\n  id: 1\n};\nexport var initialState = {\n  isLoggingOut: false,\n  // 로그아웃 시도중\n  isLoggingIn: false,\n  // 로그인 시도중\n  logInErrorReason: '',\n  // 로그인 실패 사유\n  isSignedUp: false,\n  // 회원가입 성공\n  isSigningUp: false,\n  // 회원가입 시도중\n  singUpErrorReason: '',\n  // 회원가입 실패 사유 \n  me: null,\n  // 내정보\n  followingList: [],\n  // 팔로잉 리스트\n  followerList: [],\n  // 팔로워 리스트\n  userInfo: null // 남의 정보\n\n}; // 리덕스의 액션은 동기적으로 실행되기 떄문에 saga를 이용해 비동기를 구현함\n//회원가입\n\nexport var SIGN_UP_REQUEST = 'SIGN_UP_REQUEST';\nexport var SIGN_UP_SUCCESS = 'SING_UP_SUCCESS';\nexport var SIGN_UP_FAILURE = 'SIGN_UP_FAILURE'; //로그인\n\nexport var LOG_IN_REQUEST = 'LOG_IN_REQUEST';\nexport var LOG_IN_SUCCESS = 'LOG_IN_SUCCESS';\nexport var LOG_IN_FAILURE = 'LOG_IN_FAILURE'; //사용자 정보 불러오기\n\nexport var LOAD_USER_REQUEST = 'LOAD_USER_REQUEST';\nexport var LOAD_USER_SUCCESS = 'LOAD_USER_SUCCESS';\nexport var LOAD_USER_FAILURE = 'LOAD_USER_FAILURE'; //로그아웃\n\nexport var LOG_OUT_REQUEST = 'LOG_OUT_REQUEST';\nexport var LOG_OUT_SUCCESS = 'LOG_OUT_SUCCESS';\nexport var LOG_OUT_FAILURE = 'LOG_OUT_FAILURE'; //팔로우 목록\n\nexport var LOAD_FOLLOW_REQUEST = 'LOAD_FOLLOW_REQUEST';\nexport var LOAD_FOLLOW_SUCCESS = 'LOAD_FOLLOW_SUCCESS';\nexport var LOAD_FOLLOW_FAILURE = 'LOAD_FOLLOW_FAILURE'; //다른 사람을 팔로우\n\nexport var FOLLOW_USER_REQUEST = 'FOLLOW_USER_REQUEST';\nexport var FOLLOW_USER_SUCCESS = 'FOLLOW_USER_SUCCESS';\nexport var FOLLOW_USER_FAILURE = 'FOLLOW_USER_FAILURE'; //다른 사람을 언팔로우\n\nexport var UNFOLLOW_USER_REQUEST = 'UNFOLLOW_USER_REQUEST';\nexport var UNFOLLOW_USER_SUCCESS = 'UNFOLLOW_USER_SUCCESS';\nexport var UNFOLLOW_USER_FAILURE = 'UNFOLLOW_USER_FAILURE'; //팔로우한 사람을 제거\n\nexport var REMOVE_FOLLOWER_REQUEST = 'REMOVE_FOLLOWER_REQUEST';\nexport var REMOVE_FOLLOWER_SUCCESS = 'REMOVE_FOLLOWER_SUCCESS';\nexport var REMOVE_FOLLOWER_FAILURE = 'REMOVE_FOLLOWER_FAILURE'; //리듀서의 단점때문에 만들어야 됨\n\nexport var ADD_POST_TO_ME = 'ADD_POST_TO_ME';\n\nvar reducer = function reducer() {\n  var state = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : initialState;\n  var action = arguments.length > 1 ? arguments[1] : undefined;\n\n  switch (action.type) {\n    case LOG_IN_REQUEST:\n      {\n        return _objectSpread({}, state, {\n          isLoggingIn: true,\n          logInErrorReason: ''\n        });\n      }\n\n    case LOG_IN_SUCCESS:\n      {\n        return _objectSpread({}, state, {\n          isLoggingIn: false,\n          me: action.data,\n          isLoading: false\n        });\n      }\n\n    case LOG_IN_FAILURE:\n      {\n        return _objectSpread({}, state, {\n          isLoggingIn: false,\n          logInErrorReason: action.error,\n          me: null\n        });\n      }\n\n    case LOG_OUT_REQUEST:\n      {\n        return _objectSpread({}, state, {\n          isLoggingOut: true // 로그아웃버튼 로딩\n\n        });\n      }\n\n    case LOG_OUT_REQUEST:\n      {\n        return _objectSpread({}, state, {\n          isLoggingOut: false,\n          me: null\n        });\n      }\n\n    case SIGN_UP_REQUEST:\n      {\n        return _objectSpread({}, state, {\n          isSigningUp: true,\n          isSignedUp: false,\n          singUpErrorReason: ''\n        });\n      }\n\n    case SIGN_UP_SUCCESS:\n      {\n        return _objectSpread({}, state, {\n          signUpData: action.data,\n          isSigningUp: false,\n          isSignedUp: true\n        });\n      }\n\n    case SIGN_UP_FAILURE:\n      {\n        return _objectSpread({}, state, {\n          signUpData: action.data,\n          isSigningUp: false,\n          singUpErrorReason: action.error\n        });\n      }\n\n    case LOAD_USER_REQUEST:\n      {\n        return _objectSpread({}, state);\n      }\n\n    case LOAD_USER_SUCCESS:\n      {\n        return _objectSpread({}, state, {\n          me: action.data\n        });\n      }\n\n    case LOAD_USER_FAILURE:\n      {\n        return _objectSpread({}, state);\n      }\n\n    default:\n      {\n        return _objectSpread({}, state);\n      }\n  }\n};\n\nexport default reducer;","map":{"version":3,"sources":["C:/Users/Song/Desktop/projectpf/Ver2/frontend/reducers/user.js"],"names":["dummyUser","nickname","Post","Followings","Followers","signUpData","id","initialState","isLoggingOut","isLoggingIn","logInErrorReason","isSignedUp","isSigningUp","singUpErrorReason","me","followingList","followerList","userInfo","SIGN_UP_REQUEST","SIGN_UP_SUCCESS","SIGN_UP_FAILURE","LOG_IN_REQUEST","LOG_IN_SUCCESS","LOG_IN_FAILURE","LOAD_USER_REQUEST","LOAD_USER_SUCCESS","LOAD_USER_FAILURE","LOG_OUT_REQUEST","LOG_OUT_SUCCESS","LOG_OUT_FAILURE","LOAD_FOLLOW_REQUEST","LOAD_FOLLOW_SUCCESS","LOAD_FOLLOW_FAILURE","FOLLOW_USER_REQUEST","FOLLOW_USER_SUCCESS","FOLLOW_USER_FAILURE","UNFOLLOW_USER_REQUEST","UNFOLLOW_USER_SUCCESS","UNFOLLOW_USER_FAILURE","REMOVE_FOLLOWER_REQUEST","REMOVE_FOLLOWER_SUCCESS","REMOVE_FOLLOWER_FAILURE","ADD_POST_TO_ME","reducer","state","action","type","data","isLoading","error"],"mappings":"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","sourcesContent":["const dummyUser = {\r\n    nickname: \"Guest\",\r\n    Post: [],\r\n    Followings: [],\r\n    Followers: [],\r\n    signUpData: {},\r\n    id:1,\r\n};\r\n\r\nexport const initialState = {\r\n    isLoggingOut: false, // 로그아웃 시도중\r\n    isLoggingIn: false, // 로그인 시도중\r\n    logInErrorReason: '', // 로그인 실패 사유\r\n    isSignedUp: false, // 회원가입 성공\r\n    isSigningUp: false, // 회원가입 시도중\r\n    singUpErrorReason: '', // 회원가입 실패 사유 \r\n    me: null, // 내정보\r\n    followingList: [], // 팔로잉 리스트\r\n    followerList: [],  // 팔로워 리스트\r\n    userInfo: null // 남의 정보\r\n};\r\n// 리덕스의 액션은 동기적으로 실행되기 떄문에 saga를 이용해 비동기를 구현함\r\n//회원가입\r\nexport const SIGN_UP_REQUEST = 'SIGN_UP_REQUEST'; \r\nexport const SIGN_UP_SUCCESS = 'SING_UP_SUCCESS'; \r\nexport const SIGN_UP_FAILURE = 'SIGN_UP_FAILURE'; \r\n//로그인\r\nexport const LOG_IN_REQUEST = 'LOG_IN_REQUEST'; \r\nexport const LOG_IN_SUCCESS = 'LOG_IN_SUCCESS';\r\nexport const LOG_IN_FAILURE = 'LOG_IN_FAILURE';\r\n//사용자 정보 불러오기\r\nexport const LOAD_USER_REQUEST = 'LOAD_USER_REQUEST'; \r\nexport const LOAD_USER_SUCCESS = 'LOAD_USER_SUCCESS';\r\nexport const LOAD_USER_FAILURE = 'LOAD_USER_FAILURE';\r\n//로그아웃\r\nexport const LOG_OUT_REQUEST = 'LOG_OUT_REQUEST';\r\nexport const LOG_OUT_SUCCESS = 'LOG_OUT_SUCCESS';\r\nexport const LOG_OUT_FAILURE = 'LOG_OUT_FAILURE';\r\n//팔로우 목록\r\nexport const LOAD_FOLLOW_REQUEST = 'LOAD_FOLLOW_REQUEST';\r\nexport const LOAD_FOLLOW_SUCCESS = 'LOAD_FOLLOW_SUCCESS';\r\nexport const LOAD_FOLLOW_FAILURE = 'LOAD_FOLLOW_FAILURE';\r\n//다른 사람을 팔로우\r\nexport const FOLLOW_USER_REQUEST = 'FOLLOW_USER_REQUEST';\r\nexport const FOLLOW_USER_SUCCESS = 'FOLLOW_USER_SUCCESS';\r\nexport const FOLLOW_USER_FAILURE = 'FOLLOW_USER_FAILURE';\r\n//다른 사람을 언팔로우\r\nexport const UNFOLLOW_USER_REQUEST = 'UNFOLLOW_USER_REQUEST';\r\nexport const UNFOLLOW_USER_SUCCESS = 'UNFOLLOW_USER_SUCCESS';\r\nexport const UNFOLLOW_USER_FAILURE = 'UNFOLLOW_USER_FAILURE';\r\n//팔로우한 사람을 제거\r\nexport const REMOVE_FOLLOWER_REQUEST = 'REMOVE_FOLLOWER_REQUEST';\r\nexport const REMOVE_FOLLOWER_SUCCESS = 'REMOVE_FOLLOWER_SUCCESS';\r\nexport const REMOVE_FOLLOWER_FAILURE = 'REMOVE_FOLLOWER_FAILURE';\r\n//리듀서의 단점때문에 만들어야 됨\r\nexport const ADD_POST_TO_ME = 'ADD_POST_TO_ME';\r\n\r\n\r\nconst reducer = ( state = initialState, action) => {\r\n    switch (action.type){\r\n        case LOG_IN_REQUEST : {\r\n            return {\r\n                ...state,\r\n                isLoggingIn: true,\r\n                logInErrorReason :'',               \r\n            };\r\n        }\r\n        case LOG_IN_SUCCESS :{\r\n            return{\r\n                ...state,\r\n                isLoggingIn: false,\r\n                me : action.data,\r\n                isLoading: false,\r\n            };\r\n        }\r\n        case LOG_IN_FAILURE :{\r\n            return {\r\n                ...state,\r\n                isLoggingIn: false,\r\n                logInErrorReason : action.error,\r\n                me : null,\r\n            }\r\n        }\r\n        case LOG_OUT_REQUEST : {\r\n            return {\r\n                ...state,\r\n                isLoggingOut : true, // 로그아웃버튼 로딩\r\n            };\r\n        }\r\n        case LOG_OUT_REQUEST : {\r\n            return {\r\n                ...state,\r\n                isLoggingOut: false,\r\n                me : null\r\n            };\r\n        }\r\n        case SIGN_UP_REQUEST: {\r\n            return{\r\n                ...state,\r\n                isSigningUp : true,\r\n                isSignedUp : false,\r\n                singUpErrorReason : '',\r\n            };\r\n        }\r\n        case SIGN_UP_SUCCESS: {\r\n            return{\r\n                ...state,\r\n                signUpData: action.data,\r\n                isSigningUp : false,\r\n                isSignedUp : true,\r\n            };\r\n        }\r\n        case SIGN_UP_FAILURE: {\r\n            return{\r\n                ...state,\r\n                signUpData: action.data,\r\n                isSigningUp : false,\r\n                singUpErrorReason : action.error,\r\n            };\r\n        }\r\n        case LOAD_USER_REQUEST: {\r\n            return{\r\n                ...state,\r\n            };\r\n        }\r\n        case LOAD_USER_SUCCESS: {\r\n            return{\r\n                ...state,\r\n                me: action.data,\r\n            };\r\n        }\r\n        case LOAD_USER_FAILURE: {\r\n            return{\r\n                ...state,\r\n            };\r\n        }\r\n        default: {\r\n            return{\r\n                ...state,\r\n            };\r\n        }\r\n    } \r\n};\r\n\r\nexport default reducer;"]},"metadata":{},"sourceType":"module"}