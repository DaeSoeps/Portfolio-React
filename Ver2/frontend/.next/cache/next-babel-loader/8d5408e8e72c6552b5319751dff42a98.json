{"ast":null,"code":"var __jsx = React.createElement;\nimport React, { useCallback } from \"react\";\nimport { useSelector, useDispatch } from 'react-redux';\nimport NicknameEditForm from '../containers/NicknameEditForm'; // 폼은 state가 빈번하게 변하므로 분리를 해주자\n\nimport PostCard from '../containers/PostCard';\nimport { LOAD_FOLLOWERS_REQUEST, LOAD_FOLLOWINGS_REQUEST, UNFOLLOW_USER_REQUEST, REMOVE_FOLLOWER_REQUEST } from \"../reducers/user\";\nimport { LOAD_USER_POSTS_REQUEST } from \"../reducers/post\";\nimport FollowList from '../components/FollowList';\n\nconst Profile = () => {\n  const dispatch = useDispatch();\n  const {\n    followerList,\n    followingList,\n    hasMoreFollower,\n    hasMoreFollowing\n  } = useSelector(state => state.user);\n  const {\n    mainPosts\n  } = useSelector(state => state.post);\n  const onUnfollow = useCallback(userId => () => {\n    dispatch({\n      type: UNFOLLOW_USER_REQUEST,\n      data: userId\n    });\n  }, []);\n  const onRemoveFollower = useCallback(userId => () => {\n    dispatch({\n      type: REMOVE_FOLLOWER_REQUEST,\n      data: userId\n    });\n  }, []);\n  const loadMoreFollowings = useCallback(() => {\n    dispatch({\n      type: LOAD_FOLLOWINGS_REQUEST,\n      offset: followingList.length // (더보기 기능:3개씩) 기본값 limit = 3(처음 데이터 개수) > 3개씩 늘어남\n\n    });\n  }, [followingList.length]);\n  const loadMoreFollowers = useCallback(() => {\n    dispatch({\n      type: LOAD_FOLLOWERS_REQUEST,\n      offset: followerList.length\n    });\n  }, [followerList.length]);\n  return __jsx(\"div\", null, __jsx(NicknameEditForm, null), __jsx(FollowList, {\n    header: \"\\uD314\\uB85C\\uC789 \\uBAA9\\uB85D\",\n    data: followingList,\n    hasMore: hasMoreFollowing,\n    onClickMore: loadMoreFollowings,\n    onClickStop: onUnfollow\n  }), __jsx(FollowList, {\n    header: \"\\uD314\\uB85C\\uC6CC \\uBAA9\\uB85D\",\n    data: FollowList,\n    hasMore: hasMoreFollower,\n    onClickMore: loadMoreFollowers,\n    onClickStop: onRemoveFollower\n  }), __jsx(\"div\", null, mainPosts ? mainPosts.map(c => __jsx(PostCard, {\n    key: +c.createdAt,\n    post: c\n  })) : null));\n}; // Profile.getInitialProps= async (context)=>{\n//   const state = context.store.getState();\n//   context.store.dispatch({\n//     type: LOAD_FOLLOWERS_REQUEST,\n//     data: state.user.me && state.user.me.id,\n//   });\n//   context.store.dispatch({\n//     type: LOAD_FOLLOWINGS_REQUEST,\n//     data: state.user.me && state.user.me.id,\n//   });\n//   context.store.dispatch({\n//     type: LOAD_USER_POSTS_REQUEST,\n//     data: state.user.me && state.user.me.id,\n//   });\n// }\n\n\nexport default Profile;","map":{"version":3,"sources":["C:/Users/Song/Desktop/projectpf/Ver2/frontend/pages/profile.js"],"names":["React","useCallback","useSelector","useDispatch","NicknameEditForm","PostCard","LOAD_FOLLOWERS_REQUEST","LOAD_FOLLOWINGS_REQUEST","UNFOLLOW_USER_REQUEST","REMOVE_FOLLOWER_REQUEST","LOAD_USER_POSTS_REQUEST","FollowList","Profile","dispatch","followerList","followingList","hasMoreFollower","hasMoreFollowing","state","user","mainPosts","post","onUnfollow","userId","type","data","onRemoveFollower","loadMoreFollowings","offset","length","loadMoreFollowers","map","c","createdAt"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,WAAhB,QAAmC,OAAnC;AACA,SAASC,WAAT,EAAuBC,WAAvB,QAAyC,aAAzC;AACA,OAAOC,gBAAP,MAA6B,gCAA7B,C,CAA+D;;AAC/D,OAAOC,QAAP,MAAqB,wBAArB;AACA,SAASC,sBAAT,EAAiCC,uBAAjC,EAA0DC,qBAA1D,EAAiFC,uBAAjF,QAAgH,kBAAhH;AACA,SAASC,uBAAT,QAAwC,kBAAxC;AACA,OAAOC,UAAP,MAAuB,0BAAvB;;AAEA,MAAMC,OAAO,GAAG,MAAM;AACpB,QAAMC,QAAQ,GAAGV,WAAW,EAA5B;AACA,QAAM;AAAEW,IAAAA,YAAF;AAAgBC,IAAAA,aAAhB;AAA+BC,IAAAA,eAA/B;AAAgDC,IAAAA;AAAhD,MAAqEf,WAAW,CAACgB,KAAK,IAAIA,KAAK,CAACC,IAAhB,CAAtF;AACA,QAAM;AAAEC,IAAAA;AAAF,MAAgBlB,WAAW,CAACgB,KAAK,IAAIA,KAAK,CAACG,IAAhB,CAAjC;AAEA,QAAMC,UAAU,GAAGrB,WAAW,CAACsB,MAAM,IAAI,MAAM;AAC7CV,IAAAA,QAAQ,CAAC;AACPW,MAAAA,IAAI,EAAEhB,qBADC;AAEPiB,MAAAA,IAAI,EAAEF;AAFC,KAAD,CAAR;AAID,GAL6B,EAK5B,EAL4B,CAA9B;AAMA,QAAMG,gBAAgB,GAAGzB,WAAW,CAACsB,MAAM,IAAI,MAAM;AACnDV,IAAAA,QAAQ,CAAC;AACPW,MAAAA,IAAI,EAAEf,uBADC;AAEPgB,MAAAA,IAAI,EAAEF;AAFC,KAAD,CAAR;AAID,GALmC,EAKlC,EALkC,CAApC;AAMA,QAAMI,kBAAkB,GAAG1B,WAAW,CAAE,MAAI;AAC1CY,IAAAA,QAAQ,CAAC;AACPW,MAAAA,IAAI,EAAEjB,uBADC;AAEPqB,MAAAA,MAAM,EAAEb,aAAa,CAACc,MAFf,CAEuB;;AAFvB,KAAD,CAAR;AAID,GALqC,EAKpC,CAAEd,aAAa,CAACc,MAAhB,CALoC,CAAtC;AAMA,QAAMC,iBAAiB,GAAG7B,WAAW,CAAE,MAAI;AACzCY,IAAAA,QAAQ,CAAC;AACPW,MAAAA,IAAI,EAAElB,sBADC;AAEPsB,MAAAA,MAAM,EAAEd,YAAY,CAACe;AAFd,KAAD,CAAR;AAID,GALoC,EAKnC,CAACf,YAAY,CAACe,MAAd,CALmC,CAArC;AAMA,SACE,mBACE,MAAC,gBAAD,OADF,EAEE,MAAC,UAAD;AAAY,IAAA,MAAM,EAAC,iCAAnB;AACA,IAAA,IAAI,EAAEd,aADN;AAEA,IAAA,OAAO,EAAEE,gBAFT;AAGA,IAAA,WAAW,EAAEU,kBAHb;AAIA,IAAA,WAAW,EAAEL;AAJb,IAFF,EAQE,MAAC,UAAD;AAAY,IAAA,MAAM,EAAC,iCAAnB;AACA,IAAA,IAAI,EAAEX,UADN;AAEA,IAAA,OAAO,EAAEK,eAFT;AAGA,IAAA,WAAW,EAAEc,iBAHb;AAIA,IAAA,WAAW,EAAEJ;AAJb,IARF,EAcE,mBACGN,SAAS,GAAGA,SAAS,CAACW,GAAV,CAAcC,CAAC,IACxB,MAAC,QAAD;AAAU,IAAA,GAAG,EAAE,CAACA,CAAC,CAACC,SAAlB;AAA6B,IAAA,IAAI,EAAED;AAAnC,IADS,CAAH,GAEN,IAHN,CAdF,CADF;AAsBD,CAnDD,C,CAqDA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AAEA,eAAepB,OAAf","sourcesContent":["import React, { useCallback } from \"react\";\r\nimport { useSelector , useDispatch} from 'react-redux';\r\nimport NicknameEditForm from '../containers/NicknameEditForm'; // 폼은 state가 빈번하게 변하므로 분리를 해주자\r\nimport PostCard from '../containers/PostCard';\r\nimport { LOAD_FOLLOWERS_REQUEST, LOAD_FOLLOWINGS_REQUEST, UNFOLLOW_USER_REQUEST, REMOVE_FOLLOWER_REQUEST } from \"../reducers/user\";\r\nimport { LOAD_USER_POSTS_REQUEST } from \"../reducers/post\";\r\nimport FollowList from '../components/FollowList';\r\n\r\nconst Profile = () => {\r\n  const dispatch = useDispatch();\r\n  const { followerList, followingList, hasMoreFollower, hasMoreFollowing } = useSelector(state => state.user);\r\n  const { mainPosts } = useSelector(state => state.post);\r\n  \r\n  const onUnfollow = useCallback(userId => () => {\r\n    dispatch({\r\n      type: UNFOLLOW_USER_REQUEST,\r\n      data: userId,\r\n    })\r\n  },[])\r\n  const onRemoveFollower = useCallback(userId => () => {\r\n    dispatch({\r\n      type: REMOVE_FOLLOWER_REQUEST,\r\n      data: userId,\r\n    })\r\n  },[])\r\n  const loadMoreFollowings = useCallback( ()=>{\r\n    dispatch({\r\n      type: LOAD_FOLLOWINGS_REQUEST,\r\n      offset: followingList.length, // (더보기 기능:3개씩) 기본값 limit = 3(처음 데이터 개수) > 3개씩 늘어남\r\n    })\r\n  },[ followingList.length])\r\n  const loadMoreFollowers = useCallback( ()=>{\r\n    dispatch({\r\n      type: LOAD_FOLLOWERS_REQUEST,\r\n      offset: followerList.length,\r\n    })\r\n  },[followerList.length])\r\n  return (\r\n    <div>\r\n      <NicknameEditForm />\r\n      <FollowList header=\"팔로잉 목록\" \r\n      data={followingList}\r\n      hasMore={hasMoreFollowing} \r\n      onClickMore={loadMoreFollowings}\r\n      onClickStop={onUnfollow}\r\n      ></FollowList>\r\n      <FollowList header=\"팔로워 목록\" \r\n      data={FollowList}\r\n      hasMore={hasMoreFollower} \r\n      onClickMore={loadMoreFollowers}\r\n      onClickStop={onRemoveFollower}\r\n      ></FollowList>\r\n      <div>\r\n        {mainPosts ? mainPosts.map(c => (\r\n            <PostCard key={+c.createdAt} post={c}></PostCard> \r\n        )): null} \r\n      </div> \r\n    </div>\r\n  );\r\n};\r\n\r\n// Profile.getInitialProps= async (context)=>{\r\n//   const state = context.store.getState();\r\n//   context.store.dispatch({\r\n//     type: LOAD_FOLLOWERS_REQUEST,\r\n//     data: state.user.me && state.user.me.id,\r\n//   });\r\n//   context.store.dispatch({\r\n//     type: LOAD_FOLLOWINGS_REQUEST,\r\n//     data: state.user.me && state.user.me.id,\r\n//   });\r\n//   context.store.dispatch({\r\n//     type: LOAD_USER_POSTS_REQUEST,\r\n//     data: state.user.me && state.user.me.id,\r\n//   });\r\n// }\r\n\r\nexport default Profile;\r\n"]},"metadata":{},"sourceType":"module"}