{"ast":null,"code":"var __jsx = React.createElement;\nimport React, { useState } from 'react';\nimport PropTypes from 'prop-types';\nimport { Icon } from 'antd';\nimport Slick from 'react-slick';\nimport styled from 'styled-components';\nconst Overlay = styled.div`\n  position: fixed;\n  z-index: 5000;\n  top: 0;\n  left: 0;\n  right: 0;\n  bottom: 0;\n`;\nconst Header = styled.header`\n  height: 44;\n  background: white;\n  position: relative;\n  padding: 0;\n  textAlign: center;  \n`;\nconst H1 = styled.h1`\n  margin: 0;\n  fontSize: 17px;\n  color: #333;\n  lineHeight: 44px;\n`;\nconst SlickWrapper = styled.div`\n  height: calc(100% - 44px);\n  background: #090909;\n`; // 스타일 이미 적용되있는 앤티디 컴포넌트도 스타일 적용 가능\n\nconst CloseBtn = styled(Icon)` \n position: absolute;\n right: 0;\n top: 0;\n padding: 15;\n line-height: 14px;\n cursor: pointer;\n`;\nconst Indicator = styled.div`\nwidth: 75;\nheight: 30;\nlineHeight: 30px ;\nborderRadius: 15;\nbackground: #313131;\ndisplay: inline-block;\ntextAlign: center;\ncolor: white;\nfontSize: 15px;\n`;\n\nconst ImagesZoom = ({\n  images,\n  onClose\n}) => {\n  const {\n    0: currentSlide,\n    1: setCurrentSlide\n  } = useState(0); // 몇번째 이미지를 보고있는지\n\n  return __jsx(Overlay, null, __jsx(Header, null, __jsx(H1, null, \"\\uC0C1\\uC138 \\uC774\\uBBF8\\uC9C0\"), __jsx(CloseBtn, null)), __jsx(SlickWrapper, null, __jsx(\"div\", null, __jsx(Slick, {\n    initialSlide: 0 // 처음 보여줄 이미지 \n    ,\n    afterChange: slide => setCurrentSlide(slide) // 슬라이드 할때마다 index 변경\n    ,\n    infinite: false // 무한 슬라이드 1~4 > 4~1\n    ,\n    arrows: true,\n    slidesToShow: 1 // 한번에 1장만 보여줌\n    ,\n    slidesToScroll: 1 // 한번에 1장만 슬라이드\n\n  }, images.map(v => {\n    return __jsx(\"div\", {\n      style: {\n        padding: 32,\n        textAlign: 'center'\n      }\n    }, __jsx(\"img\", {\n      src: `http://localhost:3065/${v.src}`,\n      style: {\n        margin: '0 auto',\n        maxHeight: 750\n      }\n    }));\n  })), __jsx(\"div\", {\n    style: {\n      textAlign: 'center'\n    }\n  }, __jsx(Indicator, null, currentSlide + 1, \" / \", images.length)))));\n};\n\nImagesZoom.propTypes = {\n  images: PropTypes.arrayOf(PropTypes.shape({\n    src: PropTypes.string\n  })).isRequired,\n  onClose: PropTypes.func.isRequired\n};\nexport default ImagesZoom;","map":{"version":3,"sources":["C:/Users/Song/Desktop/projectpf/Ver2/frontend/components/ImagesZoom.js"],"names":["React","useState","PropTypes","Icon","Slick","styled","Overlay","div","Header","header","H1","h1","SlickWrapper","CloseBtn","Indicator","ImagesZoom","images","onClose","currentSlide","setCurrentSlide","slide","map","v","padding","textAlign","src","margin","maxHeight","length","propTypes","arrayOf","shape","string","isRequired","func"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,QAAhB,QAA+B,OAA/B;AACA,OAAOC,SAAP,MAAsB,YAAtB;AACA,SAASC,IAAT,QAAqB,MAArB;AACA,OAAOC,KAAP,MAAkB,aAAlB;AACA,OAAOC,MAAP,MAAmB,mBAAnB;AAEA,MAAMC,OAAO,GAAGD,MAAM,CAACE,GAAI;;;;;;;CAA3B;AAQA,MAAMC,MAAM,GAAGH,MAAM,CAACI,MAAO;;;;;;CAA7B;AAQA,MAAMC,EAAE,GAAGL,MAAM,CAACM,EAAG;;;;;CAArB;AAOA,MAAMC,YAAY,GAAGP,MAAM,CAACE,GAAI;;;CAAhC,C,CAIA;;AACA,MAAMM,QAAQ,GAAGR,MAAM,CAACF,IAAD,CAAO;;;;;;;CAA9B;AAQA,MAAMW,SAAS,GAAGT,MAAM,CAACE,GAAI;;;;;;;;;;CAA7B;;AAWA,MAAMQ,UAAU,GAAG,CAAC;AAAEC,EAAAA,MAAF;AAAUC,EAAAA;AAAV,CAAD,KAAyB;AAC1C,QAAM;AAAA,OAACC,YAAD;AAAA,OAAeC;AAAf,MAAkClB,QAAQ,CAAC,CAAD,CAAhD,CAD0C,CACW;;AAErD,SACE,MAAC,OAAD,QACE,MAAC,MAAD,QACE,MAAC,EAAD,0CADF,EAEE,MAAC,QAAD,OAFF,CADF,EAKE,MAAC,YAAD,QACE,mBACE,MAAC,KAAD;AACE,IAAA,YAAY,EAAE,CADhB,CACmB;AADnB;AAEE,IAAA,WAAW,EAAEmB,KAAK,IAAID,eAAe,CAACC,KAAD,CAFvC,CAEgD;AAFhD;AAGE,IAAA,QAAQ,EAAE,KAHZ,CAGmB;AAHnB;AAIE,IAAA,MAAM,MAJR;AAKE,IAAA,YAAY,EAAE,CALhB,CAKmB;AALnB;AAME,IAAA,cAAc,EAAE,CANlB,CAMqB;;AANrB,KAQGJ,MAAM,CAACK,GAAP,CAAYC,CAAD,IAAO;AACjB,WACE;AAAK,MAAA,KAAK,EAAE;AAAEC,QAAAA,OAAO,EAAE,EAAX;AAAeC,QAAAA,SAAS,EAAE;AAA1B;AAAZ,OACE;AAAK,MAAA,GAAG,EAAG,yBAAwBF,CAAC,CAACG,GAAI,EAAzC;AAA4C,MAAA,KAAK,EAAE;AAAEC,QAAAA,MAAM,EAAE,QAAV;AAAoBC,QAAAA,SAAS,EAAE;AAA/B;AAAnD,MADF,CADF;AAKD,GANA,CARH,CADF,EAiBE;AAAK,IAAA,KAAK,EAAE;AAAEH,MAAAA,SAAS,EAAE;AAAb;AAAZ,KACE,MAAC,SAAD,QACGN,YAAY,GAAG,CADlB,SACwBF,MAAM,CAACY,MAD/B,CADF,CAjBF,CADF,CALF,CADF;AAiCD,CApCD;;AAsCAb,UAAU,CAACc,SAAX,GAAuB;AACrBb,EAAAA,MAAM,EAAEd,SAAS,CAAC4B,OAAV,CAAkB5B,SAAS,CAAC6B,KAAV,CAAgB;AACxCN,IAAAA,GAAG,EAAEvB,SAAS,CAAC8B;AADyB,GAAhB,CAAlB,EAEJC,UAHiB;AAIrBhB,EAAAA,OAAO,EAAEf,SAAS,CAACgC,IAAV,CAAeD;AAJH,CAAvB;AAOA,eAAelB,UAAf","sourcesContent":["import React, { useState} from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport { Icon } from 'antd';\r\nimport Slick from 'react-slick';\r\nimport styled from 'styled-components';\r\n\r\nconst Overlay = styled.div`\r\n  position: fixed;\r\n  z-index: 5000;\r\n  top: 0;\r\n  left: 0;\r\n  right: 0;\r\n  bottom: 0;\r\n`;\r\nconst Header = styled.header`\r\n  height: 44;\r\n  background: white;\r\n  position: relative;\r\n  padding: 0;\r\n  textAlign: center;  \r\n`;\r\n\r\nconst H1 = styled.h1`\r\n  margin: 0;\r\n  fontSize: 17px;\r\n  color: #333;\r\n  lineHeight: 44px;\r\n`;\r\n\r\nconst SlickWrapper = styled.div`\r\n  height: calc(100% - 44px);\r\n  background: #090909;\r\n`;\r\n// 스타일 이미 적용되있는 앤티디 컴포넌트도 스타일 적용 가능\r\nconst CloseBtn = styled(Icon)` \r\n position: absolute;\r\n right: 0;\r\n top: 0;\r\n padding: 15;\r\n line-height: 14px;\r\n cursor: pointer;\r\n`;\r\nconst Indicator = styled.div`\r\nwidth: 75;\r\nheight: 30;\r\nlineHeight: 30px ;\r\nborderRadius: 15;\r\nbackground: #313131;\r\ndisplay: inline-block;\r\ntextAlign: center;\r\ncolor: white;\r\nfontSize: 15px;\r\n`;\r\nconst ImagesZoom = ({ images, onClose }) => {\r\n  const [currentSlide, setCurrentSlide] = useState(0); // 몇번째 이미지를 보고있는지\r\n\r\n  return (\r\n    <Overlay>\r\n      <Header>\r\n        <H1>상세 이미지</H1>\r\n        <CloseBtn/>\r\n      </Header>\r\n      <SlickWrapper>\r\n        <div>\r\n          <Slick\r\n            initialSlide={0} // 처음 보여줄 이미지 \r\n            afterChange={slide => setCurrentSlide(slide)} // 슬라이드 할때마다 index 변경\r\n            infinite={false} // 무한 슬라이드 1~4 > 4~1\r\n            arrows\r\n            slidesToShow={1} // 한번에 1장만 보여줌\r\n            slidesToScroll={1} // 한번에 1장만 슬라이드\r\n          >\r\n            {images.map((v) => {\r\n              return (\r\n                <div style={{ padding: 32, textAlign: 'center' }}>\r\n                  <img src={`http://localhost:3065/${v.src}`} style={{ margin: '0 auto', maxHeight: 750 }} />\r\n                </div>\r\n              );\r\n            })}\r\n          </Slick>\r\n          <div style={{ textAlign: 'center' }}>\r\n            <Indicator>\r\n              {currentSlide + 1} / {images.length}\r\n            </Indicator>\r\n          </div>\r\n        </div>\r\n      </SlickWrapper>\r\n    </Overlay>\r\n  );\r\n};\r\n\r\nImagesZoom.propTypes = {\r\n  images: PropTypes.arrayOf(PropTypes.shape({\r\n    src: PropTypes.string,\r\n  })).isRequired,\r\n  onClose: PropTypes.func.isRequired,\r\n};\r\n\r\nexport default ImagesZoom;"]},"metadata":{},"sourceType":"module"}