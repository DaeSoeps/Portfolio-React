{"ast":null,"code":"import _regeneratorRuntime from \"@babel/runtime-corejs2/regenerator\";\n\nvar _marked =\n/*#__PURE__*/\n_regeneratorRuntime.mark(logIn),\n    _marked2 =\n/*#__PURE__*/\n_regeneratorRuntime.mark(watchLogIn),\n    _marked3 =\n/*#__PURE__*/\n_regeneratorRuntime.mark(signUp),\n    _marked4 =\n/*#__PURE__*/\n_regeneratorRuntime.mark(watchSignUp),\n    _marked5 =\n/*#__PURE__*/\n_regeneratorRuntime.mark(logOut),\n    _marked6 =\n/*#__PURE__*/\n_regeneratorRuntime.mark(watchLogOut),\n    _marked7 =\n/*#__PURE__*/\n_regeneratorRuntime.mark(loadUser),\n    _marked8 =\n/*#__PURE__*/\n_regeneratorRuntime.mark(watchLoadUser),\n    _marked9 =\n/*#__PURE__*/\n_regeneratorRuntime.mark(follow),\n    _marked10 =\n/*#__PURE__*/\n_regeneratorRuntime.mark(watchFollow),\n    _marked11 =\n/*#__PURE__*/\n_regeneratorRuntime.mark(unfollow),\n    _marked12 =\n/*#__PURE__*/\n_regeneratorRuntime.mark(watchUnfollow),\n    _marked13 =\n/*#__PURE__*/\n_regeneratorRuntime.mark(loadFollowers),\n    _marked14 =\n/*#__PURE__*/\n_regeneratorRuntime.mark(watchLoadFollowers),\n    _marked15 =\n/*#__PURE__*/\n_regeneratorRuntime.mark(loadFollowings),\n    _marked16 =\n/*#__PURE__*/\n_regeneratorRuntime.mark(watchLoadFollowings),\n    _marked17 =\n/*#__PURE__*/\n_regeneratorRuntime.mark(removeFollower),\n    _marked18 =\n/*#__PURE__*/\n_regeneratorRuntime.mark(watchRemoveFollower),\n    _marked19 =\n/*#__PURE__*/\n_regeneratorRuntime.mark(userSaga);\n\nimport { all, fork, takeLatest, takeEvery, call, put, take, delay } from 'redux-saga/effects';\nimport axios from 'axios';\nimport { LOG_IN_REQUEST, LOG_IN_SUCCESS, LOG_IN_FAILURE, SIGN_UP_REQUEST, SIGN_UP_SUCCESS, SIGN_UP_FAILURE, LOG_OUT_REQUEST, LOG_OUT_SUCCESS, LOG_OUT_FAILURE, LOAD_USER_REQUEST, LOAD_USER_SUCCESS, LOAD_USER_FAILURE, FOLLOW_USER_SUCCESS, FOLLOW_USER_FAILURE, FOLLOW_USER_REQUEST, UNFOLLOW_USER_SUCCESS, UNFOLLOW_USER_FAILURE, UNFOLLOW_USER_REQUEST, LOAD_FOLLOWERS_SUCCESS, LOAD_FOLLOWERS_REQUEST, LOAD_FOLLOWERS_FAILURE, LOAD_FOLLOWINGS_SUCCESS, LOAD_FOLLOWINGS_REQUEST, LOAD_FOLLOWINGS_FAILURE, REMOVE_FOLLOWER_SUCCESS, REMOVE_FOLLOWER_FAILURE, REMOVE_FOLLOWER_REQUEST } from '../reducers/user'; // 로그인 부분 -------------------------------------\n\nfunction logInAPI(loginData) {\n  // (3) 서버에 요청을 보냄\n  // loginData: userid, password\n  return axios.post('/user/login', loginData, {\n    withCredentials: true // (프론트)쿠키를 주고받을 수 있음, 서버쪽은 cors 로 설정\n\n  });\n}\n\nfunction logIn(action) {\n  var result;\n  return _regeneratorRuntime.wrap(function logIn$(_context) {\n    while (1) {\n      switch (_context.prev = _context.next) {\n        case 0:\n          _context.prev = 0;\n          _context.next = 3;\n          return call(logInAPI, action.data);\n\n        case 3:\n          result = _context.sent;\n          _context.next = 6;\n          return put({\n            type: LOG_IN_SUCCESS,\n            data: result.data\n          });\n\n        case 6:\n          _context.next = 13;\n          break;\n\n        case 8:\n          _context.prev = 8;\n          _context.t0 = _context[\"catch\"](0);\n          console.error(_context.t0);\n          _context.next = 13;\n          return put({\n            type: LOG_IN_FAILURE\n          });\n\n        case 13:\n        case \"end\":\n          return _context.stop();\n      }\n    }\n  }, _marked, null, [[0, 8]]);\n}\n\nfunction watchLogIn() {\n  return _regeneratorRuntime.wrap(function watchLogIn$(_context2) {\n    while (1) {\n      switch (_context2.prev = _context2.next) {\n        case 0:\n          _context2.next = 2;\n          return takeEvery(LOG_IN_REQUEST, logIn);\n\n        case 2:\n        case \"end\":\n          return _context2.stop();\n      }\n    }\n  }, _marked2);\n} // 로그인 부분 -------------------------------------\n// 회원 가입 부분 -------------------------------------\n\n\nfunction signUpAPI(signUpData) {\n  return axios.post('/user/', signUpData);\n}\n\nfunction signUp(action) {\n  return _regeneratorRuntime.wrap(function signUp$(_context3) {\n    while (1) {\n      switch (_context3.prev = _context3.next) {\n        case 0:\n          _context3.prev = 0;\n          _context3.next = 3;\n          return call(signUpAPI, action.data);\n\n        case 3:\n          _context3.next = 5;\n          return put({\n            type: SIGN_UP_SUCCESS\n          });\n\n        case 5:\n          _context3.next = 12;\n          break;\n\n        case 7:\n          _context3.prev = 7;\n          _context3.t0 = _context3[\"catch\"](0);\n          console.error(_context3.t0);\n          _context3.next = 12;\n          return put({\n            type: SIGN_UP_FAILURE,\n            error: _context3.t0\n          });\n\n        case 12:\n        case \"end\":\n          return _context3.stop();\n      }\n    }\n  }, _marked3, null, [[0, 7]]);\n}\n\nfunction watchSignUp() {\n  return _regeneratorRuntime.wrap(function watchSignUp$(_context4) {\n    while (1) {\n      switch (_context4.prev = _context4.next) {\n        case 0:\n          _context4.next = 2;\n          return takeEvery(SIGN_UP_REQUEST, signUp);\n\n        case 2:\n        case \"end\":\n          return _context4.stop();\n      }\n    }\n  }, _marked4);\n} // 회원 가입 부분 -------------------------------------\n// 로그 아웃 부분 -------------------------------------\n\n\nfunction logOutAPI() {\n  // 로그아웃은 쿠키가 있으므로 데이터 받을게 없음, 대신 쿠키를 도메인이 다른 서버로 보내주려면 크리덴셜스 추가\n  return axios.post('/user/logout', {}, {\n    withCredentials: true\n  });\n}\n\nfunction logOut() {\n  return _regeneratorRuntime.wrap(function logOut$(_context5) {\n    while (1) {\n      switch (_context5.prev = _context5.next) {\n        case 0:\n          _context5.prev = 0;\n          _context5.next = 3;\n          return call(logOutAPI);\n\n        case 3:\n          _context5.next = 5;\n          return put({\n            type: LOG_OUT_SUCCESS\n          });\n\n        case 5:\n          _context5.next = 12;\n          break;\n\n        case 7:\n          _context5.prev = 7;\n          _context5.t0 = _context5[\"catch\"](0);\n          console.error(_context5.t0);\n          _context5.next = 12;\n          return put({\n            type: LOG_OUT_FAILURE,\n            error: _context5.t0\n          });\n\n        case 12:\n        case \"end\":\n          return _context5.stop();\n      }\n    }\n  }, _marked5, null, [[0, 7]]);\n}\n\nfunction watchLogOut() {\n  return _regeneratorRuntime.wrap(function watchLogOut$(_context6) {\n    while (1) {\n      switch (_context6.prev = _context6.next) {\n        case 0:\n          _context6.next = 2;\n          return takeEvery(LOG_OUT_REQUEST, logOut);\n\n        case 2:\n        case \"end\":\n          return _context6.stop();\n      }\n    }\n  }, _marked6);\n} // 로그 아웃 부분 -------------------------------------\n// 사용자정보 불러오기 부분 -------------------------------------\n\n\nfunction loadUserAPI() {\n  // 세션쿠키 서버로 보냄 > 유효한 쿠키면 데이터 전달함\n  return axios.get('/user/', {\n    withCredentials: true\n  });\n}\n\nfunction loadUser() {\n  var result;\n  return _regeneratorRuntime.wrap(function loadUser$(_context7) {\n    while (1) {\n      switch (_context7.prev = _context7.next) {\n        case 0:\n          _context7.prev = 0;\n          _context7.next = 3;\n          return call(loadUserAPI);\n\n        case 3:\n          result = _context7.sent;\n          _context7.next = 6;\n          return put({\n            type: LOAD_USER_SUCCESS,\n            data: result.data\n          });\n\n        case 6:\n          _context7.next = 13;\n          break;\n\n        case 8:\n          _context7.prev = 8;\n          _context7.t0 = _context7[\"catch\"](0);\n          console.error(_context7.t0);\n          _context7.next = 13;\n          return put({\n            type: LOAD_USER_FAILURE,\n            error: _context7.t0\n          });\n\n        case 13:\n        case \"end\":\n          return _context7.stop();\n      }\n    }\n  }, _marked7, null, [[0, 8]]);\n}\n\nfunction watchLoadUser() {\n  return _regeneratorRuntime.wrap(function watchLoadUser$(_context8) {\n    while (1) {\n      switch (_context8.prev = _context8.next) {\n        case 0:\n          _context8.next = 2;\n          return takeEvery(LOAD_USER_REQUEST, loadUser);\n\n        case 2:\n        case \"end\":\n          return _context8.stop();\n      }\n    }\n  }, _marked8);\n} // 사용자정보 불러오기 부분 끝-------------------------------------\n\n\nfunction followAPI(userId) {\n  return axios.post(\"/user/\".concat(userId, \"/follow\"), {}, {\n    withCredentials: true\n  });\n}\n\nfunction follow(action) {\n  var result;\n  return _regeneratorRuntime.wrap(function follow$(_context9) {\n    while (1) {\n      switch (_context9.prev = _context9.next) {\n        case 0:\n          _context9.prev = 0;\n          _context9.next = 3;\n          return call(followAPI, action.data);\n\n        case 3:\n          result = _context9.sent;\n          _context9.next = 6;\n          return put({\n            type: FOLLOW_USER_SUCCESS,\n            data: result.data\n          });\n\n        case 6:\n          _context9.next = 13;\n          break;\n\n        case 8:\n          _context9.prev = 8;\n          _context9.t0 = _context9[\"catch\"](0);\n          console.error(_context9.t0);\n          _context9.next = 13;\n          return put({\n            type: FOLLOW_USER_FAILURE,\n            error: _context9.t0\n          });\n\n        case 13:\n        case \"end\":\n          return _context9.stop();\n      }\n    }\n  }, _marked9, null, [[0, 8]]);\n}\n\nfunction watchFollow() {\n  return _regeneratorRuntime.wrap(function watchFollow$(_context10) {\n    while (1) {\n      switch (_context10.prev = _context10.next) {\n        case 0:\n          _context10.next = 2;\n          return takeEvery(FOLLOW_USER_REQUEST, follow);\n\n        case 2:\n        case \"end\":\n          return _context10.stop();\n      }\n    }\n  }, _marked10);\n} //\n\n\nfunction unfollowAPI(userId) {\n  return axios.delete(\"/user/\".concat(userId, \"/follow\"), {\n    withCredentials: true\n  });\n}\n\nfunction unfollow(action) {\n  var result;\n  return _regeneratorRuntime.wrap(function unfollow$(_context11) {\n    while (1) {\n      switch (_context11.prev = _context11.next) {\n        case 0:\n          _context11.prev = 0;\n          _context11.next = 3;\n          return call(unfollowAPI, action.data);\n\n        case 3:\n          result = _context11.sent;\n          _context11.next = 6;\n          return put({\n            type: UNFOLLOW_USER_SUCCESS,\n            data: result.data\n          });\n\n        case 6:\n          _context11.next = 13;\n          break;\n\n        case 8:\n          _context11.prev = 8;\n          _context11.t0 = _context11[\"catch\"](0);\n          console.error(_context11.t0);\n          _context11.next = 13;\n          return put({\n            type: UNFOLLOW_USER_FAILURE,\n            error: _context11.t0\n          });\n\n        case 13:\n        case \"end\":\n          return _context11.stop();\n      }\n    }\n  }, _marked11, null, [[0, 8]]);\n}\n\nfunction watchUnfollow() {\n  return _regeneratorRuntime.wrap(function watchUnfollow$(_context12) {\n    while (1) {\n      switch (_context12.prev = _context12.next) {\n        case 0:\n          _context12.next = 2;\n          return takeEvery(UNFOLLOW_USER_REQUEST, unfollow);\n\n        case 2:\n        case \"end\":\n          return _context12.stop();\n      }\n    }\n  }, _marked12);\n} //\n\n\nfunction loadFollowersAPI(userId) {\n  return axios.get(\"/user/\".concat(userId, \"/followers\"), {\n    withCredentials: true\n  });\n}\n\nfunction loadFollowers(action) {\n  var result;\n  return _regeneratorRuntime.wrap(function loadFollowers$(_context13) {\n    while (1) {\n      switch (_context13.prev = _context13.next) {\n        case 0:\n          _context13.prev = 0;\n          _context13.next = 3;\n          return call(loadFollowersAPI, action.data);\n\n        case 3:\n          result = _context13.sent;\n          _context13.next = 6;\n          return put({\n            type: LOAD_FOLLOWERS_SUCCESS,\n            data: result.data\n          });\n\n        case 6:\n          _context13.next = 13;\n          break;\n\n        case 8:\n          _context13.prev = 8;\n          _context13.t0 = _context13[\"catch\"](0);\n          console.error(_context13.t0);\n          _context13.next = 13;\n          return put({\n            type: LOAD_FOLLOWERS_FAILURE,\n            error: _context13.t0\n          });\n\n        case 13:\n        case \"end\":\n          return _context13.stop();\n      }\n    }\n  }, _marked13, null, [[0, 8]]);\n}\n\nfunction watchLoadFollowers() {\n  return _regeneratorRuntime.wrap(function watchLoadFollowers$(_context14) {\n    while (1) {\n      switch (_context14.prev = _context14.next) {\n        case 0:\n          _context14.next = 2;\n          return takeEvery(LOAD_FOLLOWERS_REQUEST, loadFollowers);\n\n        case 2:\n        case \"end\":\n          return _context14.stop();\n      }\n    }\n  }, _marked14);\n} //\n\n\nfunction loadFollowingsAPI(userId) {\n  return axios.get(\"/user/\".concat(userId, \"/followings\"), {\n    withCredentials: true\n  });\n}\n\nfunction loadFollowings(action) {\n  var result;\n  return _regeneratorRuntime.wrap(function loadFollowings$(_context15) {\n    while (1) {\n      switch (_context15.prev = _context15.next) {\n        case 0:\n          _context15.prev = 0;\n          _context15.next = 3;\n          return call(loadFollowingsAPI, action.data);\n\n        case 3:\n          result = _context15.sent;\n          _context15.next = 6;\n          return put({\n            type: LOAD_FOLLOWINGS_SUCCESS,\n            data: result.data\n          });\n\n        case 6:\n          _context15.next = 13;\n          break;\n\n        case 8:\n          _context15.prev = 8;\n          _context15.t0 = _context15[\"catch\"](0);\n          console.error(_context15.t0);\n          _context15.next = 13;\n          return put({\n            type: LOAD_FOLLOWINGS_FAILURE,\n            error: _context15.t0\n          });\n\n        case 13:\n        case \"end\":\n          return _context15.stop();\n      }\n    }\n  }, _marked15, null, [[0, 8]]);\n}\n\nfunction watchLoadFollowings() {\n  return _regeneratorRuntime.wrap(function watchLoadFollowings$(_context16) {\n    while (1) {\n      switch (_context16.prev = _context16.next) {\n        case 0:\n          _context16.next = 2;\n          return takeEvery(LOAD_FOLLOWINGS_REQUEST, loadFollowings);\n\n        case 2:\n        case \"end\":\n          return _context16.stop();\n      }\n    }\n  }, _marked16);\n} //\n\n\nfunction removeFollowerAPI(userId) {\n  return axios.delete(\"/user/\".concat(userId, \"/follower\"), {\n    withCredentials: true\n  });\n}\n\nfunction removeFollower(action) {\n  var result;\n  return _regeneratorRuntime.wrap(function removeFollower$(_context17) {\n    while (1) {\n      switch (_context17.prev = _context17.next) {\n        case 0:\n          _context17.prev = 0;\n          _context17.next = 3;\n          return call(removeFollowerAPI, action.data);\n\n        case 3:\n          result = _context17.sent;\n          _context17.next = 6;\n          return put({\n            type: REMOVE_FOLLOWER_SUCCESS,\n            data: result.data\n          });\n\n        case 6:\n          _context17.next = 13;\n          break;\n\n        case 8:\n          _context17.prev = 8;\n          _context17.t0 = _context17[\"catch\"](0);\n          console.error(_context17.t0);\n          _context17.next = 13;\n          return put({\n            type: REMOVE_FOLLOWER_FAILURE,\n            error: _context17.t0\n          });\n\n        case 13:\n        case \"end\":\n          return _context17.stop();\n      }\n    }\n  }, _marked17, null, [[0, 8]]);\n}\n\nfunction watchRemoveFollower() {\n  return _regeneratorRuntime.wrap(function watchRemoveFollower$(_context18) {\n    while (1) {\n      switch (_context18.prev = _context18.next) {\n        case 0:\n          _context18.next = 2;\n          return takeEvery(REMOVE_FOLLOWER_REQUEST, removeFollower);\n\n        case 2:\n        case \"end\":\n          return _context18.stop();\n      }\n    }\n  }, _marked18);\n} //\n\n\nexport default function userSaga() {\n  return _regeneratorRuntime.wrap(function userSaga$(_context19) {\n    while (1) {\n      switch (_context19.prev = _context19.next) {\n        case 0:\n          _context19.next = 2;\n          return all([fork(watchLogIn), fork(watchLogOut), fork(watchLoadUser), fork(watchSignUp), fork(watchFollow), fork(watchUnfollow), fork(watchLoadFollowers), fork(watchLoadFollowings), fork(watchRemoveFollower)]);\n\n        case 2:\n        case \"end\":\n          return _context19.stop();\n      }\n    }\n  }, _marked19);\n}\n;","map":{"version":3,"sources":["C:/Users/Song/Desktop/projectpf/Ver2/frontend/sagas/user.js"],"names":["logIn","watchLogIn","signUp","watchSignUp","logOut","watchLogOut","loadUser","watchLoadUser","follow","watchFollow","unfollow","watchUnfollow","loadFollowers","watchLoadFollowers","loadFollowings","watchLoadFollowings","removeFollower","watchRemoveFollower","userSaga","all","fork","takeLatest","takeEvery","call","put","take","delay","axios","LOG_IN_REQUEST","LOG_IN_SUCCESS","LOG_IN_FAILURE","SIGN_UP_REQUEST","SIGN_UP_SUCCESS","SIGN_UP_FAILURE","LOG_OUT_REQUEST","LOG_OUT_SUCCESS","LOG_OUT_FAILURE","LOAD_USER_REQUEST","LOAD_USER_SUCCESS","LOAD_USER_FAILURE","FOLLOW_USER_SUCCESS","FOLLOW_USER_FAILURE","FOLLOW_USER_REQUEST","UNFOLLOW_USER_SUCCESS","UNFOLLOW_USER_FAILURE","UNFOLLOW_USER_REQUEST","LOAD_FOLLOWERS_SUCCESS","LOAD_FOLLOWERS_REQUEST","LOAD_FOLLOWERS_FAILURE","LOAD_FOLLOWINGS_SUCCESS","LOAD_FOLLOWINGS_REQUEST","LOAD_FOLLOWINGS_FAILURE","REMOVE_FOLLOWER_SUCCESS","REMOVE_FOLLOWER_FAILURE","REMOVE_FOLLOWER_REQUEST","logInAPI","loginData","post","withCredentials","action","data","result","type","console","error","signUpAPI","signUpData","logOutAPI","loadUserAPI","get","followAPI","userId","unfollowAPI","delete","loadFollowersAPI","loadFollowingsAPI","removeFollowerAPI"],"mappings":"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","sourcesContent":["import { all, fork, takeLatest, takeEvery, call, put, take, delay } from 'redux-saga/effects';\r\nimport axios from 'axios';\r\nimport { LOG_IN_REQUEST, LOG_IN_SUCCESS, LOG_IN_FAILURE,\r\n         SIGN_UP_REQUEST, SIGN_UP_SUCCESS, SIGN_UP_FAILURE, \r\n         LOG_OUT_REQUEST, LOG_OUT_SUCCESS, LOG_OUT_FAILURE,\r\n         LOAD_USER_REQUEST, LOAD_USER_SUCCESS, LOAD_USER_FAILURE,\r\n          FOLLOW_USER_SUCCESS, FOLLOW_USER_FAILURE, FOLLOW_USER_REQUEST,\r\n           UNFOLLOW_USER_SUCCESS, UNFOLLOW_USER_FAILURE, UNFOLLOW_USER_REQUEST,\r\n           LOAD_FOLLOWERS_SUCCESS, LOAD_FOLLOWERS_REQUEST, LOAD_FOLLOWERS_FAILURE,\r\n           LOAD_FOLLOWINGS_SUCCESS, LOAD_FOLLOWINGS_REQUEST, LOAD_FOLLOWINGS_FAILURE, REMOVE_FOLLOWER_SUCCESS, REMOVE_FOLLOWER_FAILURE, REMOVE_FOLLOWER_REQUEST } from '../reducers/user';\r\n\r\n// 로그인 부분 -------------------------------------\r\nfunction logInAPI(loginData){\r\n// (3) 서버에 요청을 보냄\r\n    // loginData: userid, password\r\n    return axios.post('/user/login', loginData , {\r\n        withCredentials: true, // (프론트)쿠키를 주고받을 수 있음, 서버쪽은 cors 로 설정\r\n    });\r\n}\r\nfunction* logIn(action){ \r\n    // 사가 패턴 3. 어떤 동작할지 결정\r\n    try{\r\n        const result =  yield call(logInAPI, action.data); // (2)loginAPI 로 요청을 보냄\r\n        yield put({ \r\n            type: LOG_IN_SUCCESS,\r\n            data: result.data,\r\n        }); // (4)put은 dispatch와 동일, call이 성공하면 LOG_IN_SUCCESS 실행\r\n    }catch(e){\r\n        console.error(e);\r\n        yield put({\r\n            type:LOG_IN_FAILURE\r\n        })\r\n    }\r\n}\r\nfunction* watchLogIn(){\r\n    // 사가 패턴 2. takeEvery, Latest 여부 결정\r\n    //takeEvery : while 대체제, watch 에서 take 부분과 실행부분을 나눌때 사용\r\n    //takeLatest : 같은 액션 여러번 호출되도 마지막 액션만 실행(이전 요청이 끝나지 않았으면 이전 요청 취소)\r\n    // yield takeLatest(LOG_IN, login); // (1)LOG_IN 액션을 기다림\r\n    yield takeEvery(LOG_IN_REQUEST, logIn);\r\n}\r\n// 로그인 부분 -------------------------------------\r\n// 회원 가입 부분 -------------------------------------\r\nfunction signUpAPI(signUpData){\r\n    return axios.post('/user/', signUpData);\r\n}\r\nfunction* signUp(action){ \r\n    try{\r\n        yield call(signUpAPI , action.data); // 두번째는 첫번째의(함수) 인자값\r\n        yield put({ \r\n            type:SIGN_UP_SUCCESS\r\n        });\r\n    }catch(e){\r\n        console.error(e);\r\n        yield put({\r\n            type:SIGN_UP_FAILURE,\r\n            error: e\r\n        })\r\n    }\r\n}\r\nfunction* watchSignUp(){\r\n    yield takeEvery(SIGN_UP_REQUEST, signUp)\r\n}\r\n// 회원 가입 부분 -------------------------------------\r\n// 로그 아웃 부분 -------------------------------------\r\nfunction logOutAPI(){\r\n    // 로그아웃은 쿠키가 있으므로 데이터 받을게 없음, 대신 쿠키를 도메인이 다른 서버로 보내주려면 크리덴셜스 추가\r\n    return axios.post('/user/logout', {}, {\r\n        withCredentials: true,\r\n    });\r\n}\r\nfunction* logOut(){ \r\n    try{\r\n        yield call(logOutAPI); // 두번째는 첫번째의(함수) 인자값\r\n        yield put({ \r\n            type:LOG_OUT_SUCCESS\r\n        });\r\n    }catch(e){\r\n        console.error(e);\r\n        yield put({\r\n            type:LOG_OUT_FAILURE,\r\n            error: e\r\n        })\r\n    }\r\n}\r\nfunction* watchLogOut(){\r\n    yield takeEvery(LOG_OUT_REQUEST, logOut)\r\n}\r\n// 로그 아웃 부분 -------------------------------------\r\n// 사용자정보 불러오기 부분 -------------------------------------\r\nfunction loadUserAPI(){\r\n    // 세션쿠키 서버로 보냄 > 유효한 쿠키면 데이터 전달함\r\n    return axios.get('/user/', {\r\n        withCredentials : true,\r\n    });\r\n}\r\nfunction* loadUser(){ \r\n    try{\r\n        const result = yield call(loadUserAPI); // 두번째는 첫번째의(함수) 인자값\r\n        yield put({ \r\n            type:LOAD_USER_SUCCESS,\r\n            data: result.data,\r\n        });\r\n    }catch(e){\r\n        console.error(e);\r\n        yield put({\r\n            type:LOAD_USER_FAILURE,\r\n            error: e\r\n        })\r\n    }\r\n}\r\nfunction* watchLoadUser(){\r\n    yield takeEvery(LOAD_USER_REQUEST, loadUser)\r\n}\r\n// 사용자정보 불러오기 부분 끝-------------------------------------\r\nfunction followAPI(userId){\r\n    return axios.post(`/user/${userId}/follow`, {} , {\r\n        withCredentials : true,\r\n    });\r\n}\r\nfunction* follow(action){ \r\n    try{\r\n        const result = yield call(followAPI, action.data); \r\n        yield put({ \r\n            type:FOLLOW_USER_SUCCESS,\r\n            data: result.data,\r\n        });\r\n    }catch(e){\r\n        console.error(e);\r\n        yield put({\r\n            type:FOLLOW_USER_FAILURE,\r\n            error: e\r\n        })\r\n    }\r\n}\r\nfunction* watchFollow(){\r\n    yield takeEvery(FOLLOW_USER_REQUEST, follow)\r\n}\r\n//\r\nfunction unfollowAPI(userId){\r\n    return axios.delete(`/user/${userId}/follow`, {\r\n        withCredentials : true,\r\n    });\r\n}\r\nfunction* unfollow(action){ \r\n    try{\r\n        const result = yield call(unfollowAPI, action.data); \r\n        yield put({ \r\n            type:UNFOLLOW_USER_SUCCESS,\r\n            data: result.data,\r\n        });\r\n    }catch(e){\r\n        console.error(e);\r\n        yield put({\r\n            type:UNFOLLOW_USER_FAILURE,\r\n            error: e\r\n        })\r\n    }\r\n}\r\nfunction* watchUnfollow(){\r\n    yield takeEvery(UNFOLLOW_USER_REQUEST, unfollow)\r\n}\r\n//\r\nfunction loadFollowersAPI(userId){\r\n    return axios.get(`/user/${userId}/followers`, {\r\n        withCredentials : true,\r\n    });\r\n}\r\nfunction*loadFollowers(action){ \r\n    try{\r\n        const result = yield call(loadFollowersAPI, action.data); \r\n        yield put({ \r\n            type:LOAD_FOLLOWERS_SUCCESS,\r\n            data: result.data,\r\n        });\r\n    }catch(e){\r\n        console.error(e);\r\n        yield put({\r\n            type:LOAD_FOLLOWERS_FAILURE,\r\n            error: e\r\n        })\r\n    }\r\n}\r\nfunction* watchLoadFollowers(){\r\n    yield takeEvery(LOAD_FOLLOWERS_REQUEST, loadFollowers)\r\n}\r\n//\r\nfunction loadFollowingsAPI(userId){\r\n    return axios.get(`/user/${userId}/followings`, {\r\n        withCredentials : true,\r\n    });\r\n}\r\nfunction*loadFollowings(action){ \r\n    try{\r\n        const result = yield call(loadFollowingsAPI, action.data); \r\n        yield put({ \r\n            type:LOAD_FOLLOWINGS_SUCCESS,\r\n            data: result.data,\r\n        });\r\n    }catch(e){\r\n        console.error(e);\r\n        yield put({\r\n            type:LOAD_FOLLOWINGS_FAILURE,\r\n            error: e\r\n        })\r\n    }\r\n}\r\nfunction* watchLoadFollowings(){\r\n    yield takeEvery(LOAD_FOLLOWINGS_REQUEST, loadFollowings)\r\n}\r\n//\r\nfunction removeFollowerAPI(userId){\r\n    return axios.delete(`/user/${userId}/follower`, {\r\n        withCredentials : true,\r\n    });\r\n}\r\nfunction*removeFollower(action){ \r\n    try{\r\n        const result = yield call(removeFollowerAPI, action.data); \r\n        yield put({ \r\n            type:REMOVE_FOLLOWER_SUCCESS,\r\n            data: result.data,\r\n        });\r\n    }catch(e){\r\n        console.error(e);\r\n        yield put({\r\n            type:REMOVE_FOLLOWER_FAILURE,\r\n            error: e\r\n        })\r\n    }\r\n}\r\nfunction* watchRemoveFollower(){\r\n    yield takeEvery(REMOVE_FOLLOWER_REQUEST, removeFollower)\r\n}\r\n//\r\n\r\nexport default function* userSaga() {\r\n    // 사가 패턴 1. 함수 등록\r\n    // fork, call : 함수 호출, fork는 비동기 호출\r\n    yield all([\r\n        fork(watchLogIn),\r\n        fork(watchLogOut),\r\n        fork(watchLoadUser),\r\n        fork(watchSignUp),\r\n        fork(watchFollow),\r\n        fork(watchUnfollow),\r\n        fork(watchLoadFollowers),\r\n        fork(watchLoadFollowings),\r\n        fork(watchRemoveFollower),\r\n    ])\r\n};\r\n"]},"metadata":{},"sourceType":"module"}