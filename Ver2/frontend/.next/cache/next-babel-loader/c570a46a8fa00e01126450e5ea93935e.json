{"ast":null,"code":"var __jsx = React.createElement;\nimport React, { useEffect, useCallback } from \"react\";\nimport { Form, Button, Input, Card, Icon, List } from \"antd\";\nimport { useDispatch, useSelector } from 'react-redux';\nimport NicknameEditForm from '../components/NicknameEditForm';\nimport { LOAD_FOLLOWERS_REQUEST, LOAD_FOLLOWINGS_REQUEST, UNFOLLOW_USER_REQUEST, REMOVE_FOLLOWER_REQUEST } from \"../reducers/user\";\nimport { LOAD_USER_POSTS_REQUEST } from \"../reducers/post\";\n\nconst Profile = () => {\n  const dispatch = useDispatch();\n  const {\n    me,\n    followerList,\n    followingList\n  } = useSelector(state => state.user);\n  const {\n    mainPosts\n  } = useSelector(state => state.post);\n  useEffect(() => {\n    dispatch({\n      type: LOAD_FOLLOWERS_REQUEST,\n      data: me.id\n    });\n    dispatch({\n      type: LOAD_FOLLOWINGS_REQUEST,\n      data: me.id\n    });\n    dispatch({\n      type: LOAD_USER_POSTS_REQUEST,\n      data: me.id\n    });\n  }, [me && me.id]);\n  const onUnfollow = useCallback(userId => () => {\n    dispatch({\n      type: UNFOLLOW_USER_REQUEST,\n      data: userId\n    });\n  }, []);\n  const onRemoveFollower = useCallback(userId => () => {\n    dispatch({\n      type: REMOVE_FOLLOWER_REQUEST,\n      data: userId\n    });\n  }, []);\n  return __jsx(\"div\", null, __jsx(NicknameEditForm, null), __jsx(List, {\n    style: {\n      marginBottom: '20px'\n    },\n    grid: {\n      gutter: 4,\n      xs: 2,\n      md: 3\n    },\n    header: __jsx(\"div\", null, \"\\uD314\\uB85C\\uC789 \\uBAA9\\uB85D\"),\n    size: \"small\",\n    loadMore: __jsx(Button, {\n      style: {\n        width: '100%'\n      }\n    }, \"\\uB354 \\uBCF4\\uAE30\"),\n    bordered: true,\n    dataSource: followingList,\n    renderItem: item => __jsx(List.Item, {\n      style: {\n        marginTop: '20px'\n      }\n    }, __jsx(Card, {\n      actions: [__jsx(Icon, {\n        key: \"stop\",\n        type: \"stop\",\n        onClick: onUnfollow(item.id)\n      })]\n    }, __jsx(Card.Meta, {\n      description: item.nickname\n    })))\n  }), __jsx(List, {\n    style: {\n      marginBottom: '20px'\n    },\n    grid: {\n      gutter: 4,\n      xs: 2,\n      md: 3\n    },\n    header: __jsx(\"div\", null, \"\\uD314\\uB85C\\uC6CC \\uBAA9\\uB85D\"),\n    loadMore: __jsx(Button, {\n      style: {\n        width: '100%'\n      }\n    }, \"\\uB354 \\uBCF4\\uAE30\"),\n    bordered: true,\n    dataSource: followerList,\n    renderItem: item => __jsx(List.Item, {\n      style: {\n        marginTop: '20px'\n      }\n    }, __jsx(Card, {\n      actions: [__jsx(Icon, {\n        key: \"stop\",\n        type: \"stop\",\n        onClick: onRemoveFollower(item.id)\n      })]\n    }, __jsx(Card.Meta, {\n      description: item.nickname\n    })))\n  }), __jsx(\"div\", null, mainPosts ? mainPosts.map(c => __jsx(PostCard, {\n    key: +c.createdAt,\n    post: c\n  })) : null));\n};\n\nexport default Profile;","map":{"version":3,"sources":["C:/Users/Song/Desktop/projectpf/Ver2/frontend/pages/profile.js"],"names":["React","useEffect","useCallback","Form","Button","Input","Card","Icon","List","useDispatch","useSelector","NicknameEditForm","LOAD_FOLLOWERS_REQUEST","LOAD_FOLLOWINGS_REQUEST","UNFOLLOW_USER_REQUEST","REMOVE_FOLLOWER_REQUEST","LOAD_USER_POSTS_REQUEST","Profile","dispatch","me","followerList","followingList","state","user","mainPosts","post","type","data","id","onUnfollow","userId","onRemoveFollower","marginBottom","gutter","xs","md","width","item","marginTop","nickname","map","c","createdAt"],"mappings":"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","sourcesContent":["import React, { useEffect, useCallback } from \"react\";\r\nimport { Form,  Button, Input, Card, Icon , List } from \"antd\";\r\nimport { useDispatch, useSelector} from 'react-redux';\r\nimport NicknameEditForm from '../components/NicknameEditForm';\r\nimport { LOAD_FOLLOWERS_REQUEST, LOAD_FOLLOWINGS_REQUEST, UNFOLLOW_USER_REQUEST, REMOVE_FOLLOWER_REQUEST } from \"../reducers/user\";\r\nimport { LOAD_USER_POSTS_REQUEST } from \"../reducers/post\";\r\nconst Profile = () => {\r\n  const dispatch = useDispatch();\r\n  const { me, followerList, followingList } = useSelector(state => state.user);\r\n  const { mainPosts } = useSelector(state => state.post);\r\n  useEffect(()=> {\r\n    dispatch({\r\n      type: LOAD_FOLLOWERS_REQUEST,\r\n      data: me.id,\r\n    });\r\n    dispatch({\r\n      type: LOAD_FOLLOWINGS_REQUEST,\r\n      data: me.id,\r\n    });\r\n    dispatch({\r\n      type: LOAD_USER_POSTS_REQUEST,\r\n      data: me.id,\r\n    });\r\n  }, [me && me.id])\r\n  const onUnfollow = useCallback(userId => () => {\r\n    dispatch({\r\n      type: UNFOLLOW_USER_REQUEST,\r\n      data: userId,\r\n    })\r\n  },[])\r\n  const onRemoveFollower = useCallback(userId => () => {\r\n    dispatch({\r\n      type: REMOVE_FOLLOWER_REQUEST,\r\n      data: userId,\r\n    })\r\n  },[])\r\n  return (\r\n    <div>\r\n      <NicknameEditForm />\r\n      <List \r\n        style ={{ marginBottom : '20px'}}  \r\n        grid={{ gutter :4, xs:2, md:3}}\r\n        header={<div>팔로잉 목록</div>}\r\n        size =\"small\"\r\n        loadMore={<Button style={{width: '100%'}}>더 보기</Button>}\r\n        bordered\r\n        dataSource={followingList}\r\n        renderItem={item => (\r\n          <List.Item style ={{ marginTop :'20px'}}>\r\n            <Card actions={[<Icon key=\"stop\" type=\"stop\" onClick={onUnfollow(item.id)}></Icon>]}> \r\n              <Card.Meta description={item.nickname}></Card.Meta> \r\n            </Card>\r\n          </List.Item>\r\n        )}\r\n      >\r\n     </List>\r\n     <List \r\n        style ={{ marginBottom : '20px'}}  \r\n        grid={{ gutter :4, xs:2, md:3}}\r\n        header={<div>팔로워 목록</div>}\r\n        loadMore={<Button style={{width: '100%'}}>더 보기</Button>}\r\n        bordered\r\n        dataSource={followerList}\r\n        renderItem={item => (\r\n          <List.Item style ={{ marginTop :'20px'}}>\r\n            {/* 배열안에 jsx 쓸때는 key를 꼭 넣어주자( []:반복문을 의미, 넣어줘야 인식됨) */}\r\n            <Card actions={[<Icon key=\"stop\" type=\"stop\" onClick={onRemoveFollower(item.id)}></Icon>]}> \r\n              <Card.Meta description={item.nickname}></Card.Meta> \r\n            </Card>\r\n          </List.Item>\r\n        )}>\r\n     </List>\r\n     <div>\r\n        {mainPosts ? mainPosts.map(c => (\r\n            <PostCard key={+c.createdAt} post={c}></PostCard> \r\n        )): null} \r\n     </div> \r\n    </div>\r\n  );\r\n};\r\nexport default Profile;\r\n"]},"metadata":{},"sourceType":"module"}