{"version":3,"file":"static/webpack/static\\development\\pages\\hashtag.js.71b21aee547a76478a3d.hot-update.js","sources":["webpack:///./pages/hashtag.js"],"sourcesContent":["import React, {useEffect, useCallback} from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport { LOAD_HASHTAG_POSTS_REQUEST } from '../reducers/post';\r\nimport PostCard from '../components/PostCard';\r\nconst Hashtag = ({tag}) => {\r\n    console.log(\"해쉬태그 페이지 tag:\", tag);\r\n    const dispatch = useDispatch();\r\n    const { mainPosts, hasMorePost } = useSelector(state => state.post);\r\n    const onScroll = useCallback(() =>{\r\n        //window.scrollY:현재위치, clientHeight: 스크롤바의 높이(현재화면), scrollHeight: 맨위에서 맨아래까지의 높이\r\n        // console.log(window.scrollY, document.documentElement.clientHeight, document.documentElement.scrollHeight)\r\n        if(window.scrollY +  document.documentElement.clientHeight > document.documentElement.scrollHeight -300){\r\n          if(hasMorePost){ // 더 불러올 게시글이 있을때 요청(스크롤 할때마다 요청하는 것을 방지)\r\n            dispatch({\r\n              type: LOAD_HASHTAG_POSTS_REQUEST,\r\n              lastId: mainPosts.length > 0 && mainPosts[mainPosts.length -1].id, // 마지막게시글 기준으로 다음게시글 불러옴(게시글 보고있는데 새 게시글이 추가되면, 밀려서 불러오게되서 마지막 게시글을 기준으로 계산해서 불러오기) \r\n              data: tag,\r\n            })\r\n          }\r\n        }\r\n    }, [mainPosts.length, hasMorePost]);\r\n    useEffect( ()=>{\r\n        window.addEventListener('scroll', onScroll);\r\n        return () =>{ // 이벤트 사용하고 나서 꼭 정리해주자\r\n          window.removeEventListener('scroll', onScroll);\r\n        }\r\n    }, [mainPosts.length]);\r\n    return(\r\n        <div>\r\n            {mainPosts ? mainPosts.map(c => (\r\n                <PostCard key={+c.createdAt} post={c}></PostCard> \r\n            )): null} \r\n        </div>// 강의에서는(6.3 18:49) ? 처리 안해줘도 됨, 나는 map undefined 에러, 왜 ?\r\n    );\r\n};\r\nHashtag.propTypes = {\r\n    tag: PropTypes.string.isRequired, \r\n}\r\n\r\nHashtag.getInitialProps = async (context) => {\r\n    const tag = context.query.tag;\r\n    console.log('hashtag props on hastag.js' , context.query.tag, context); // 서버에서 라우팅받은 정보가 넘어오는지 확인, _app.js에서 또 추가해줌\r\n    context.store.dispatch({\r\n        type: LOAD_HASHTAG_POSTS_REQUEST,\r\n        data: tag,\r\n    })\r\n    return { tag };\r\n};\r\nexport default Hashtag;"],"mappings":";;;;;;;;;;;;;;;;;;;;;;AAAA;AACA;AACA;AACA;AACA;AACA;AAAA;AAAA;AACA;AACA;AACA;AAHA;AAGA;AAAA;AAHA;AAAA;AACA;AAGA;AACA;AACA;AACA;AACA;AAAA;AACA;AACA;AACA;AAAA;AACA;AAHA;AAKA;AACA;AACA;AACA;AACA;AACA;AAAA;AACA;AACA;AACA;AACA;AAEA;AACA;AAAA;AAAA;AADA;AAFA;AAOA;AACA;AAAA;AACA;AADA;AACA;AAGA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AACA;AACA;AAAA;AACA;AACA;AAFA;AAHA;AAOA;AAAA;AACA;AARA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAQA;;;;A","sourceRoot":""}