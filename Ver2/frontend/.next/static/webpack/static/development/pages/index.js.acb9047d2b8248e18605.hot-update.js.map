{"version":3,"file":"static/webpack/static\\development\\pages\\index.js.acb9047d2b8248e18605.hot-update.js","sources":["webpack:///./components/ImagesZoom.js"],"sourcesContent":["import React, { useState} from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport { Icon } from 'antd';\r\nimport Slick from 'react-slick';\r\nimport styled from 'styled-components';\r\n\r\nconst Overlay = styled.div`\r\n  position: fixed;\r\n  z-index: 5000;\r\n  top: 0;\r\n  left: 0;\r\n  right: 0;\r\n  bottom: 0;\r\n`;\r\n// header 안에들어있는 h1이란 의미, &은 사스나 레스 에서 자기자신 가르키는 태그(여기선 h1은 자식), \r\nconst Header = styled.header`\r\n  height: 44;\r\n  background: white;\r\n  position: relative;\r\n  padding: 0;\r\n  text-align: center;  \r\n\r\n  & h1{\r\n    margin: 0;\r\n    fontSize: 17px;\r\n    color: #333;\r\n    line-height: 44px;\r\n  }\r\n`;\r\n\r\n\r\nconst SlickWrapper = styled.div`\r\n  height: calc(100% - 44px);\r\n  background: #090909;\r\n`;\r\n// 스타일 이미 적용되있는 앤티디 컴포넌트도 스타일 적용 가능\r\nconst CloseBtn = styled(Icon)` \r\n position: absolute;\r\n right: 0;\r\n top: 0;\r\n padding: 15;\r\n line-height: 14px;\r\n cursor: pointer;\r\n`;\r\n// div 스타일을 자식으로 넣은 경우\r\nconst Indicator = styled.div`\r\n  text-align: center;\r\n  & > div {\r\n    width: 75;\r\n    height: 30;\r\n    line-height: 30px;\r\n    borderRadius: 15;\r\n    background: #313131;\r\n    display: inline-block;\r\n    text-align: center;\r\n    color: white;\r\n    font-size: 15px;\r\n  }\r\n`;\r\nconst ImgWrapper = styled.div`\r\npadding: 32px;\r\ntext-align: center;\r\n& img{\r\n  margin: 0 auto; \r\n  max-height: 750px;\r\n}\r\n`;\r\nconst ImagesZoom = ({ images, onClose }) => {\r\n  const [currentSlide, setCurrentSlide] = useState(0); // 몇번째 이미지를 보고있는지\r\n\r\n  return (\r\n    <Overlay>\r\n      <Header>\r\n        <h1>상세 이미지</h1>\r\n        <CloseBtn/>\r\n      </Header>\r\n      <SlickWrapper>\r\n        <div>\r\n          <Slick\r\n            initialSlide={0} // 처음 보여줄 이미지 \r\n            afterChange={slide => setCurrentSlide(slide)} // 슬라이드 할때마다 index 변경\r\n            infinite={false} // 무한 슬라이드 1~4 > 4~1\r\n            arrows\r\n            slidesToShow={1} // 한번에 1장만 보여줌\r\n            slidesToScroll={1} // 한번에 1장만 슬라이드\r\n          >\r\n            {images.map((v) => {\r\n              return (\r\n                <ImgWrapper>\r\n                  <img src={`http://localhost:3065/${v.src}`}/>\r\n                </ImgWrapper>\r\n              );\r\n            })}\r\n          </Slick>\r\n          <Indicator>\r\n            <div>\r\n              {currentSlide + 1} / {images.length}\r\n            </div>\r\n          </Indicator>\r\n        </div>\r\n      </SlickWrapper>\r\n    </Overlay>\r\n  );\r\n};\r\n\r\nImagesZoom.propTypes = {\r\n  images: PropTypes.arrayOf(PropTypes.shape({\r\n    src: PropTypes.string,\r\n  })).isRequired,\r\n  onClose: PropTypes.func.isRequired,\r\n};\r\n\r\nexport default ImagesZoom;"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAAA;AACA;AACA;AACA;AACA;AAEA;AACA;AAQA;AAgBA;AACA;AAIA;AACA;AAQA;AAcA;AACA;AAOA;AAAA;AAAA;AACA;AADA;AAAA;AAAA;AACA;AACA;AACA;AASA;AADA;AAEA;AAAA;AAAA;AAFA;AAGA;AAHA;AAIA;AACA;AALA;AAMA;AACA;AAPA;AASA;AAEA;AAAA;AAGA;AAWA;AACA;AACA;AACA;AACA;AADA;AAGA;AAJA;AAOA;;;;A","sourceRoot":""}