{"version":3,"file":"static/webpack/static\\development\\pages\\_app.js.0509abd191fd2a59d735.hot-update.js","sources":["webpack:///./components/AppLayout.js"],"sourcesContent":["import React, { useEffect } from \"react\";\r\nimport Link from \"next/link\";\r\nimport { Menu, Input, Row, Col, List } from \"antd\";\r\nimport LoginForm from \"../components/LoginForm\";\r\nimport PropTypes from \"prop-types\";\r\nimport UserProfile from \"./UserProfile\";\r\nimport Router from 'next/router';\r\nimport { useSelector, useDispatch } from \"react-redux\";\r\nimport { LOAD_USER_REQUEST } from \"../reducers/user\";\r\n\r\n// 프로그래밍적으로 페이지 변경, 컴포넌트적으로는 Link\r\nconst onSearch = (value) =>{\r\n  Router.push({pathname: '/hashtag', query: {tag: value}}, `/hashtag/${value}`);\r\n}\r\nconst AppLayout = ({ children }) => {\r\n  const { me } = useSelector(state => state.user);\r\n\r\n  return (\r\n    <div>\r\n      <Menu mode=\"horizontal\">\r\n        <Menu.Item key=\"home\">\r\n          <Link href=\"/\">\r\n            <a>노드버드</a>\r\n          </Link>\r\n        </Menu.Item>\r\n        <Menu.Item key=\"profile\">\r\n          <Link href=\"/profile\">\r\n            <a>프로필</a>\r\n          </Link>\r\n        </Menu.Item>\r\n        <Menu.Item key=\"mail\">\r\n          <Input.Search\r\n            enterButton\r\n            style={{ verticalAlign: \"middle\" }}\r\n            onSearch={onSearch}\r\n          ></Input.Search>\r\n        </Menu.Item>\r\n      </Menu>\r\n      {/* <Link href=\"/Signup\">\r\n        <a>\r\n          <Button>회원가입</Button>\r\n        </a>\r\n      </Link> */}\r\n      <Row gutter={8}>\r\n        {/* xs=작은화면일때, md=큰 화면일때 비율(24가 최대) */}\r\n        <Col xs={24} md={6}>\r\n          {me ? <UserProfile/>\r\n          : (\r\n            <LoginForm></LoginForm>\r\n          )}\r\n        </Col>\r\n        <Col xs={24} md={6}>\r\n          {children}\r\n        </Col>\r\n        <Col xs={24} md={6}>\r\n          3 \r\n        </Col>\r\n      </Row>\r\n    </div>\r\n  );\r\n};\r\n\r\nAppLayout.propTypes = {\r\n  children: PropTypes.node // 랜더링 될 수 있는 컴포넌트들\r\n};\r\n\r\nexport default AppLayout;\r\n"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AACA;AAAA;AAAA;AACA;AADA;AACA;AAAA;AADA;AACA;AAEA;AAEA;AAAA;AACA;AAAA;AACA;AAAA;AAIA;AAAA;AACA;AAAA;AAIA;AAAA;AAEA;AACA;AAAA;AAAA;AACA;AAHA;AAYA;AAAA;AAEA;AAAA;AAAA;AAMA;AAAA;AAAA;AAGA;AAAA;AAAA;AAMA;AACA;AACA;AACA;AACA;AAFA;AAIA;;;;A","sourceRoot":""}