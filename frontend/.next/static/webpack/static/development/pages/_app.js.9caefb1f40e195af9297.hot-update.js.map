{"version":3,"file":"static/webpack/static\\development\\pages\\_app.js.9caefb1f40e195af9297.hot-update.js","sources":["webpack:///./pages/_app.js"],"sourcesContent":["// root , 모든 페이지의 레이아웃 역할\r\nimport React from \"react\";\r\nimport Head from \"next/head\";\r\nimport AppLayout from \"../components/AppLayout\";\r\nimport PropTypes from \"prop-types\";\r\nimport reducer from \"../reducers\"; \r\nimport { Provider } from 'react-redux'; // 리덕스 스테이트를 제공해줌(컴포넌트)\r\nimport withRedux from 'next-redux-wrapper'\r\nimport { createStore, applyMiddleware, compose} from 'redux';\r\nimport sagaMiddleware from '../sagas/middleware';\r\nimport rootSaga from \"../sagas\";\r\n\r\nconst Portfolio = ({ Component, store }) => {\r\n  return (\r\n    // Provider 가 최상위 컴포넌트이기 때문에 자식 컴포넌트들이 스토어에 접근할 수 있음\r\n    // 스토어는 state, action, reducer 가 합쳐진 것\r\n   <Provider store={store}>\r\n      <Head>\r\n        <title>PortFolio</title>\r\n        <link\r\n          rel=\"stylesheet\"\r\n          href=\"https://cdnjs.cloudflare.com/ajax/libs/antd/3.26.11/antd.css\"\r\n        ></link>\r\n        <script src=\"https://cdnjs.cloudflare.com/ajax/libs/antd/3.26.11/antd.js\"></script>\r\n      </Head>\r\n      <AppLayout>\r\n        <Component></Component>\r\n      </AppLayout>\r\n   </Provider>\r\n  );\r\n};\r\n\r\nPortfolio.propTypes = {\r\n  Component: PropTypes.elementType, // JSX 에 들어가는 모든것(문자열,컴포넌트,태그,숫자 등)\r\n  store: PropTypes.object,\r\n};\r\n\r\nexport default withRedux((initialState, options) => {\r\n  const middlewares = [sagaMiddleware];\r\n  // 보안상 아래 부분은 실 배포용인지 개발용인지 구분\r\n  const enhancer = process.env.NODE_ENV === 'production' ? compose(applyMiddleware(...middlewares),) : compose(applyMiddleware(...middlewares), !options.isServer && typeof window !== 'undefined' && window.__REDUX_DEVTOOLS_EXTENSION__ !== 'undefined' ? window.__REDUX_DEVTOOLS_EXTENSION__() : (f) => f, ) \r\n  const store = createStore(reducer, initialState, enhancer);\r\n  // 여기에 store 커스터마이징\r\n  sagaMiddleware.run(rootSaga);\r\n  return store;\r\n})(Portfolio);// 컴포넌트를 감싸줌(고차 컴포넌트- 기존컴포넌트 확장)\r\n"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AACA;AACA;AACA;AACA;AACA;AAAA;AAAA;AAAA;AACA;AAEA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEA;AACA;AAFA;AAAA;AAAA;AAAA;AAAA;AAAA;AAIA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAbA;AAiBA;AACA;AACA;AACA;AAAA;AACA;AAFA;AAKA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;A","sourceRoot":""}