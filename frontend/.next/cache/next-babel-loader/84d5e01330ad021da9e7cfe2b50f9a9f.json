{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Song\\\\Desktop\\\\projectpf\\\\frontend\\\\components\\\\PostForm.js\";\nvar __jsx = React.createElement;\nimport React, { useCallback, useState, useEffect } from 'react';\nimport { Input, Form, Button } from \"antd\";\nimport { useSelector, useDispatch } from 'react-redux';\nimport { ADD_POST_REQUEST } from '../reducers/post';\n\nconst PostForm = () => {\n  const dispatch = useDispatch();\n  const {\n    0: text,\n    1: setText\n  } = useState('');\n  const {\n    imagePaths,\n    isAddingPost,\n    postAdded\n  } = useSelector(state => state.post);\n  const onsubmitForm = useCallback(e => {\n    e.preventDefault(); // 이걸 안하면 새 페이지로 넘어감(싱글폼 들은 꼭 작성)\n\n    if (!text) {\n      alert('게시글을 작성해주세요!');\n    }\n\n    dispatch({\n      type: ADD_POST_REQUEST,\n      data: {\n        content: text\n      }\n    });\n  }, [text]);\n  const onChangeText = useCallback(e => {\n    setText(e.target.value);\n  }, []); // 게시글 작성될때 작성폼 초기화\n\n  useEffect(() => {\n    setText('');\n  }, [postAdded === true]);\n  return __jsx(Form, {\n    style: {\n      margin: '10px 0 20 px'\n    },\n    encType: \"multipart/form-data\",\n    onSubmit: onsubmitForm,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 29\n    },\n    __self: this\n  }, __jsx(Input.TextArea, {\n    maxLength: 140,\n    placeholder: \"\\uC5B4\\uB5A4 \\uC2E0\\uAE30\\uD55C \\uC77C\\uC774 \\uC788\\uC5C8\\uB098\\uC694?\",\n    value: text,\n    onChange: onChangeText,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 30\n    },\n    __self: this\n  }), __jsx(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 36\n    },\n    __self: this\n  }, __jsx(Button, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 37\n    },\n    __self: this\n  }, \"\\uC774\\uBBF8\\uC9C0 \\uC5C5\\uB85C\\uB4DC\"), __jsx(Button, {\n    type: \"primary\",\n    style: {\n      float: \"right\"\n    },\n    htmlType: \"submit\",\n    loading: isAddingPost,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 38\n    },\n    __self: this\n  }, \"\\uC9F9\\uC9F9\")), __jsx(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 47\n    },\n    __self: this\n  }, imagePaths.map(v => {\n    return __jsx(\"div\", {\n      key: v,\n      style: {\n        display: \"inline-block\"\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 50\n      },\n      __self: this\n    }, __jsx(\"img\", {\n      src: \"http://localhost:3065/\",\n      style: {\n        width: \"200px\"\n      },\n      alt: v,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 51\n      },\n      __self: this\n    }), __jsx(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 56\n      },\n      __self: this\n    }, __jsx(Button, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 57\n      },\n      __self: this\n    }, \"\\uC81C\\uAC70\")));\n  })));\n};\n\nexport default PostForm;","map":{"version":3,"sources":["C:/Users/Song/Desktop/projectpf/frontend/components/PostForm.js"],"names":["React","useCallback","useState","useEffect","Input","Form","Button","useSelector","useDispatch","ADD_POST_REQUEST","PostForm","dispatch","text","setText","imagePaths","isAddingPost","postAdded","state","post","onsubmitForm","e","preventDefault","alert","type","data","content","onChangeText","target","value","margin","float","map","v","display","width"],"mappings":"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","sourcesContent":["import React, { useCallback, useState, useEffect } from 'react';\r\nimport { Input, Form, Button } from \"antd\";\r\nimport { useSelector, useDispatch } from 'react-redux';\r\nimport { ADD_POST_REQUEST} from '../reducers/post';\r\nconst PostForm = () => {\r\n  const dispatch = useDispatch();\r\n  const [text, setText] = useState('');\r\n  const { imagePaths, isAddingPost, postAdded } = useSelector(state => state.post);\r\n  const onsubmitForm = useCallback((e)=>{\r\n    e.preventDefault(); // 이걸 안하면 새 페이지로 넘어감(싱글폼 들은 꼭 작성)\r\n    if(!text){\r\n      alert('게시글을 작성해주세요!');\r\n    }\r\n    dispatch({\r\n      type: ADD_POST_REQUEST,\r\n      data:{\r\n        content: text ,\r\n      },\r\n    });\r\n  },[text]);\r\n  const onChangeText= useCallback((e)=>{\r\n    setText(e.target.value);\r\n  },[]);\r\n  // 게시글 작성될때 작성폼 초기화\r\n  useEffect(()=>{\r\n    setText('')\r\n  },[postAdded === true]);\r\n    return (\r\n        <Form style={{ margin: '10px 0 20 px' }} encType=\"multipart/form-data\" onSubmit={onsubmitForm}>\r\n        <Input.TextArea\r\n          maxLength={140}\r\n          placeholder=\"어떤 신기한 일이 있었나요?\"\r\n          value={text}\r\n          onChange={onChangeText}\r\n        ></Input.TextArea>\r\n        <div>\r\n          <Button>이미지 업로드</Button>\r\n          <Button\r\n            type=\"primary\"\r\n            style={{ float: \"right\" }}\r\n            htmlType=\"submit\"\r\n            loading={isAddingPost}\r\n          >\r\n            짹짹\r\n          </Button>\r\n        </div>\r\n        <div>\r\n          {imagePaths.map((v) => {\r\n            return (\r\n              <div key={v} style={{ display: \"inline-block\" }}>\r\n                <img\r\n                  src={\"http://localhost:3065/\"}\r\n                  style={{ width: \"200px\" }}\r\n                  alt={v}\r\n                ></img>\r\n                <div>\r\n                  <Button>제거</Button>\r\n                </div>\r\n              </div>\r\n            );\r\n          })}\r\n        </div>\r\n      </Form>\r\n    )\r\n}\r\n\r\nexport default PostForm;"]},"metadata":{},"sourceType":"module"}