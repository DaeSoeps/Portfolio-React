{"ast":null,"code":"import { all, fork, takeLatest, put, delay } from 'redux-saga/effects';\nimport { ADD_COMMENT_REQUEST, ADD_COMMENT_SUCCESS, ADD_COMMENT_FAILURE, ADD_POST_REQUEST, ADD_POST_FAILURE, ADD_POST_SUCCESS } from '../reducers/post';\n\nfunction addCommentAPI() {}\n\nfunction* addComment() {\n  try {\n    yield delay(2000);\n    yield put({\n      type: ADD_COMMENT_SUCCESS\n    });\n  } catch (e) {\n    yield put({\n      type: ADD_COMMENT_FAILURE,\n      error: e\n    });\n  }\n}\n\nfunction* watchAddPost() {\n  yield takeLatest(ADD_COMMENT_REQUEST, addComment);\n}\n\nexport default function* postSaga() {\n  yield all([fork(watchAddPost)]);\n}\n;","map":{"version":3,"sources":["C:/Users/Song/Desktop/projectpf/frontend/sagas/post.js"],"names":["all","fork","takeLatest","put","delay","ADD_COMMENT_REQUEST","ADD_COMMENT_SUCCESS","ADD_COMMENT_FAILURE","ADD_POST_REQUEST","ADD_POST_FAILURE","ADD_POST_SUCCESS","addCommentAPI","addComment","type","e","error","watchAddPost","postSaga"],"mappings":"AAAA,SAASA,GAAT,EAAcC,IAAd,EAAoBC,UAApB,EAAgCC,GAAhC,EAAqCC,KAArC,QAAkD,oBAAlD;AACA,SAASC,mBAAT,EAA8BC,mBAA9B,EAAmDC,mBAAnD,EAAyEC,gBAAzE,EAA2FC,gBAA3F,EAA6GC,gBAA7G,QAAoI,kBAApI;;AAGA,SAASC,aAAT,GAAwB,CAEvB;;AAED,UAAUC,UAAV,GAAsB;AAClB,MAAG;AACC,UAAMR,KAAK,CAAC,IAAD,CAAX;AACA,UAAMD,GAAG,CAAC;AACNU,MAAAA,IAAI,EAACP;AADC,KAAD,CAAT;AAGH,GALD,CAKE,OAAMQ,CAAN,EAAQ;AACN,UAAMX,GAAG,CAAC;AACNU,MAAAA,IAAI,EAACN,mBADC;AAENQ,MAAAA,KAAK,EAAED;AAFD,KAAD,CAAT;AAIH;AACJ;;AAGD,UAAUE,YAAV,GAAwB;AACpB,QAAMd,UAAU,CAACG,mBAAD,EAAsBO,UAAtB,CAAhB;AACH;;AAED,eAAe,UAAUK,QAAV,GAAqB;AAChC,QAAMjB,GAAG,CAAC,CACNC,IAAI,CAACe,YAAD,CADE,CAAD,CAAT;AAGH;AAAA","sourcesContent":["import { all, fork, takeLatest, put, delay } from 'redux-saga/effects';\r\nimport { ADD_COMMENT_REQUEST, ADD_COMMENT_SUCCESS, ADD_COMMENT_FAILURE,  ADD_POST_REQUEST, ADD_POST_FAILURE, ADD_POST_SUCCESS} from '../reducers/post';\r\n\r\n\r\nfunction addCommentAPI(){\r\n\r\n}\r\n\r\nfunction* addComment(){\r\n    try{\r\n        yield delay(2000);\r\n        yield put({\r\n            type:ADD_COMMENT_SUCCESS,\r\n        });\r\n    } catch(e){\r\n        yield put({\r\n            type:ADD_COMMENT_FAILURE,\r\n            error: e,\r\n        });\r\n    }\r\n}\r\n\r\n\r\nfunction* watchAddPost(){\r\n    yield takeLatest(ADD_COMMENT_REQUEST, addComment);\r\n}\r\n\r\nexport default function* postSaga() {\r\n    yield all([\r\n        fork(watchAddPost),\r\n    ])\r\n};"]},"metadata":{},"sourceType":"module"}