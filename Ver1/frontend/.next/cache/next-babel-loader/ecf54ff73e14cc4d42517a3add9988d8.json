{"ast":null,"code":"function ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\nexport const initialState = {\n  mainPosts: [{\n    User: {\n      id: 1,\n      nickname: '제로초'\n    },\n    content: '첫번째 게시글',\n    img: 'https://www.google.com/imgres?imgurl=http%3A%2F%2Fnewsimg.hankookilbo.com%2F2019%2F04%2F29%2F201904291390027161_3.jpg&imgrefurl=https%3A%2F%2Fwww.hankookilbo.com%2FNews%2FRead%2F201904291390027161&tbnid=NpMi5nVF1QK1MM&vet=12ahUKEwjR1LT9oPfoAhUEUJQKHa2LAhMQMygBegUIARD-Ag..i&docid=k3mACyoxPXAFMM&w=680&h=448&q=%EA%B3%A0%EC%96%91%EC%9D%B4&ved=2ahUKEwjR1LT9oPfoAhUEUJQKHa2LAhMQMygBegUIARD-Ag',\n    Comments: []\n  }],\n  // 화면에 보일 포스트들\n  imagePaths: [],\n  // 미리보기 이미지 경로\n  addPostErrorReason: false,\n  // 포스트 업로드 실패 사유\n  isAddingPost: false,\n  // 포스트 업로드 중 \n  postAdded: false // 포스트 업로드 성공\n\n};\nconst dummyPost = {\n  User: {\n    id: 1,\n    nickname: '게스트'\n  },\n  content: '나는 더미입니다.',\n  Comments: []\n};\nconst dummyComment = {\n  User: {\n    id: 1,\n    nickname: 2\n  },\n  createdAt: new Date(),\n  content: '더미 댓글입니다.'\n}; //메인 포스트를 로딩\n\nexport const LOAD_MAIN_POSTS_REQUEST = 'LOAD_MAIN_POSTS_REQUEST';\nexport const LOAD_MAIN_POSTS_SUCCESS = 'LOAD_MAIN_POSTS_SUCCESS';\nexport const LOAD_MAIN_POSTS_FAILURE = 'LOAD_MAIN_POSTS_FAILURE'; //해시태그 검색했을때 결과 로딩\n\nexport const LOAD_HASHTAG_POSTS_REQUEST = 'LOAD_HASHTAG_POSTS_REQUEST';\nexport const LOAD_HASHTAG_POSTS_SUCCESS = 'LOAD_HASHTAG_POSTS_SUCCESS';\nexport const LOAD_HASHTAG_POSTS_FAILURE = 'LOAD_HASHTAG_POSTS_FAILURE'; //사용자가 어떤 게시글을 썼는지 로딩\n\nexport const LOAD_USER_POSTS_REQUEST = 'LOAD_USER_POSTS_REQUEST';\nexport const LOAD_USER_POSTS_SUCCESS = 'LOAD_USER_POSTS_SUCCESS';\nexport const LOAD_USER_POSTS_FAILURE = 'LOAD_USER_POSTS_FAILURE'; //이미지 업로드\n\nexport const UPLOAD_IMAGES_REQUEST = 'UPLOAD_IMAGES_REQUEST';\nexport const UPLOAD_IMAGES_SUCCESS = 'UPLOAD_IMAGES_SUCCESS';\nexport const UPLOAD_IMAGES_FAILURE = 'UPLOAD_IMAGES_FAILURE'; //이미지 업로드 취소(동기)\n\nexport const REMOVE_IMAGE = 'REMOVE_IMAGE'; //포스트 추가\n\nexport const ADD_POST_REQUEST = 'ADD_POST_REQUEST';\nexport const ADD_POST_SUCCESS = 'ADD_POST_SUCCESS';\nexport const ADD_POST_FAILURE = 'ADD_POST_FAILURE'; //포스트에 LIKE 누르는 액션\n\nexport const LIKE_POST_REQUEST = 'LIKE_POST_REQUEST';\nexport const LIKE_POST_SUCCESS = 'LIKE_POST_SUCCESS';\nexport const LIKE_POST_FAILURE = 'LIKE_POST_FAILURE'; //포스트에 LIKE 취소하는 액션\n\nexport const UNLIKE_POST_REQUEST = 'UNLIKE_POST_REQUEST';\nexport const UNLIKE_POST_SUCCESS = 'UNLIKE_POST_SUCCESS';\nexport const UNLIKE_POST_FAILURE = 'UNLIKE_POST_FAILURE'; //게시글에 댓글 남기기\n\nexport const ADD_COMMENT_REQUEST = 'ADD_COMMENT_REQUEST';\nexport const ADD_COMMENT_SUCCESS = 'ADD_COMMENT_SUCCESS';\nexport const ADD_COMMENT_FAILURE = 'ADD_COMMENT_FAILURE'; //게시글 댓글 불러오기\n\nexport const LOAD_COMMENT_REQUEST = 'LOAD_COMMENT_REQUEST';\nexport const LOAD_COMMENT_SUCCESS = 'LOAD_COMMENT_SUCCESS';\nexport const LOAD_COMMENT_FAILURE = 'LOAD_COMMENT_FAILURE'; //리트윗 하는 액션\n\nexport const RETWEET_REQUEST = 'RETWEET_REQUEST';\nexport const RETWEET_SUCCESS = 'RETWEET_SUCCESS';\nexport const RETWEET_FAILURE = 'RETWEET_FAILURE'; //포스트 제거하는 액션\n\nexport const REMOVE_POST_REQUEST = 'REMOVE_POST_REQUEST';\nexport const REMOVE_POST_SUCCESS = 'REMOVE_POST_SUCCESS';\nexport const REMOVE_POST_FAILURE = 'REMOVE_POST_FAILURE';\nconst ADD_DUMMY = 'ADD_DUMMY'; // ????\n\nconst addPost = {\n  type: ADD_POST_REQUEST\n};\nconst addDummy = {\n  type: ADD_DUMMY,\n  data: {\n    content: 'Hello',\n    UserId: 1,\n    User: {\n      nickname: '제로초'\n    }\n  }\n};\n\nconst reducer = (state = initialState, action) => {\n  switch (action.type) {\n    case ADD_POST_REQUEST:\n      {\n        return _objectSpread({}, state, {\n          isAddingPost: true,\n          addPostErrorReason: '',\n          postAdded: false\n        });\n      }\n\n    case ADD_POST_SUCCESS:\n      {\n        return _objectSpread({}, state, {\n          isAddingPost: false,\n          mainPosts: [dummyPost, ...state.mainPosts],\n          postAdded: true\n        });\n      }\n\n    case ADD_POST_FAILURE:\n      {\n        return _objectSpread({}, state, {\n          isAddingPost: false,\n          addPostErrorReason: action.error\n        });\n      }\n\n    case ADD_DUMMY:\n      {\n        return _objectSpread({}, state, {\n          mainPosts: [action.data, ...state.mainPosts]\n        });\n      }\n\n    default:\n      {\n        return _objectSpread({}, state);\n      }\n  }\n};\n\nexport default reducer;","map":{"version":3,"sources":["C:/Users/Song/Desktop/projectpf/frontend/reducers/post.js"],"names":["initialState","mainPosts","User","id","nickname","content","img","Comments","imagePaths","addPostErrorReason","isAddingPost","postAdded","dummyPost","dummyComment","createdAt","Date","LOAD_MAIN_POSTS_REQUEST","LOAD_MAIN_POSTS_SUCCESS","LOAD_MAIN_POSTS_FAILURE","LOAD_HASHTAG_POSTS_REQUEST","LOAD_HASHTAG_POSTS_SUCCESS","LOAD_HASHTAG_POSTS_FAILURE","LOAD_USER_POSTS_REQUEST","LOAD_USER_POSTS_SUCCESS","LOAD_USER_POSTS_FAILURE","UPLOAD_IMAGES_REQUEST","UPLOAD_IMAGES_SUCCESS","UPLOAD_IMAGES_FAILURE","REMOVE_IMAGE","ADD_POST_REQUEST","ADD_POST_SUCCESS","ADD_POST_FAILURE","LIKE_POST_REQUEST","LIKE_POST_SUCCESS","LIKE_POST_FAILURE","UNLIKE_POST_REQUEST","UNLIKE_POST_SUCCESS","UNLIKE_POST_FAILURE","ADD_COMMENT_REQUEST","ADD_COMMENT_SUCCESS","ADD_COMMENT_FAILURE","LOAD_COMMENT_REQUEST","LOAD_COMMENT_SUCCESS","LOAD_COMMENT_FAILURE","RETWEET_REQUEST","RETWEET_SUCCESS","RETWEET_FAILURE","REMOVE_POST_REQUEST","REMOVE_POST_SUCCESS","REMOVE_POST_FAILURE","ADD_DUMMY","addPost","type","addDummy","data","UserId","reducer","state","action","error"],"mappings":";;;;;;AAAA,OAAO,MAAMA,YAAY,GAAG;AACxBC,EAAAA,SAAS,EAAE,CAAC;AACRC,IAAAA,IAAI,EAAE;AACFC,MAAAA,EAAE,EAAC,CADD;AAEFC,MAAAA,QAAQ,EAAE;AAFR,KADE;AAKNC,IAAAA,OAAO,EAAC,SALF;AAMNC,IAAAA,GAAG,EAAC,sYANE;AAONC,IAAAA,QAAQ,EAAC;AAPH,GAAD,CADa;AASpB;AACJC,EAAAA,UAAU,EAAG,EAVW;AAUP;AACjBC,EAAAA,kBAAkB,EAAE,KAXI;AAWG;AAC3BC,EAAAA,YAAY,EAAG,KAZS;AAYF;AACtBC,EAAAA,SAAS,EAAE,KAba,CAaN;;AAbM,CAArB;AAgBP,MAAMC,SAAS,GAAG;AACdV,EAAAA,IAAI,EAAE;AACFC,IAAAA,EAAE,EAAC,CADD;AAEFC,IAAAA,QAAQ,EAAE;AAFR,GADQ;AAKdC,EAAAA,OAAO,EAAE,WALK;AAMdE,EAAAA,QAAQ,EAAE;AANI,CAAlB;AASA,MAAMM,YAAY,GAAE;AAChBX,EAAAA,IAAI,EAAC;AACDC,IAAAA,EAAE,EAAC,CADF;AAEDC,IAAAA,QAAQ,EAAC;AAFR,GADW;AAKhBU,EAAAA,SAAS,EAAE,IAAIC,IAAJ,EALK;AAMhBV,EAAAA,OAAO,EAAE;AANO,CAApB,C,CASA;;AACA,OAAO,MAAMW,uBAAuB,GAAG,yBAAhC;AACP,OAAO,MAAMC,uBAAuB,GAAG,yBAAhC;AACP,OAAO,MAAMC,uBAAuB,GAAG,yBAAhC,C,CACP;;AACA,OAAO,MAAMC,0BAA0B,GAAE,4BAAlC;AACP,OAAO,MAAMC,0BAA0B,GAAE,4BAAlC;AACP,OAAO,MAAMC,0BAA0B,GAAE,4BAAlC,C,CACN;;AACD,OAAO,MAAMC,uBAAuB,GAAE,yBAA/B;AACP,OAAO,MAAMC,uBAAuB,GAAE,yBAA/B;AACP,OAAO,MAAMC,uBAAuB,GAAE,yBAA/B,C,CACP;;AACA,OAAO,MAAMC,qBAAqB,GAAE,uBAA7B;AACP,OAAO,MAAMC,qBAAqB,GAAE,uBAA7B;AACP,OAAO,MAAMC,qBAAqB,GAAE,uBAA7B,C,CACP;;AACA,OAAO,MAAMC,YAAY,GAAE,cAApB,C,CAEP;;AACA,OAAO,MAAMC,gBAAgB,GAAG,kBAAzB;AACP,OAAO,MAAMC,gBAAgB,GAAG,kBAAzB;AACP,OAAO,MAAMC,gBAAgB,GAAG,kBAAzB,C,CAEP;;AACA,OAAO,MAAMC,iBAAiB,GAAG,mBAA1B;AACP,OAAO,MAAMC,iBAAiB,GAAG,mBAA1B;AACP,OAAO,MAAMC,iBAAiB,GAAG,mBAA1B,C,CACP;;AACA,OAAO,MAAMC,mBAAmB,GAAG,qBAA5B;AACP,OAAO,MAAMC,mBAAmB,GAAG,qBAA5B;AACP,OAAO,MAAMC,mBAAmB,GAAG,qBAA5B,C,CACP;;AACA,OAAO,MAAMC,mBAAmB,GAAG,qBAA5B;AACP,OAAO,MAAMC,mBAAmB,GAAG,qBAA5B;AACP,OAAO,MAAMC,mBAAmB,GAAG,qBAA5B,C,CACP;;AACA,OAAO,MAAMC,oBAAoB,GAAG,sBAA7B;AACP,OAAO,MAAMC,oBAAoB,GAAG,sBAA7B;AACP,OAAO,MAAMC,oBAAoB,GAAG,sBAA7B,C,CACP;;AACA,OAAO,MAAMC,eAAe,GAAG,iBAAxB;AACP,OAAO,MAAMC,eAAe,GAAG,iBAAxB;AACP,OAAO,MAAMC,eAAe,GAAG,iBAAxB,C,CACP;;AACA,OAAO,MAAMC,mBAAmB,GAAG,qBAA5B;AACP,OAAO,MAAMC,mBAAmB,GAAG,qBAA5B;AACP,OAAO,MAAMC,mBAAmB,GAAG,qBAA5B;AAEP,MAAMC,SAAS,GAAG,WAAlB,C,CAA8B;;AAC9B,MAAMC,OAAO,GAAG;AACZC,EAAAA,IAAI,EAAGvB;AADK,CAAhB;AAGA,MAAMwB,QAAQ,GAAG;AACbD,EAAAA,IAAI,EAAEF,SADO;AAEbI,EAAAA,IAAI,EAAE;AACFjD,IAAAA,OAAO,EAAE,OADP;AAEFkD,IAAAA,MAAM,EAAC,CAFL;AAGFrD,IAAAA,IAAI,EAAC;AACDE,MAAAA,QAAQ,EAAC;AADR;AAHH;AAFO,CAAjB;;AAWA,MAAMoD,OAAO,GAAG,CAAEC,KAAK,GAAGzD,YAAV,EAAwB0D,MAAxB,KAAmC;AAC/C,UAAQA,MAAM,CAACN,IAAf;AACI,SAAKvB,gBAAL;AAAuB;AACnB,iCACO4B,KADP;AAEI/C,UAAAA,YAAY,EAAE,IAFlB;AAGID,UAAAA,kBAAkB,EAAE,EAHxB;AAIIE,UAAAA,SAAS,EAAE;AAJf;AAMH;;AACD,SAAKmB,gBAAL;AAAuB;AACnB,iCACO2B,KADP;AAEI/C,UAAAA,YAAY,EAAE,KAFlB;AAGIT,UAAAA,SAAS,EAAE,CAACW,SAAD,EAAY,GAAG6C,KAAK,CAACxD,SAArB,CAHf;AAIIU,UAAAA,SAAS,EAAE;AAJf;AAMH;;AACD,SAAKoB,gBAAL;AAAuB;AACnB,iCACO0B,KADP;AAEI/C,UAAAA,YAAY,EAAE,KAFlB;AAGID,UAAAA,kBAAkB,EAAEiD,MAAM,CAACC;AAH/B;AAKH;;AACD,SAAKT,SAAL;AAAgB;AACZ,iCACOO,KADP;AAEIxD,UAAAA,SAAS,EAAE,CAACyD,MAAM,CAACJ,IAAR,EAAc,GAAGG,KAAK,CAACxD,SAAvB;AAFf;AAIH;;AACD;AAAQ;AACJ,iCACOwD,KADP;AAGH;AAlCL;AAoCH,CArCD;;AAuCA,eAAeD,OAAf","sourcesContent":["export const initialState = {\r\n    mainPosts: [{\r\n        User: {\r\n            id:1,\r\n            nickname: '제로초',\r\n          },\r\n          content:'첫번째 게시글',\r\n          img:'https://www.google.com/imgres?imgurl=http%3A%2F%2Fnewsimg.hankookilbo.com%2F2019%2F04%2F29%2F201904291390027161_3.jpg&imgrefurl=https%3A%2F%2Fwww.hankookilbo.com%2FNews%2FRead%2F201904291390027161&tbnid=NpMi5nVF1QK1MM&vet=12ahUKEwjR1LT9oPfoAhUEUJQKHa2LAhMQMygBegUIARD-Ag..i&docid=k3mACyoxPXAFMM&w=680&h=448&q=%EA%B3%A0%EC%96%91%EC%9D%B4&ved=2ahUKEwjR1LT9oPfoAhUEUJQKHa2LAhMQMygBegUIARD-Ag',\r\n          Comments:[],\r\n    }], // 화면에 보일 포스트들\r\n    imagePaths : [], // 미리보기 이미지 경로\r\n    addPostErrorReason: false, // 포스트 업로드 실패 사유\r\n    isAddingPost : false, // 포스트 업로드 중 \r\n    postAdded: false, // 포스트 업로드 성공\r\n};\r\n\r\nconst dummyPost = {\r\n    User: {\r\n        id:1,\r\n        nickname: '게스트'\r\n    },\r\n    content: '나는 더미입니다.',\r\n    Comments: [],\r\n};\r\n\r\nconst dummyComment ={\r\n    User:{\r\n        id:1,\r\n        nickname:2,\r\n    },\r\n    createdAt: new Date(),\r\n    content: '더미 댓글입니다.',\r\n}\r\n\r\n//메인 포스트를 로딩\r\nexport const LOAD_MAIN_POSTS_REQUEST = 'LOAD_MAIN_POSTS_REQUEST';\r\nexport const LOAD_MAIN_POSTS_SUCCESS = 'LOAD_MAIN_POSTS_SUCCESS';\r\nexport const LOAD_MAIN_POSTS_FAILURE = 'LOAD_MAIN_POSTS_FAILURE';\r\n//해시태그 검색했을때 결과 로딩\r\nexport const LOAD_HASHTAG_POSTS_REQUEST ='LOAD_HASHTAG_POSTS_REQUEST';\r\nexport const LOAD_HASHTAG_POSTS_SUCCESS ='LOAD_HASHTAG_POSTS_SUCCESS';\r\nexport const LOAD_HASHTAG_POSTS_FAILURE ='LOAD_HASHTAG_POSTS_FAILURE';\r\n //사용자가 어떤 게시글을 썼는지 로딩\r\nexport const LOAD_USER_POSTS_REQUEST ='LOAD_USER_POSTS_REQUEST';\r\nexport const LOAD_USER_POSTS_SUCCESS ='LOAD_USER_POSTS_SUCCESS';\r\nexport const LOAD_USER_POSTS_FAILURE ='LOAD_USER_POSTS_FAILURE';\r\n//이미지 업로드\r\nexport const UPLOAD_IMAGES_REQUEST ='UPLOAD_IMAGES_REQUEST';\r\nexport const UPLOAD_IMAGES_SUCCESS ='UPLOAD_IMAGES_SUCCESS';\r\nexport const UPLOAD_IMAGES_FAILURE ='UPLOAD_IMAGES_FAILURE';\r\n//이미지 업로드 취소(동기)\r\nexport const REMOVE_IMAGE ='REMOVE_IMAGE';\r\n\r\n//포스트 추가\r\nexport const ADD_POST_REQUEST = 'ADD_POST_REQUEST';\r\nexport const ADD_POST_SUCCESS = 'ADD_POST_SUCCESS';\r\nexport const ADD_POST_FAILURE = 'ADD_POST_FAILURE';\r\n\r\n//포스트에 LIKE 누르는 액션\r\nexport const LIKE_POST_REQUEST = 'LIKE_POST_REQUEST';\r\nexport const LIKE_POST_SUCCESS = 'LIKE_POST_SUCCESS';\r\nexport const LIKE_POST_FAILURE = 'LIKE_POST_FAILURE';\r\n//포스트에 LIKE 취소하는 액션\r\nexport const UNLIKE_POST_REQUEST = 'UNLIKE_POST_REQUEST';\r\nexport const UNLIKE_POST_SUCCESS = 'UNLIKE_POST_SUCCESS';\r\nexport const UNLIKE_POST_FAILURE = 'UNLIKE_POST_FAILURE';\r\n//게시글에 댓글 남기기\r\nexport const ADD_COMMENT_REQUEST = 'ADD_COMMENT_REQUEST';\r\nexport const ADD_COMMENT_SUCCESS = 'ADD_COMMENT_SUCCESS';\r\nexport const ADD_COMMENT_FAILURE = 'ADD_COMMENT_FAILURE';\r\n//게시글 댓글 불러오기\r\nexport const LOAD_COMMENT_REQUEST = 'LOAD_COMMENT_REQUEST';\r\nexport const LOAD_COMMENT_SUCCESS = 'LOAD_COMMENT_SUCCESS';\r\nexport const LOAD_COMMENT_FAILURE = 'LOAD_COMMENT_FAILURE';\r\n//리트윗 하는 액션\r\nexport const RETWEET_REQUEST = 'RETWEET_REQUEST';\r\nexport const RETWEET_SUCCESS = 'RETWEET_SUCCESS';\r\nexport const RETWEET_FAILURE = 'RETWEET_FAILURE';\r\n//포스트 제거하는 액션\r\nexport const REMOVE_POST_REQUEST = 'REMOVE_POST_REQUEST';\r\nexport const REMOVE_POST_SUCCESS = 'REMOVE_POST_SUCCESS';\r\nexport const REMOVE_POST_FAILURE = 'REMOVE_POST_FAILURE';\r\n\r\nconst ADD_DUMMY = 'ADD_DUMMY' // ????\r\nconst addPost = {\r\n    type : ADD_POST_REQUEST,\r\n};\r\nconst addDummy = {\r\n    type: ADD_DUMMY,\r\n    data: {\r\n        content: 'Hello',\r\n        UserId:1,\r\n        User:{\r\n            nickname:'제로초',\r\n        },\r\n    },\r\n};\r\n\r\nconst reducer = ( state = initialState, action) => {\r\n    switch (action.type){\r\n        case ADD_POST_REQUEST: {\r\n            return {\r\n                ...state,\r\n                isAddingPost: true,\r\n                addPostErrorReason: '',\r\n                postAdded: false,\r\n            }\r\n        }\r\n        case ADD_POST_SUCCESS: {\r\n            return {\r\n                ...state,\r\n                isAddingPost: false,\r\n                mainPosts: [dummyPost, ...state.mainPosts],\r\n                postAdded: true,\r\n            }\r\n        }\r\n        case ADD_POST_FAILURE: {\r\n            return {\r\n                ...state,\r\n                isAddingPost: false,\r\n                addPostErrorReason: action.error,\r\n            }\r\n        }\r\n        case ADD_DUMMY: {\r\n            return {\r\n                ...state,\r\n                mainPosts: [action.data, ...state.mainPosts]\r\n            };\r\n        }\r\n        default:{\r\n            return{\r\n                ...state,\r\n            }\r\n        }\r\n    }\r\n}\r\n\r\nexport default reducer;"]},"metadata":{},"sourceType":"module"}