{"ast":null,"code":"import { all, fork, takeLatest, put, delay, call } from 'redux-saga/effects';\nimport { ADD_COMMENT_REQUEST, ADD_COMMENT_SUCCESS, ADD_COMMENT_FAILURE, ADD_POST_REQUEST, ADD_POST_FAILURE, ADD_POST_SUCCESS } from '../reducers/post';\nimport axios from 'axios';\nimport { Result } from 'antd';\n\nfunction addPostAPI(postData) {\n  return axios.post('/post', postData, {\n    withCredentials: true //로그인한 사람만 글을 쓸 수 있어서 쿠키를 같이 보내줌(로그인 인증을 했는지 여부 검토)\n\n  });\n}\n\nfunction* addPost(action) {\n  try {\n    const result = yield call(addPostAPI, action.data);\n    yield put({\n      type: ADD_POST_SUCCESS,\n      data: result.data\n    });\n  } catch (e) {\n    yield put({\n      type: ADD_POST_FAILURE,\n      error: e\n    });\n  }\n}\n\nfunction* watchAddPost() {\n  yield takeLatest(ADD_POST_REQUEST, addPost);\n}\n\nfunction addCommentAPI() {}\n\nfunction* addComment(action) {\n  try {\n    yield delay(2000);\n    yield put({\n      type: ADD_COMMENT_SUCCESS,\n      data: {\n        postId: action.data.postId\n      }\n    });\n  } catch (e) {\n    yield put({\n      type: ADD_COMMENT_FAILURE,\n      error: e\n    });\n  }\n} // function* watchAddPost(){\n//     yield takeLatest(ADD_COMMENT_REQUEST, addComment);\n// }\n\n\nexport default function* postSaga() {\n  yield all([fork(watchAddPost)]);\n}\n;","map":{"version":3,"sources":["C:/Users/Song/Desktop/projectpf/frontend/sagas/post.js"],"names":["all","fork","takeLatest","put","delay","call","ADD_COMMENT_REQUEST","ADD_COMMENT_SUCCESS","ADD_COMMENT_FAILURE","ADD_POST_REQUEST","ADD_POST_FAILURE","ADD_POST_SUCCESS","axios","Result","addPostAPI","postData","post","withCredentials","addPost","action","result","data","type","e","error","watchAddPost","addCommentAPI","addComment","postId","postSaga"],"mappings":"AAAA,SAASA,GAAT,EAAcC,IAAd,EAAoBC,UAApB,EAAgCC,GAAhC,EAAqCC,KAArC,EAA4CC,IAA5C,QAAwD,oBAAxD;AACA,SAASC,mBAAT,EAA8BC,mBAA9B,EAAmDC,mBAAnD,EAAyEC,gBAAzE,EAA2FC,gBAA3F,EAA6GC,gBAA7G,QAAoI,kBAApI;AACA,OAAOC,KAAP,MAAkB,OAAlB;AACA,SAASC,MAAT,QAAuB,MAAvB;;AAEA,SAASC,UAAT,CAAoBC,QAApB,EAA6B;AACzB,SAAOH,KAAK,CAACI,IAAN,CAAW,OAAX,EAAoBD,QAApB,EAA8B;AACjCE,IAAAA,eAAe,EAAE,IADgB,CACV;;AADU,GAA9B,CAAP;AAGH;;AAED,UAAUC,OAAV,CAAkBC,MAAlB,EAAyB;AACrB,MAAG;AACC,UAAMC,MAAM,GAAG,MAAMf,IAAI,CAACS,UAAD,EAAaK,MAAM,CAACE,IAApB,CAAzB;AACA,UAAMlB,GAAG,CAAC;AACNmB,MAAAA,IAAI,EAACX,gBADC;AAENU,MAAAA,IAAI,EAAED,MAAM,CAACC;AAFP,KAAD,CAAT;AAIH,GAND,CAME,OAAME,CAAN,EAAQ;AACN,UAAMpB,GAAG,CAAC;AACNmB,MAAAA,IAAI,EAACZ,gBADC;AAENc,MAAAA,KAAK,EAAED;AAFD,KAAD,CAAT;AAIH;AACJ;;AACD,UAAUE,YAAV,GAAwB;AACpB,QAAMvB,UAAU,CAACO,gBAAD,EAAmBS,OAAnB,CAAhB;AACH;;AAID,SAASQ,aAAT,GAAwB,CAEvB;;AAED,UAAUC,UAAV,CAAqBR,MAArB,EAA4B;AACxB,MAAG;AACC,UAAMf,KAAK,CAAC,IAAD,CAAX;AACA,UAAMD,GAAG,CAAC;AACNmB,MAAAA,IAAI,EAACf,mBADC;AAENc,MAAAA,IAAI,EAAC;AACDO,QAAAA,MAAM,EAAET,MAAM,CAACE,IAAP,CAAYO;AADnB;AAFC,KAAD,CAAT;AAMH,GARD,CAQE,OAAML,CAAN,EAAQ;AACN,UAAMpB,GAAG,CAAC;AACNmB,MAAAA,IAAI,EAACd,mBADC;AAENgB,MAAAA,KAAK,EAAED;AAFD,KAAD,CAAT;AAIH;AACJ,C,CAGD;AACA;AACA;;;AAEA,eAAe,UAAUM,QAAV,GAAqB;AAChC,QAAM7B,GAAG,CAAC,CACNC,IAAI,CAACwB,YAAD,CADE,CAAD,CAAT;AAGH;AAAA","sourcesContent":["import { all, fork, takeLatest, put, delay, call } from 'redux-saga/effects';\r\nimport { ADD_COMMENT_REQUEST, ADD_COMMENT_SUCCESS, ADD_COMMENT_FAILURE,  ADD_POST_REQUEST, ADD_POST_FAILURE, ADD_POST_SUCCESS} from '../reducers/post';\r\nimport axios from 'axios';\r\nimport { Result } from 'antd';\r\n\r\nfunction addPostAPI(postData){\r\n    return axios.post('/post', postData, {\r\n        withCredentials: true, //로그인한 사람만 글을 쓸 수 있어서 쿠키를 같이 보내줌(로그인 인증을 했는지 여부 검토)\r\n    });\r\n}\r\n\r\nfunction* addPost(action){\r\n    try{\r\n        const result = yield call(addPostAPI, action.data);\r\n        yield put({\r\n            type:ADD_POST_SUCCESS,\r\n            data: result.data,\r\n        });\r\n    } catch(e){\r\n        yield put({\r\n            type:ADD_POST_FAILURE,\r\n            error: e,\r\n        });\r\n    }\r\n}\r\nfunction* watchAddPost(){\r\n    yield takeLatest(ADD_POST_REQUEST, addPost);\r\n}\r\n\r\n\r\n\r\nfunction addCommentAPI(){\r\n\r\n}\r\n\r\nfunction* addComment(action){\r\n    try{\r\n        yield delay(2000);\r\n        yield put({\r\n            type:ADD_COMMENT_SUCCESS,\r\n            data:{\r\n                postId: action.data.postId,\r\n            },\r\n        });\r\n    } catch(e){\r\n        yield put({\r\n            type:ADD_COMMENT_FAILURE,\r\n            error: e,\r\n        });\r\n    }\r\n}\r\n\r\n\r\n// function* watchAddPost(){\r\n//     yield takeLatest(ADD_COMMENT_REQUEST, addComment);\r\n// }\r\n\r\nexport default function* postSaga() {\r\n    yield all([\r\n        fork(watchAddPost),\r\n    ])\r\n};"]},"metadata":{},"sourceType":"module"}